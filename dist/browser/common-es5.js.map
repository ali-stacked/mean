{"version":3,"sources":["common-es5.js","webpack:///src/app/resolvers/dashboards.resolver.ts","webpack:///src/app/resolvers/grid.resolver.ts","webpack:///src/app/services/dashboards.service.ts","webpack:///src/app/services/news.service.ts"],"names":[],"mappings":"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","file":"x","sourcesContent":["(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[\"common\"],{\n\n/***/ \"./src/app/resolvers/dashboards.resolver.ts\":\n/*!**************************************************!*\\\n  !*** ./src/app/resolvers/dashboards.resolver.ts ***!\n  \\**************************************************/\n/*! exports provided: EcommerceDashboardResolver, DataVizResolver, CrmDashboardResolver */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EcommerceDashboardResolver\", function() { return EcommerceDashboardResolver; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DataVizResolver\", function() { return DataVizResolver; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CrmDashboardResolver\", function() { return CrmDashboardResolver; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ \"./node_modules/@angular/core/fesm2015/core.js\");\n/* harmony import */ var _services_dashboards_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../services/dashboards.service */ \"./src/app/services/dashboards.service.ts\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ \"./node_modules/rxjs/_esm2015/index.js\");\n\n\n\n\nlet EcommerceDashboardResolver = class EcommerceDashboardResolver {\n    constructor(dashboardService) {\n        this.dashboardService = dashboardService;\n    }\n    resolve() {\n        return new Promise((resolve, reject) => {\n            Object(rxjs__WEBPACK_IMPORTED_MODULE_3__[\"forkJoin\"])([\n                this.dashboardService.getRecentOrdersTableData(),\n                this.dashboardService.getLatestTicketsTableData()\n            ])\n                .subscribe((data) => {\n                return resolve({\n                    recentOrdersData: data[0],\n                    latestTicketsData: data[1]\n                });\n            });\n        });\n    }\n};\nEcommerceDashboardResolver.ctorParameters = () => [\n    { type: _services_dashboards_service__WEBPACK_IMPORTED_MODULE_2__[\"DashboardsService\"] }\n];\nEcommerceDashboardResolver = tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Injectable\"])()\n], EcommerceDashboardResolver);\n\nlet DataVizResolver = class DataVizResolver {\n    constructor(dashboardService) {\n        this.dashboardService = dashboardService;\n    }\n    resolve() {\n        return new Promise((resolve, reject) => {\n            Object(rxjs__WEBPACK_IMPORTED_MODULE_3__[\"forkJoin\"])([\n                this.dashboardService.getAllStatesCovid(),\n                this.dashboardService.getTeam(),\n                this.dashboardService.getNYCovid(),\n                this.dashboardService.getNJCovid(),\n                this.dashboardService.getPACovid(),\n                this.dashboardService.getMICovid(),\n                this.dashboardService.getMACovid()\n            ])\n                .subscribe((data) => {\n                return resolve({\n                    USA: data[0],\n                    team: data[1],\n                    NY: data[2],\n                    NJ: data[3],\n                    PA: data[4],\n                    MI: data[5],\n                    MA: data[6]\n                });\n            });\n        });\n    }\n};\nDataVizResolver.ctorParameters = () => [\n    { type: _services_dashboards_service__WEBPACK_IMPORTED_MODULE_2__[\"DashboardsService\"] }\n];\nDataVizResolver = tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Injectable\"])()\n], DataVizResolver);\n\nlet CrmDashboardResolver = class CrmDashboardResolver {\n    constructor(dashboardService) {\n        this.dashboardService = dashboardService;\n    }\n    resolve() {\n        return new Promise((resolve, reject) => {\n            Object(rxjs__WEBPACK_IMPORTED_MODULE_3__[\"forkJoin\"])([\n                this.dashboardService.getLeadsTableData(),\n                this.dashboardService.getTopSellersData(),\n                this.dashboardService.getLaggingSellersData(),\n                this.dashboardService.getArticles(),\n                this.dashboardService.getTasks(),\n                this.dashboardService.getTeam(),\n                this.dashboardService.getAllStatesCovid(),\n                this.dashboardService.getNYCovid(),\n                this.dashboardService.getNJCovid(),\n                this.dashboardService.getPACovid(),\n                this.dashboardService.getMICovid(),\n                this.dashboardService.getMACovid(),\n                this.dashboardService.getDecCovid(),\n                this.dashboardService.getJanCovid(),\n                this.dashboardService.getNovCovid()\n            ])\n                .subscribe((data) => {\n                return resolve({\n                    leadsData: data[0],\n                    topSellers: data[1],\n                    laggingSellers: data[2],\n                    articles: data[3],\n                    tasks: data[4],\n                    team: data[5],\n                    NY: data[6],\n                    NJ: data[7],\n                    PA: data[8],\n                    MI: data[9],\n                    MA: data[10],\n                    nov: data[11],\n                    dec: data[12],\n                    jan: data[13],\n                    covid: data[14]\n                });\n            });\n        });\n    }\n};\nCrmDashboardResolver.ctorParameters = () => [\n    { type: _services_dashboards_service__WEBPACK_IMPORTED_MODULE_2__[\"DashboardsService\"] }\n];\nCrmDashboardResolver = tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Injectable\"])()\n], CrmDashboardResolver);\n\n// @Injectable()\n// export class StraightNastyCovidResolver implements Resolve<any> {\n//   constructor(private dashboardService: DashboardsService) {}\n//   resolve() {\n//     return new Promise((resolve, reject) => {\n//       forkJoin([\n//         this.dashboardService.getLeadsTableData(),\n//         this.dashboardService.getTopSellersData(),\n//         this.dashboardService.getLaggingSellersData(),\n//         this.dashboardService.getArticles(),\n//         this.dashboardService.getTasks(),\n//         this.dashboardService.getTeam()\n//       ])\n//           .subscribe((data: any) => {\n//             return resolve({\n//               leadsData: data[0],\n//               topSellers: data[1],\n//               laggingSellers: data[2],\n//               articles: data[3],\n//               tasks: data[4],\n//               team: data[5]\n//             });\n//           });\n//     });\n//   }\n// }\n\n\n/***/ }),\n\n/***/ \"./src/app/resolvers/grid.resolver.ts\":\n/*!********************************************!*\\\n  !*** ./src/app/resolvers/grid.resolver.ts ***!\n  \\********************************************/\n/*! exports provided: RegularTablesResolver, CovidTablesResolver */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RegularTablesResolver\", function() { return RegularTablesResolver; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CovidTablesResolver\", function() { return CovidTablesResolver; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ \"./node_modules/@angular/core/fesm2015/core.js\");\n/* harmony import */ var _services_dashboards_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../services/dashboards.service */ \"./src/app/services/dashboards.service.ts\");\n\n\n\nlet RegularTablesResolver = class RegularTablesResolver {\n    constructor(gridService) {\n        this.gridService = gridService;\n    }\n    resolve() {\n        return new Promise((resolve, reject) => {\n            this.gridService.getAllStatesCovid()\n                .subscribe((tableData) => {\n                return resolve(tableData);\n            });\n        });\n    }\n};\nRegularTablesResolver.ctorParameters = () => [\n    { type: _services_dashboards_service__WEBPACK_IMPORTED_MODULE_2__[\"DashboardsService\"] }\n];\nRegularTablesResolver = tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Injectable\"])()\n], RegularTablesResolver);\n\nlet CovidTablesResolver = class CovidTablesResolver {\n    constructor(covidService) {\n        this.covidService = covidService;\n    }\n    resolve() {\n        return new Promise((resolve, reject) => {\n            this.covidService.getAllStatesCovid()\n                .subscribe((tableData) => {\n                return resolve(tableData);\n            });\n        });\n    }\n};\nCovidTablesResolver.ctorParameters = () => [\n    { type: _services_dashboards_service__WEBPACK_IMPORTED_MODULE_2__[\"DashboardsService\"] }\n];\nCovidTablesResolver = tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Injectable\"])()\n], CovidTablesResolver);\n\n\n\n/***/ }),\n\n/***/ \"./src/app/services/dashboards.service.ts\":\n/*!************************************************!*\\\n  !*** ./src/app/services/dashboards.service.ts ***!\n  \\************************************************/\n/*! exports provided: DashboardsService */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DashboardsService\", function() { return DashboardsService; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ \"./node_modules/@angular/core/fesm2015/core.js\");\n/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ \"./node_modules/@angular/common/fesm2015/http.js\");\n\n\n\nlet DashboardsService = class DashboardsService {\n    constructor(http) {\n        this.http = http;\n        // https://api.covidtracking.com/v1/us/20201201.json\n        this.currentApi = 'https://api.covidtracking.com/v1/us/current.json';\n        this.janOneApi = 'https://api.covidtracking.com/v1/us/20210101.json';\n        this.novOneApi = 'https://api.covidtracking.com/v1/us/20201101.json';\n        this.decOneApi = \"https://api.covidtracking.com/v1/us/20201201.json\";\n        this.pacovidApi = 'https://api.covidtracking.com/v1/states/pa/info.json';\n        this.njcovidApi = 'https://api.covidtracking.com/v1/states/nj/info.json';\n        this.nycovidApi = 'https://api.covidtracking.com/v1/states/ma/info.json';\n        this.macovidApi = 'https://api.covidtracking.com/v1/states/ca/info.json';\n        this.micovidApi = 'https://api.covidtracking.com/v1/states/mi/info.json';\n        this.covidApi = 'https://api.covidtracking.com/v1/us/current.json';\n        this.baseApi = 'https://api.covidtracking.com/v1/us/';\n        // historical api calls\n        this.lastDecCovidApi = 'https://api.covidtracking.com/v1/us/20201201.json';\n    }\n    getCovidByDate(param) {\n        return this.http.get(this.baseApi + param + `.json`);\n    }\n    getCovidDeath() {\n        return this.http.get(this.covidApi);\n    }\n    // getCovidFields(): Observable<BigCovidProps[]> {\n    //   return this.http.get<BigCovidProps[]>(this.covidApi).pipe(\n    //       map((res) =>\n    //\n    //     )\n    //   );\n    // }\n    getCovidYesterday() {\n        return this.http.get(this.lastDecCovidApi);\n    }\n    getAllStatesCovid() {\n        return this.http.get(this.covidApi);\n    }\n    getPACovid() {\n        return this.http.get(this.pacovidApi);\n    }\n    getDecCovid() {\n        return this.http.get(this.decOneApi);\n    }\n    getJanCovid() {\n        return this.http.get(this.janOneApi);\n    }\n    getNovCovid() {\n        return this.http.get(this.novOneApi);\n    }\n    getNJCovid() {\n        return this.http.get(this.njcovidApi);\n    }\n    getNYCovid() {\n        return this.http.get(this.nycovidApi);\n    }\n    getMACovid() {\n        return this.http.get(this.macovidApi);\n    }\n    getMICovid() {\n        return this.http.get(this.micovidApi);\n    }\n    // team dashboard\n    getTeam() {\n        return this.http.get('/assets/data/team.json');\n    }\n    // ecommerce dashboard\n    getRecentOrdersTableData() {\n        return this.http.get('/assets/data/ecommerce-dashboard/recent-orders-table.json');\n    }\n    getLatestTicketsTableData() {\n        return this.http.get('/assets/data/ecommerce-dashboard/latest-tickets-table.json');\n    }\n    // crm dashboard\n    getLeadsTableData() {\n        return this.http.get('/assets/data/crm-dashboard/leads-table.json');\n    }\n    getTopSellersData() {\n        return this.http.get('/assets/data/crm-dashboard/top-sellers.json');\n    }\n    getLaggingSellersData() {\n        return this.http.get('/assets/data/crm-dashboard/lagging-sellers.json');\n    }\n    getArticles() {\n        return this.http.get('/assets/data/crm-dashboard/articles.json');\n    }\n    getTasks() {\n        return this.http.get('/assets/data/crm-dashboard/tasks.json');\n    }\n};\nDashboardsService.ctorParameters = () => [\n    { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_2__[\"HttpClient\"] }\n];\nDashboardsService = tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Injectable\"])()\n], DashboardsService);\n\n\n\n/***/ }),\n\n/***/ \"./src/app/services/news.service.ts\":\n/*!******************************************!*\\\n  !*** ./src/app/services/news.service.ts ***!\n  \\******************************************/\n/*! exports provided: NewsService */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NewsService\", function() { return NewsService; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ \"./node_modules/@angular/core/fesm2015/core.js\");\n/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ \"./node_modules/@angular/common/fesm2015/http.js\");\n\n\n\nlet NewsService = class NewsService {\n    constructor(http) {\n        this.http = http;\n        this.newsApi = 'https://newsapi.org/v2/top-headlines?country=us&apiKey=e0f7cab22d204d0b9091502244fd8ecf';\n        this.covidApi = 'https://api.covidtracking.com/v1/us/current.json';\n    }\n    getNewsHeadlines() {\n        return this.http.get(this.newsApi);\n    }\n    getCovidData() {\n        return this.http.get(this.covidApi);\n    }\n};\nNewsService.ctorParameters = () => [\n    { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_2__[\"HttpClient\"] }\n];\nNewsService = tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Injectable\"])()\n], NewsService);\n\n\n\n/***/ })\n\n}]);\n//# sourceMappingURL=common-es2015.js.map","import { Injectable } from '@angular/core';\r\nimport { Resolve } from '@angular/router';\r\nimport { DashboardsService } from '../services/dashboards.service';\r\nimport { forkJoin } from 'rxjs';\r\n\r\n\r\n@Injectable()\r\nexport class EcommerceDashboardResolver implements Resolve<any> {\r\n  constructor(private dashboardService: DashboardsService) {}\r\n  resolve() {\r\n    return new Promise((resolve, reject) => {\r\n      forkJoin([\r\n        this.dashboardService.getRecentOrdersTableData(),\r\n        this.dashboardService.getLatestTicketsTableData()\r\n      ])\r\n      .subscribe((data: any) => {\r\n        return resolve({\r\n          recentOrdersData: data[0],\r\n          latestTicketsData: data[1]\r\n        });\r\n      });\r\n    });\r\n  }\r\n}\r\n@Injectable()\r\nexport class DataVizResolver implements Resolve<any> {\r\n  constructor(private dashboardService: DashboardsService) {}\r\n  resolve() {\r\n    return new Promise((resolve, reject) => {\r\n      forkJoin([\r\n        this.dashboardService.getAllStatesCovid(),\r\n        this.dashboardService.getTeam(),\r\n        this.dashboardService.getNYCovid(),\r\n        this.dashboardService.getNJCovid(),\r\n        this.dashboardService.getPACovid(),\r\n        this.dashboardService.getMICovid(),\r\n        this.dashboardService.getMACovid()\r\n      ])\r\n          .subscribe((data: any) => {\r\n            return resolve({\r\n              USA: data[0],\r\n              team: data[1],\r\n              NY: data[2],\r\n              NJ: data[3],\r\n              PA: data[4],\r\n              MI: data[5],\r\n              MA: data[6]\r\n\r\n            });\r\n          });\r\n    });\r\n  }\r\n}\r\n  \r\n\r\n@Injectable()\r\nexport class CrmDashboardResolver implements Resolve<any> {\r\n  constructor(private dashboardService: DashboardsService) {}\r\n  resolve() {\r\n    return new Promise((resolve, reject) => {\r\n      forkJoin([\r\n        this.dashboardService.getLeadsTableData(),\r\n        this.dashboardService.getTopSellersData(),\r\n        this.dashboardService.getLaggingSellersData(),\r\n        this.dashboardService.getArticles(),\r\n        this.dashboardService.getTasks(),\r\n        this.dashboardService.getTeam(),\r\n        this.dashboardService.getAllStatesCovid(),\r\n        this.dashboardService.getNYCovid(),\r\n        this.dashboardService.getNJCovid(),\r\n        this.dashboardService.getPACovid(),\r\n        this.dashboardService.getMICovid(),\r\n        this.dashboardService.getMACovid(),\r\n        this.dashboardService.getDecCovid(),\r\n        this.dashboardService.getJanCovid(),\r\n        this.dashboardService.getNovCovid()\r\n\r\n      ])\r\n      .subscribe((data: any) => {\r\n        return resolve({\r\n          leadsData: data[0],\r\n          topSellers: data[1],\r\n          laggingSellers: data[2],\r\n          articles: data[3],\r\n          tasks: data[4],\r\n          team: data[5],\r\n          NY: data[6],\r\n          NJ: data[7],\r\n          PA: data[8],\r\n          MI: data[9],\r\n          MA: data[10],\r\n          nov: data[11],\r\n          dec: data[12],\r\n          jan: data[13],\r\n          covid: data[14]\r\n\r\n        });\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\n// @Injectable()\r\n// export class StraightNastyCovidResolver implements Resolve<any> {\r\n//   constructor(private dashboardService: DashboardsService) {}\r\n//   resolve() {\r\n//     return new Promise((resolve, reject) => {\r\n//       forkJoin([\r\n//         this.dashboardService.getLeadsTableData(),\r\n//         this.dashboardService.getTopSellersData(),\r\n//         this.dashboardService.getLaggingSellersData(),\r\n//         this.dashboardService.getArticles(),\r\n//         this.dashboardService.getTasks(),\r\n//         this.dashboardService.getTeam()\r\n//       ])\r\n//           .subscribe((data: any) => {\r\n//             return resolve({\r\n//               leadsData: data[0],\r\n//               topSellers: data[1],\r\n//               laggingSellers: data[2],\r\n//               articles: data[3],\r\n//               tasks: data[4],\r\n//               team: data[5]\r\n//             });\r\n//           });\r\n//     });\r\n//   }\r\n// }\r\n","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport {DashboardsService} from \"../services/dashboards.service\";\n\n@Injectable()\nexport class RegularTablesResolver implements Resolve<any> {\n  constructor(private gridService: DashboardsService) {}\n    resolve() {\n    return new Promise((resolve, reject) => {\n      this.gridService.getAllStatesCovid()\n      .subscribe((tableData: any) => {\n        return resolve(tableData);\n      });\n    });\n  }\n}\n\n@Injectable()\nexport class CovidTablesResolver implements Resolve<any> {\n  constructor(private covidService: DashboardsService) {}\n  resolve() {\n    return new Promise((resolve, reject) => {\n      this.covidService.getAllStatesCovid()\n          .subscribe((tableData: any) => {\n            return resolve(tableData);\n          });\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from \"rxjs/operators\";\nimport {CovidInterface} from \"../interfaces/covid.interface\";\nimport {BehaviorSubject} from \"rxjs\";\nimport {BigCovidProps} from \"../interfaces/covid.class\";\nimport {NumbersInterface} from \"../interfaces/numbers.interface\";\nimport {deaths} from \"../interfaces/numbers.interface\";\n\n@Injectable()\nexport class DashboardsService {\n\n // https://api.covidtracking.com/v1/us/20201201.json\n   private currentApi: string = 'https://api.covidtracking.com/v1/us/current.json';\n\n private janOneApi: string ='https://api.covidtracking.com/v1/us/20210101.json';\n private novOneApi: string = 'https://api.covidtracking.com/v1/us/20201101.json';\nprivate decOneApi: string = \"https://api.covidtracking.com/v1/us/20201201.json\";\n  private pacovidApi: string = 'https://api.covidtracking.com/v1/states/pa/info.json';\n  private njcovidApi: string = 'https://api.covidtracking.com/v1/states/nj/info.json';\n  private nycovidApi: string = 'https://api.covidtracking.com/v1/states/ma/info.json';\n  private macovidApi: string = 'https://api.covidtracking.com/v1/states/ca/info.json';\n  private micovidApi: string = 'https://api.covidtracking.com/v1/states/mi/info.json';\n  private covidApi: string = 'https://api.covidtracking.com/v1/us/current.json';\n  private baseApi : string = 'https://api.covidtracking.com/v1/us/';\n// historical api calls\n\n private lastDecCovidApi : string = 'https://api.covidtracking.com/v1/us/20201201.json';\n  constructor(private http: HttpClient) {\n  }\n\n  getCovidByDate(param:NumbersInterface):Observable<NumbersInterface[]> {\n      return this.http.get<NumbersInterface[]>(this.baseApi+param + `.json`);\n  }\n\n  getCovidDeath():Observable<deaths> {\n      return this.http.get<deaths>(this.covidApi);\n  }\n\n\n  // getCovidFields(): Observable<BigCovidProps[]> {\n  //   return this.http.get<BigCovidProps[]>(this.covidApi).pipe(\n  //       map((res) =>\n  //\n  //     )\n  //   );\n  // }\n\n    getCovidYesterday(): Observable<BigCovidProps[]> {\n        return this.http.get<BigCovidProps[]>(this.lastDecCovidApi);\n    }\n\n  getAllStatesCovid(): Observable<any> {\n    return this.http.get<any>(this.covidApi);\n  }\n\n  getPACovid(): Observable<any> {\n    return this.http.get<any>(this.pacovidApi);\n  }\n  getDecCovid(): Observable<any> {\n    return this.http.get<any>(this.decOneApi);\n  }\n    getJanCovid(): Observable<any> {\n    return this.http.get<any>(this.janOneApi);\n  }\n     getNovCovid(): Observable<any> {\n    return this.http.get<any>(this.novOneApi);\n  }\n\n  getNJCovid(): Observable<any> {\n    return this.http.get<any>(this.njcovidApi);\n  }\n\n  getNYCovid(): Observable<any> {\n    return this.http.get<any>(this.nycovidApi);\n  }\n\n  getMACovid(): Observable<any> {\n    return this.http.get<any>(this.macovidApi);\n  }\n\n  getMICovid(): Observable<any> {\n    return this.http.get<any>(this.micovidApi);\n  }\n\n  // team dashboard\n  getTeam(): Observable<any> {\n    return this.http.get('/assets/data/team.json');\n  }\n\n  // ecommerce dashboard\n  getRecentOrdersTableData(): Observable<any> {\n    return this.http.get('/assets/data/ecommerce-dashboard/recent-orders-table.json');\n  }\n\n  getLatestTicketsTableData(): Observable<any> {\n    return this.http.get('/assets/data/ecommerce-dashboard/latest-tickets-table.json');\n  }\n\n  // crm dashboard\n  getLeadsTableData(): Observable<any> {\n    return this.http.get('/assets/data/crm-dashboard/leads-table.json');\n  }\n\n  getTopSellersData(): Observable<any> {\n    return this.http.get('/assets/data/crm-dashboard/top-sellers.json');\n  }\n\n  getLaggingSellersData(): Observable<any> {\n    return this.http.get('/assets/data/crm-dashboard/lagging-sellers.json');\n  }\n\n  getArticles(): Observable<any> {\n    return this.http.get('/assets/data/crm-dashboard/articles.json');\n  }\n\n  getTasks(): Observable<any> {\n    return this.http.get('/assets/data/crm-dashboard/tasks.json');\n  }\n}\n\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport {catchError, distinctUntilChanged, map, tap} from 'rxjs/operators';\nimport {News} from '../interfaces/news.interface';\nimport {BehaviorSubject} from \"rxjs\";\n\n\n@Injectable()\nexport class NewsService {\n    private newsApi: string = 'https://newsapi.org/v2/top-headlines?country=us&apiKey=e0f7cab22d204d0b9091502244fd8ecf';\n    private covidApi: string = 'https://api.covidtracking.com/v1/us/current.json';\n\n\n    constructor(private http: HttpClient) {\n    }\n\n    getNewsHeadlines(): Observable<any> {\n        return this.http.get<any>(this.newsApi);\n    }\n\n\n    getCovidData(): Observable<any> {\n        return this.http.get<any>(this.covidApi);\n    }\n\n\n\n\n\n\n}\n"]}