{"version":3,"sources":["./src/app/resolvers/dashboards.resolver.ts","./src/app/resolvers/grid.resolver.ts","./src/app/services/dashboards.service.ts","./src/app/services/news.service.ts"],"names":[],"mappings":"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","file":"common-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Resolve } from '@angular/router';\r\nimport { DashboardsService } from '../services/dashboards.service';\r\nimport { forkJoin } from 'rxjs';\r\n\r\n\r\n@Injectable()\r\nexport class EcommerceDashboardResolver implements Resolve<any> {\r\n  constructor(private dashboardService: DashboardsService) {}\r\n  resolve() {\r\n    return new Promise((resolve, reject) => {\r\n      forkJoin([\r\n        this.dashboardService.getRecentOrdersTableData(),\r\n        this.dashboardService.getLatestTicketsTableData()\r\n      ])\r\n      .subscribe((data: any) => {\r\n        return resolve({\r\n          recentOrdersData: data[0],\r\n          latestTicketsData: data[1]\r\n        });\r\n      });\r\n    });\r\n  }\r\n}\r\n@Injectable()\r\nexport class DataVizResolver implements Resolve<any> {\r\n  constructor(private dashboardService: DashboardsService) {}\r\n  resolve() {\r\n    return new Promise((resolve, reject) => {\r\n      forkJoin([\r\n        this.dashboardService.getAllStatesCovid(),\r\n        this.dashboardService.getTeam(),\r\n        this.dashboardService.getNYCovid(),\r\n        this.dashboardService.getNJCovid(),\r\n        this.dashboardService.getPACovid(),\r\n        this.dashboardService.getMICovid(),\r\n        this.dashboardService.getMACovid()\r\n      ])\r\n          .subscribe((data: any) => {\r\n            return resolve({\r\n              USA: data[0],\r\n              team: data[1],\r\n              NY: data[2],\r\n              NJ: data[3],\r\n              PA: data[4],\r\n              MI: data[5],\r\n              MA: data[6]\r\n\r\n            });\r\n          });\r\n    });\r\n  }\r\n}\r\n  \r\n\r\n@Injectable()\r\nexport class CrmDashboardResolver implements Resolve<any> {\r\n  constructor(private dashboardService: DashboardsService) {}\r\n  resolve() {\r\n    return new Promise((resolve, reject) => {\r\n      forkJoin([\r\n        this.dashboardService.getLeadsTableData(),\r\n        this.dashboardService.getTopSellersData(),\r\n        this.dashboardService.getLaggingSellersData(),\r\n        this.dashboardService.getArticles(),\r\n        this.dashboardService.getTasks(),\r\n        this.dashboardService.getTeam(),\r\n        this.dashboardService.getAllStatesCovid(),\r\n        this.dashboardService.getNYCovid(),\r\n        this.dashboardService.getNJCovid(),\r\n        this.dashboardService.getPACovid(),\r\n        this.dashboardService.getMICovid(),\r\n        this.dashboardService.getMACovid(),\r\n        this.dashboardService.getDecCovid(),\r\n        this.dashboardService.getJanCovid(),\r\n        this.dashboardService.getNovCovid()\r\n\r\n      ])\r\n      .subscribe((data: any) => {\r\n        return resolve({\r\n          leadsData: data[0],\r\n          topSellers: data[1],\r\n          laggingSellers: data[2],\r\n          articles: data[3],\r\n          tasks: data[4],\r\n          team: data[5],\r\n          NY: data[6],\r\n          NJ: data[7],\r\n          PA: data[8],\r\n          MI: data[9],\r\n          MA: data[10],\r\n          nov: data[11],\r\n          dec: data[12],\r\n          jan: data[13],\r\n          covid: data[14]\r\n\r\n        });\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\n// @Injectable()\r\n// export class StraightNastyCovidResolver implements Resolve<any> {\r\n//   constructor(private dashboardService: DashboardsService) {}\r\n//   resolve() {\r\n//     return new Promise((resolve, reject) => {\r\n//       forkJoin([\r\n//         this.dashboardService.getLeadsTableData(),\r\n//         this.dashboardService.getTopSellersData(),\r\n//         this.dashboardService.getLaggingSellersData(),\r\n//         this.dashboardService.getArticles(),\r\n//         this.dashboardService.getTasks(),\r\n//         this.dashboardService.getTeam()\r\n//       ])\r\n//           .subscribe((data: any) => {\r\n//             return resolve({\r\n//               leadsData: data[0],\r\n//               topSellers: data[1],\r\n//               laggingSellers: data[2],\r\n//               articles: data[3],\r\n//               tasks: data[4],\r\n//               team: data[5]\r\n//             });\r\n//           });\r\n//     });\r\n//   }\r\n// }\r\n","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport {DashboardsService} from \"../services/dashboards.service\";\n\n@Injectable()\nexport class RegularTablesResolver implements Resolve<any> {\n  constructor(private gridService: DashboardsService) {}\n    resolve() {\n    return new Promise((resolve, reject) => {\n      this.gridService.getAllStatesCovid()\n      .subscribe((tableData: any) => {\n        return resolve(tableData);\n      });\n    });\n  }\n}\n\n@Injectable()\nexport class CovidTablesResolver implements Resolve<any> {\n  constructor(private covidService: DashboardsService) {}\n  resolve() {\n    return new Promise((resolve, reject) => {\n      this.covidService.getAllStatesCovid()\n          .subscribe((tableData: any) => {\n            return resolve(tableData);\n          });\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from \"rxjs/operators\";\nimport {CovidInterface} from \"../interfaces/covid.interface\";\nimport {BehaviorSubject} from \"rxjs\";\nimport {BigCovidProps} from \"../interfaces/covid.class\";\nimport {NumbersInterface} from \"../interfaces/numbers.interface\";\nimport {deaths} from \"../interfaces/numbers.interface\";\n\n@Injectable()\nexport class DashboardsService {\n\n // https://api.covidtracking.com/v1/us/20201201.json\n   private currentApi: string = 'https://api.covidtracking.com/v1/us/current.json';\n\n private janOneApi: string ='https://api.covidtracking.com/v1/us/20210101.json';\n private novOneApi: string = 'https://api.covidtracking.com/v1/us/20201101.json';\nprivate decOneApi: string = \"https://api.covidtracking.com/v1/us/20201201.json\";\n  private pacovidApi: string = 'https://api.covidtracking.com/v1/states/pa/info.json';\n  private njcovidApi: string = 'https://api.covidtracking.com/v1/states/nj/info.json';\n  private nycovidApi: string = 'https://api.covidtracking.com/v1/states/ma/info.json';\n  private macovidApi: string = 'https://api.covidtracking.com/v1/states/ca/info.json';\n  private micovidApi: string = 'https://api.covidtracking.com/v1/states/mi/info.json';\n  private covidApi: string = 'https://api.covidtracking.com/v1/us/current.json';\n  private baseApi : string = 'https://api.covidtracking.com/v1/us/';\n// historical api calls\n\n private lastDecCovidApi : string = 'https://api.covidtracking.com/v1/us/20201201.json';\n  constructor(private http: HttpClient) {\n  }\n\n  getCovidByDate(param:NumbersInterface):Observable<NumbersInterface[]> {\n      return this.http.get<NumbersInterface[]>(this.baseApi+param + `.json`);\n  }\n\n  getCovidDeath():Observable<deaths> {\n      return this.http.get<deaths>(this.covidApi);\n  }\n\n\n  // getCovidFields(): Observable<BigCovidProps[]> {\n  //   return this.http.get<BigCovidProps[]>(this.covidApi).pipe(\n  //       map((res) =>\n  //\n  //     )\n  //   );\n  // }\n\n    getCovidYesterday(): Observable<BigCovidProps[]> {\n        return this.http.get<BigCovidProps[]>(this.lastDecCovidApi);\n    }\n\n  getAllStatesCovid(): Observable<any> {\n    return this.http.get<any>(this.covidApi);\n  }\n\n  getPACovid(): Observable<any> {\n    return this.http.get<any>(this.pacovidApi);\n  }\n  getDecCovid(): Observable<any> {\n    return this.http.get<any>(this.decOneApi);\n  }\n    getJanCovid(): Observable<any> {\n    return this.http.get<any>(this.janOneApi);\n  }\n     getNovCovid(): Observable<any> {\n    return this.http.get<any>(this.novOneApi);\n  }\n\n  getNJCovid(): Observable<any> {\n    return this.http.get<any>(this.njcovidApi);\n  }\n\n  getNYCovid(): Observable<any> {\n    return this.http.get<any>(this.nycovidApi);\n  }\n\n  getMACovid(): Observable<any> {\n    return this.http.get<any>(this.macovidApi);\n  }\n\n  getMICovid(): Observable<any> {\n    return this.http.get<any>(this.micovidApi);\n  }\n\n  // team dashboard\n  getTeam(): Observable<any> {\n    return this.http.get('/assets/data/team.json');\n  }\n\n  // ecommerce dashboard\n  getRecentOrdersTableData(): Observable<any> {\n    return this.http.get('/assets/data/ecommerce-dashboard/recent-orders-table.json');\n  }\n\n  getLatestTicketsTableData(): Observable<any> {\n    return this.http.get('/assets/data/ecommerce-dashboard/latest-tickets-table.json');\n  }\n\n  // crm dashboard\n  getLeadsTableData(): Observable<any> {\n    return this.http.get('/assets/data/crm-dashboard/leads-table.json');\n  }\n\n  getTopSellersData(): Observable<any> {\n    return this.http.get('/assets/data/crm-dashboard/top-sellers.json');\n  }\n\n  getLaggingSellersData(): Observable<any> {\n    return this.http.get('/assets/data/crm-dashboard/lagging-sellers.json');\n  }\n\n  getArticles(): Observable<any> {\n    return this.http.get('/assets/data/crm-dashboard/articles.json');\n  }\n\n  getTasks(): Observable<any> {\n    return this.http.get('/assets/data/crm-dashboard/tasks.json');\n  }\n}\n\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport {catchError, distinctUntilChanged, map, tap} from 'rxjs/operators';\nimport {News} from '../interfaces/news.interface';\nimport {BehaviorSubject} from \"rxjs\";\n\n\n@Injectable()\nexport class NewsService {\n    private newsApi: string = 'https://newsapi.org/v2/top-headlines?country=us&apiKey=e0f7cab22d204d0b9091502244fd8ecf';\n    private covidApi: string = 'https://api.covidtracking.com/v1/us/current.json';\n\n\n    constructor(private http: HttpClient) {\n    }\n\n    getNewsHeadlines(): Observable<any> {\n        return this.http.get<any>(this.newsApi);\n    }\n\n\n    getCovidData(): Observable<any> {\n        return this.http.get<any>(this.covidApi);\n    }\n\n\n\n\n\n\n}\n"],"sourceRoot":"webpack:///"}