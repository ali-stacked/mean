var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spread = (this && this.__spread) || function () {
    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
    return ar;
};
var __values = (this && this.__values) || function (o) {
    var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
    if (m) return m.call(o);
    return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
};
(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["tables-tables-module"], {
        /***/ "./node_modules/@angular/cdk/esm2015/drag-drop.js": 
        /*!********************************************************!*\
          !*** ./node_modules/@angular/cdk/esm2015/drag-drop.js ***!
          \********************************************************/
        /*! exports provided: DragDrop, DragRef, DropListRef, CdkDropList, CDK_DROP_LIST, CDK_DROP_LIST_CONTAINER, moveItemInArray, transferArrayItem, copyArrayItem, DragDropModule, DragDropRegistry, CdkDropListGroup, CDK_DRAG_CONFIG_FACTORY, CDK_DRAG_CONFIG, CdkDrag, CdkDragHandle, CdkDragPreview, CdkDragPlaceholder, ɵb */
        /***/ (function (module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DragDrop", function () { return DragDrop; });
            /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DragRef", function () { return DragRef; });
            /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DropListRef", function () { return DropListRef; });
            /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CdkDropList", function () { return CdkDropList; });
            /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CDK_DROP_LIST", function () { return CDK_DROP_LIST; });
            /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CDK_DROP_LIST_CONTAINER", function () { return CDK_DROP_LIST_CONTAINER; });
            /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moveItemInArray", function () { return moveItemInArray; });
            /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "transferArrayItem", function () { return transferArrayItem; });
            /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "copyArrayItem", function () { return copyArrayItem; });
            /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DragDropModule", function () { return DragDropModule; });
            /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DragDropRegistry", function () { return DragDropRegistry; });
            /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CdkDropListGroup", function () { return CdkDropListGroup; });
            /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CDK_DRAG_CONFIG_FACTORY", function () { return CDK_DRAG_CONFIG_FACTORY; });
            /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CDK_DRAG_CONFIG", function () { return CDK_DRAG_CONFIG; });
            /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CdkDrag", function () { return CdkDrag; });
            /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CdkDragHandle", function () { return CdkDragHandle; });
            /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CdkDragPreview", function () { return CdkDragPreview; });
            /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CdkDragPlaceholder", function () { return CdkDragPlaceholder; });
            /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵb", function () { return CDK_DRAG_PARENT; });
            /* harmony import */ var _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/cdk/platform */ "./node_modules/@angular/cdk/esm2015/platform.js");
            /* harmony import */ var _angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/cdk/coercion */ "./node_modules/@angular/cdk/esm2015/coercion.js");
            /* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
            /* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm2015/operators/index.js");
            /* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
            /* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm2015/common.js");
            /* harmony import */ var _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/cdk/scrolling */ "./node_modules/@angular/cdk/esm2015/scrolling.js");
            /* harmony import */ var _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/cdk/bidi */ "./node_modules/@angular/cdk/esm2015/bidi.js");
            /**
             * @license
             * Copyright Google LLC All Rights Reserved.
             *
             * Use of this source code is governed by an MIT-style license that can be
             * found in the LICENSE file at https://angular.io/license
             */
            /**
             * @fileoverview added by tsickle
             * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
             */
            /**
             * Shallow-extends a stylesheet object with another stylesheet object.
             * \@docs-private
             * @param {?} dest
             * @param {?} source
             * @return {?}
             */
            function extendStyles(dest, source) {
                for (var key in source) {
                    if (source.hasOwnProperty(key)) {
                        dest[key] = ( /** @type {?} */(source[key]));
                    }
                }
                return dest;
            }
            /**
             * Toggles whether the native drag interactions should be enabled for an element.
             * \@docs-private
             * @param {?} element Element on which to toggle the drag interactions.
             * @param {?} enable Whether the drag interactions should be enabled.
             * @return {?}
             */
            function toggleNativeDragInteractions(element, enable) {
                /** @type {?} */
                var userSelect = enable ? '' : 'none';
                extendStyles(element.style, {
                    touchAction: enable ? '' : 'none',
                    webkitUserDrag: enable ? '' : 'none',
                    webkitTapHighlightColor: enable ? '' : 'transparent',
                    userSelect: userSelect,
                    msUserSelect: userSelect,
                    webkitUserSelect: userSelect,
                    MozUserSelect: userSelect
                });
            }
            /**
             * @fileoverview added by tsickle
             * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
             */
            /**
             * Parses a CSS time value to milliseconds.
             * @param {?} value
             * @return {?}
             */
            function parseCssTimeUnitsToMs(value) {
                // Some browsers will return it in seconds, whereas others will return milliseconds.
                /** @type {?} */
                var multiplier = value.toLowerCase().indexOf('ms') > -1 ? 1 : 1000;
                return parseFloat(value) * multiplier;
            }
            /**
             * Gets the transform transition duration, including the delay, of an element in milliseconds.
             * @param {?} element
             * @return {?}
             */
            function getTransformTransitionDurationInMs(element) {
                /** @type {?} */
                var computedStyle = getComputedStyle(element);
                /** @type {?} */
                var transitionedProperties = parseCssPropertyValue(computedStyle, 'transition-property');
                /** @type {?} */
                var property = transitionedProperties.find(( /**
                 * @param {?} prop
                 * @return {?}
                 */function (/**
                 * @param {?} prop
                 * @return {?}
                 */ prop) { return prop === 'transform' || prop === 'all'; }));
                // If there's no transition for `all` or `transform`, we shouldn't do anything.
                if (!property) {
                    return 0;
                }
                // Get the index of the property that we're interested in and match
                // it up to the same index in `transition-delay` and `transition-duration`.
                /** @type {?} */
                var propertyIndex = transitionedProperties.indexOf(property);
                /** @type {?} */
                var rawDurations = parseCssPropertyValue(computedStyle, 'transition-duration');
                /** @type {?} */
                var rawDelays = parseCssPropertyValue(computedStyle, 'transition-delay');
                return parseCssTimeUnitsToMs(rawDurations[propertyIndex]) +
                    parseCssTimeUnitsToMs(rawDelays[propertyIndex]);
            }
            /**
             * Parses out multiple values from a computed style into an array.
             * @param {?} computedStyle
             * @param {?} name
             * @return {?}
             */
            function parseCssPropertyValue(computedStyle, name) {
                /** @type {?} */
                var value = computedStyle.getPropertyValue(name);
                return value.split(',').map(( /**
                 * @param {?} part
                 * @return {?}
                 */function (/**
                 * @param {?} part
                 * @return {?}
                 */ part) { return part.trim(); }));
            }
            /**
             * @fileoverview added by tsickle
             * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
             */
            /**
             * Options that can be used to bind a passive event listener.
             * @type {?}
             */
            var passiveEventListenerOptions = Object(_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_0__["normalizePassiveListenerOptions"])({ passive: true });
            /**
             * Options that can be used to bind an active event listener.
             * @type {?}
             */
            var activeEventListenerOptions = Object(_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_0__["normalizePassiveListenerOptions"])({ passive: false });
            /**
             * Time in milliseconds for which to ignore mouse events, after
             * receiving a touch event. Used to avoid doing double work for
             * touch devices where the browser fires fake mouse events, in
             * addition to touch events.
             * @type {?}
             */
            var MOUSE_EVENT_IGNORE_TIME = 800;
            /**
             * Reference to a draggable item. Used to manipulate or dispose of the item.
             * \@docs-private
             * @template T
             */
            var DragRef = /** @class */ (function () {
                /**
                 * @param {?} element
                 * @param {?} _config
                 * @param {?} _document
                 * @param {?} _ngZone
                 * @param {?} _viewportRuler
                 * @param {?} _dragDropRegistry
                 */
                function DragRef(element, _config, _document, _ngZone, _viewportRuler, _dragDropRegistry) {
                    var _this = this;
                    this._config = _config;
                    this._document = _document;
                    this._ngZone = _ngZone;
                    this._viewportRuler = _viewportRuler;
                    this._dragDropRegistry = _dragDropRegistry;
                    /**
                     * CSS `transform` applied to the element when it isn't being dragged. We need a
                     * passive transform in order for the dragged element to retain its new position
                     * after the user has stopped dragging and because we need to know the relative
                     * position in case they start dragging again. This corresponds to `element.style.transform`.
                     */
                    this._passiveTransform = { x: 0, y: 0 };
                    /**
                     * CSS `transform` that is applied to the element while it's being dragged.
                     */
                    this._activeTransform = { x: 0, y: 0 };
                    /**
                     * Emits when the item is being moved.
                     */
                    this._moveEvents = new rxjs__WEBPACK_IMPORTED_MODULE_2__["Subject"]();
                    /**
                     * Subscription to pointer movement events.
                     */
                    this._pointerMoveSubscription = rxjs__WEBPACK_IMPORTED_MODULE_2__["Subscription"].EMPTY;
                    /**
                     * Subscription to the event that is dispatched when the user lifts their pointer.
                     */
                    this._pointerUpSubscription = rxjs__WEBPACK_IMPORTED_MODULE_2__["Subscription"].EMPTY;
                    /**
                     * Subscription to the viewport being scrolled.
                     */
                    this._scrollSubscription = rxjs__WEBPACK_IMPORTED_MODULE_2__["Subscription"].EMPTY;
                    /**
                     * Subscription to the viewport being resized.
                     */
                    this._resizeSubscription = rxjs__WEBPACK_IMPORTED_MODULE_2__["Subscription"].EMPTY;
                    /**
                     * Cached reference to the boundary element.
                     */
                    this._boundaryElement = null;
                    /**
                     * Whether the native dragging interactions have been enabled on the root element.
                     */
                    this._nativeInteractionsEnabled = true;
                    /**
                     * Elements that can be used to drag the draggable item.
                     */
                    this._handles = [];
                    /**
                     * Registered handles that are currently disabled.
                     */
                    this._disabledHandles = new Set();
                    /**
                     * Layout direction of the item.
                     */
                    this._direction = 'ltr';
                    /**
                     * Amount of milliseconds to wait after the user has put their
                     * pointer down before starting to drag the element.
                     */
                    this.dragStartDelay = 0;
                    this._disabled = false;
                    /**
                     * Emits as the drag sequence is being prepared.
                     */
                    this.beforeStarted = new rxjs__WEBPACK_IMPORTED_MODULE_2__["Subject"]();
                    /**
                     * Emits when the user starts dragging the item.
                     */
                    this.started = new rxjs__WEBPACK_IMPORTED_MODULE_2__["Subject"]();
                    /**
                     * Emits when the user has released a drag item, before any animations have started.
                     */
                    this.released = new rxjs__WEBPACK_IMPORTED_MODULE_2__["Subject"]();
                    /**
                     * Emits when the user stops dragging an item in the container.
                     */
                    this.ended = new rxjs__WEBPACK_IMPORTED_MODULE_2__["Subject"]();
                    /**
                     * Emits when the user has moved the item into a new container.
                     */
                    this.entered = new rxjs__WEBPACK_IMPORTED_MODULE_2__["Subject"]();
                    /**
                     * Emits when the user removes the item its container by dragging it into another container.
                     */
                    this.exited = new rxjs__WEBPACK_IMPORTED_MODULE_2__["Subject"]();
                    /**
                     * Emits when the user drops the item inside a container.
                     */
                    this.dropped = new rxjs__WEBPACK_IMPORTED_MODULE_2__["Subject"]();
                    /**
                     * Emits as the user is dragging the item. Use with caution,
                     * because this event will fire for every pixel that the user has dragged.
                     */
                    this.moved = this._moveEvents.asObservable();
                    /**
                     * Handler for the `mousedown`/`touchstart` events.
                     */
                    this._pointerDown = ( /**
                     * @param {?} event
                     * @return {?}
                     */function (event) {
                        _this.beforeStarted.next();
                        // Delegate the event based on whether it started from a handle or the element itself.
                        if (_this._handles.length) {
                            /** @type {?} */
                            var targetHandle = _this._handles.find(( /**
                             * @param {?} handle
                             * @return {?}
                             */function (/**
                             * @param {?} handle
                             * @return {?}
                             */ handle) {
                                /** @type {?} */
                                var target = event.target;
                                return !!target && (target === handle || handle.contains(( /** @type {?} */(target))));
                            }));
                            if (targetHandle && !_this._disabledHandles.has(targetHandle) && !_this.disabled) {
                                _this._initializeDragSequence(targetHandle, event);
                            }
                        }
                        else if (!_this.disabled) {
                            _this._initializeDragSequence(_this._rootElement, event);
                        }
                    });
                    /**
                     * Handler that is invoked when the user moves their pointer after they've initiated a drag.
                     */
                    this._pointerMove = ( /**
                     * @param {?} event
                     * @return {?}
                     */function (event) {
                        if (!_this._hasStartedDragging) {
                            /** @type {?} */
                            var pointerPosition = _this._getPointerPositionOnPage(event);
                            /** @type {?} */
                            var distanceX = Math.abs(pointerPosition.x - _this._pickupPositionOnPage.x);
                            /** @type {?} */
                            var distanceY = Math.abs(pointerPosition.y - _this._pickupPositionOnPage.y);
                            /** @type {?} */
                            var isOverThreshold = distanceX + distanceY >= _this._config.dragStartThreshold;
                            // Only start dragging after the user has moved more than the minimum distance in either
                            // direction. Note that this is preferrable over doing something like `skip(minimumDistance)`
                            // in the `pointerMove` subscription, because we're not guaranteed to have one move event
                            // per pixel of movement (e.g. if the user moves their pointer quickly).
                            if (isOverThreshold) {
                                /** @type {?} */
                                var isDelayElapsed = Date.now() >= _this._dragStartTime + (_this.dragStartDelay || 0);
                                if (!isDelayElapsed) {
                                    _this._endDragSequence(event);
                                    return;
                                }
                                // Prevent other drag sequences from starting while something in the container is still
                                // being dragged. This can happen while we're waiting for the drop animation to finish
                                // and can cause errors, because some elements might still be moving around.
                                if (!_this._dropContainer || !_this._dropContainer.isDragging()) {
                                    _this._hasStartedDragging = true;
                                    _this._ngZone.run(( /**
                                     * @return {?}
                                     */function () { return _this._startDragSequence(event); }));
                                }
                            }
                            return;
                        }
                        // We only need the preview dimensions if we have a boundary element.
                        if (_this._boundaryElement) {
                            // Cache the preview element rect if we haven't cached it already or if
                            // we cached it too early before the element dimensions were computed.
                            if (!_this._previewRect || (!_this._previewRect.width && !_this._previewRect.height)) {
                                _this._previewRect = (_this._preview || _this._rootElement).getBoundingClientRect();
                            }
                        }
                        /** @type {?} */
                        var constrainedPointerPosition = _this._getConstrainedPointerPosition(event);
                        _this._hasMoved = true;
                        event.preventDefault();
                        _this._updatePointerDirectionDelta(constrainedPointerPosition);
                        if (_this._dropContainer) {
                            _this._updateActiveDropContainer(constrainedPointerPosition);
                        }
                        else {
                            /** @type {?} */
                            var activeTransform = _this._activeTransform;
                            activeTransform.x =
                                constrainedPointerPosition.x - _this._pickupPositionOnPage.x + _this._passiveTransform.x;
                            activeTransform.y =
                                constrainedPointerPosition.y - _this._pickupPositionOnPage.y + _this._passiveTransform.y;
                            _this._applyRootElementTransform(activeTransform.x, activeTransform.y);
                            // Apply transform as attribute if dragging and svg element to work for IE
                            if (typeof SVGElement !== 'undefined' && _this._rootElement instanceof SVGElement) {
                                /** @type {?} */
                                var appliedTransform = "translate(" + activeTransform.x + " " + activeTransform.y + ")";
                                _this._rootElement.setAttribute('transform', appliedTransform);
                            }
                        }
                        // Since this event gets fired for every pixel while dragging, we only
                        // want to fire it if the consumer opted into it. Also we have to
                        // re-enter the zone because we run all of the events on the outside.
                        if (_this._moveEvents.observers.length) {
                            _this._ngZone.run(( /**
                             * @return {?}
                             */function () {
                                _this._moveEvents.next({
                                    source: _this,
                                    pointerPosition: constrainedPointerPosition,
                                    event: event,
                                    distance: _this._getDragDistance(constrainedPointerPosition),
                                    delta: _this._pointerDirectionDelta
                                });
                            }));
                        }
                    });
                    /**
                     * Handler that is invoked when the user lifts their pointer up, after initiating a drag.
                     */
                    this._pointerUp = ( /**
                     * @param {?} event
                     * @return {?}
                     */function (event) {
                        _this._endDragSequence(event);
                    });
                    this.withRootElement(element);
                    _dragDropRegistry.registerDragItem(this);
                }
                Object.defineProperty(DragRef.prototype, "disabled", {
                    /**
                     * Whether starting to drag this element is disabled.
                     * @return {?}
                     */
                    get: function () {
                        return this._disabled || !!(this._dropContainer && this._dropContainer.disabled);
                    },
                    /**
                     * @param {?} value
                     * @return {?}
                     */
                    set: function (value) {
                        /** @type {?} */
                        var newValue = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__["coerceBooleanProperty"])(value);
                        if (newValue !== this._disabled) {
                            this._disabled = newValue;
                            this._toggleNativeDragInteractions();
                        }
                    },
                    enumerable: true,
                    configurable: true
                });
                /**
                 * Returns the element that is being used as a placeholder
                 * while the current element is being dragged.
                 * @return {?}
                 */
                DragRef.prototype.getPlaceholderElement = function () {
                    return this._placeholder;
                };
                /**
                 * Returns the root draggable element.
                 * @return {?}
                 */
                DragRef.prototype.getRootElement = function () {
                    return this._rootElement;
                };
                /**
                 * Registers the handles that can be used to drag the element.
                 * @template THIS
                 * @this {THIS}
                 * @param {?} handles
                 * @return {THIS}
                 */
                DragRef.prototype.withHandles = function (handles) {
                    ( /** @type {?} */(this))._handles = handles.map(( /**
                     * @param {?} handle
                     * @return {?}
                     */function (/**
                     * @param {?} handle
                     * @return {?}
                     */ handle) { return Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__["coerceElement"])(handle); }));
                    ( /** @type {?} */(this))._handles.forEach(( /**
                     * @param {?} handle
                     * @return {?}
                     */function (/**
                     * @param {?} handle
                     * @return {?}
                     */ handle) { return toggleNativeDragInteractions(handle, false); }));
                    ( /** @type {?} */(this))._toggleNativeDragInteractions();
                    return ( /** @type {?} */(this));
                };
                /**
                 * Registers the template that should be used for the drag preview.
                 * @template THIS
                 * @this {THIS}
                 * @param {?} template Template that from which to stamp out the preview.
                 * @return {THIS}
                 */
                DragRef.prototype.withPreviewTemplate = function (template) {
                    ( /** @type {?} */(this))._previewTemplate = template;
                    return ( /** @type {?} */(this));
                };
                /**
                 * Registers the template that should be used for the drag placeholder.
                 * @template THIS
                 * @this {THIS}
                 * @param {?} template Template that from which to stamp out the placeholder.
                 * @return {THIS}
                 */
                DragRef.prototype.withPlaceholderTemplate = function (template) {
                    ( /** @type {?} */(this))._placeholderTemplate = template;
                    return ( /** @type {?} */(this));
                };
                /**
                 * Sets an alternate drag root element. The root element is the element that will be moved as
                 * the user is dragging. Passing an alternate root element is useful when trying to enable
                 * dragging on an element that you might not have access to.
                 * @template THIS
                 * @this {THIS}
                 * @param {?} rootElement
                 * @return {THIS}
                 */
                DragRef.prototype.withRootElement = function (rootElement) {
                    /** @type {?} */
                    var element = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__["coerceElement"])(rootElement);
                    if (element !== ( /** @type {?} */(this))._rootElement) {
                        if (( /** @type {?} */(this))._rootElement) {
                            ( /** @type {?} */(this))._removeRootElementListeners(( /** @type {?} */(this))._rootElement);
                        }
                        element.addEventListener('mousedown', ( /** @type {?} */(this))._pointerDown, activeEventListenerOptions);
                        element.addEventListener('touchstart', ( /** @type {?} */(this))._pointerDown, passiveEventListenerOptions);
                        ( /** @type {?} */(this))._initialTransform = undefined;
                        ( /** @type {?} */(this))._rootElement = element;
                    }
                    return ( /** @type {?} */(this));
                };
                /**
                 * Element to which the draggable's position will be constrained.
                 * @template THIS
                 * @this {THIS}
                 * @param {?} boundaryElement
                 * @return {THIS}
                 */
                DragRef.prototype.withBoundaryElement = function (boundaryElement) {
                    var _this = this;
                    ( /** @type {?} */(this))._boundaryElement = boundaryElement ? Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__["coerceElement"])(boundaryElement) : null;
                    ( /** @type {?} */(this))._resizeSubscription.unsubscribe();
                    if (boundaryElement) {
                        ( /** @type {?} */(this))._resizeSubscription = ( /** @type {?} */(this))._viewportRuler
                            .change(10)
                            .subscribe(( /**
                     * @return {?}
                     */function () { return ( /** @type {?} */(_this))._containInsideBoundaryOnResize(); }));
                    }
                    return ( /** @type {?} */(this));
                };
                /**
                 * Removes the dragging functionality from the DOM element.
                 * @return {?}
                 */
                DragRef.prototype.dispose = function () {
                    this._removeRootElementListeners(this._rootElement);
                    // Do this check before removing from the registry since it'll
                    // stop being considered as dragged once it is removed.
                    if (this.isDragging()) {
                        // Since we move out the element to the end of the body while it's being
                        // dragged, we have to make sure that it's removed if it gets destroyed.
                        removeElement(this._rootElement);
                    }
                    this._destroyPreview();
                    this._destroyPlaceholder();
                    this._dragDropRegistry.removeDragItem(this);
                    this._removeSubscriptions();
                    this.beforeStarted.complete();
                    this.started.complete();
                    this.released.complete();
                    this.ended.complete();
                    this.entered.complete();
                    this.exited.complete();
                    this.dropped.complete();
                    this._moveEvents.complete();
                    this._handles = [];
                    this._disabledHandles.clear();
                    this._dropContainer = undefined;
                    this._boundaryElement = this._rootElement = this._placeholderTemplate =
                        this._previewTemplate = this._nextSibling = ( /** @type {?} */(null));
                };
                /**
                 * Checks whether the element is currently being dragged.
                 * @return {?}
                 */
                DragRef.prototype.isDragging = function () {
                    return this._hasStartedDragging && this._dragDropRegistry.isDragging(this);
                };
                /**
                 * Resets a standalone drag item to its initial position.
                 * @return {?}
                 */
                DragRef.prototype.reset = function () {
                    this._rootElement.style.transform = this._initialTransform || '';
                    this._activeTransform = { x: 0, y: 0 };
                    this._passiveTransform = { x: 0, y: 0 };
                };
                /**
                 * Sets a handle as disabled. While a handle is disabled, it'll capture and interrupt dragging.
                 * @param {?} handle Handle element that should be disabled.
                 * @return {?}
                 */
                DragRef.prototype.disableHandle = function (handle) {
                    if (this._handles.indexOf(handle) > -1) {
                        this._disabledHandles.add(handle);
                    }
                };
                /**
                 * Enables a handle, if it has been disabled.
                 * @param {?} handle Handle element to be enabled.
                 * @return {?}
                 */
                DragRef.prototype.enableHandle = function (handle) {
                    this._disabledHandles.delete(handle);
                };
                /**
                 * Sets the layout direction of the draggable item.
                 * @template THIS
                 * @this {THIS}
                 * @param {?} direction
                 * @return {THIS}
                 */
                DragRef.prototype.withDirection = function (direction) {
                    ( /** @type {?} */(this))._direction = direction;
                    return ( /** @type {?} */(this));
                };
                /**
                 * Sets the container that the item is part of.
                 * @param {?} container
                 * @return {?}
                 */
                DragRef.prototype._withDropContainer = function (container) {
                    this._dropContainer = container;
                };
                /**
                 * Gets the current position in pixels the draggable outside of a drop container.
                 * @return {?}
                 */
                DragRef.prototype.getFreeDragPosition = function () {
                    /** @type {?} */
                    var position = this.isDragging() ? this._activeTransform : this._passiveTransform;
                    return { x: position.x, y: position.y };
                };
                /**
                 * Sets the current position in pixels the draggable outside of a drop container.
                 * @template THIS
                 * @this {THIS}
                 * @param {?} value New position to be set.
                 * @return {THIS}
                 */
                DragRef.prototype.setFreeDragPosition = function (value) {
                    ( /** @type {?} */(this))._activeTransform = { x: 0, y: 0 };
                    ( /** @type {?} */(this))._passiveTransform.x = value.x;
                    ( /** @type {?} */(this))._passiveTransform.y = value.y;
                    if (!( /** @type {?} */(this))._dropContainer) {
                        ( /** @type {?} */(this))._applyRootElementTransform(value.x, value.y);
                    }
                    return ( /** @type {?} */(this));
                };
                /**
                 * Updates the item's sort order based on the last-known pointer position.
                 * @return {?}
                 */
                DragRef.prototype._sortFromLastPointerPosition = function () {
                    /** @type {?} */
                    var position = this._pointerPositionAtLastDirectionChange;
                    if (position && this._dropContainer) {
                        this._updateActiveDropContainer(position);
                    }
                };
                /**
                 * Unsubscribes from the global subscriptions.
                 * @private
                 * @return {?}
                 */
                DragRef.prototype._removeSubscriptions = function () {
                    this._pointerMoveSubscription.unsubscribe();
                    this._pointerUpSubscription.unsubscribe();
                    this._scrollSubscription.unsubscribe();
                };
                /**
                 * Destroys the preview element and its ViewRef.
                 * @private
                 * @return {?}
                 */
                DragRef.prototype._destroyPreview = function () {
                    if (this._preview) {
                        removeElement(this._preview);
                    }
                    if (this._previewRef) {
                        this._previewRef.destroy();
                    }
                    this._preview = this._previewRef = ( /** @type {?} */(null));
                };
                /**
                 * Destroys the placeholder element and its ViewRef.
                 * @private
                 * @return {?}
                 */
                DragRef.prototype._destroyPlaceholder = function () {
                    if (this._placeholder) {
                        removeElement(this._placeholder);
                    }
                    if (this._placeholderRef) {
                        this._placeholderRef.destroy();
                    }
                    this._placeholder = this._placeholderRef = ( /** @type {?} */(null));
                };
                /**
                 * Clears subscriptions and stops the dragging sequence.
                 * @private
                 * @param {?} event Browser event object that ended the sequence.
                 * @return {?}
                 */
                DragRef.prototype._endDragSequence = function (event) {
                    var _this = this;
                    // Note that here we use `isDragging` from the service, rather than from `this`.
                    // The difference is that the one from the service reflects whether a dragging sequence
                    // has been initiated, whereas the one on `this` includes whether the user has passed
                    // the minimum dragging threshold.
                    if (!this._dragDropRegistry.isDragging(this)) {
                        return;
                    }
                    this._removeSubscriptions();
                    this._dragDropRegistry.stopDragging(this);
                    this._toggleNativeDragInteractions();
                    if (this._handles) {
                        this._rootElement.style.webkitTapHighlightColor = this._rootElementTapHighlight;
                    }
                    if (!this._hasStartedDragging) {
                        return;
                    }
                    this.released.next({ source: this });
                    if (this._dropContainer) {
                        // Stop scrolling immediately, instead of waiting for the animation to finish.
                        this._dropContainer._stopScrolling();
                        this._animatePreviewToPlaceholder().then(( /**
                         * @return {?}
                         */function () {
                            _this._cleanupDragArtifacts(event);
                            _this._cleanupCachedDimensions();
                            _this._dragDropRegistry.stopDragging(_this);
                        }));
                    }
                    else {
                        // Convert the active transform into a passive one. This means that next time
                        // the user starts dragging the item, its position will be calculated relatively
                        // to the new passive transform.
                        this._passiveTransform.x = this._activeTransform.x;
                        this._passiveTransform.y = this._activeTransform.y;
                        this._ngZone.run(( /**
                         * @return {?}
                         */function () {
                            _this.ended.next({
                                source: _this,
                                distance: _this._getDragDistance(_this._getPointerPositionOnPage(event))
                            });
                        }));
                        this._cleanupCachedDimensions();
                        this._dragDropRegistry.stopDragging(this);
                    }
                };
                /**
                 * Starts the dragging sequence.
                 * @private
                 * @param {?} event
                 * @return {?}
                 */
                DragRef.prototype._startDragSequence = function (event) {
                    // Emit the event on the item before the one on the container.
                    this.started.next({ source: this });
                    if (isTouchEvent(event)) {
                        this._lastTouchEventTime = Date.now();
                    }
                    this._toggleNativeDragInteractions();
                    if (this._dropContainer) {
                        /** @type {?} */
                        var element = this._rootElement;
                        // Grab the `nextSibling` before the preview and placeholder
                        // have been created so we don't get the preview by accident.
                        this._nextSibling = element.nextSibling;
                        /** @type {?} */
                        var preview = this._preview = this._createPreviewElement();
                        /** @type {?} */
                        var placeholder = this._placeholder = this._createPlaceholderElement();
                        // We move the element out at the end of the body and we make it hidden, because keeping it in
                        // place will throw off the consumer's `:last-child` selectors. We can't remove the element
                        // from the DOM completely, because iOS will stop firing all subsequent events in the chain.
                        element.style.display = 'none';
                        this._document.body.appendChild(( /** @type {?} */(element.parentNode)).replaceChild(placeholder, element));
                        getPreviewInsertionPoint(this._document).appendChild(preview);
                        this._dropContainer.start();
                    }
                };
                /**
                 * Sets up the different variables and subscriptions
                 * that will be necessary for the dragging sequence.
                 * @private
                 * @param {?} referenceElement Element that started the drag sequence.
                 * @param {?} event Browser event object that started the sequence.
                 * @return {?}
                 */
                DragRef.prototype._initializeDragSequence = function (referenceElement, event) {
                    var _this = this;
                    // Always stop propagation for the event that initializes
                    // the dragging sequence, in order to prevent it from potentially
                    // starting another sequence for a draggable parent somewhere up the DOM tree.
                    event.stopPropagation();
                    /** @type {?} */
                    var isDragging = this.isDragging();
                    /** @type {?} */
                    var isTouchSequence = isTouchEvent(event);
                    /** @type {?} */
                    var isAuxiliaryMouseButton = !isTouchSequence && (( /** @type {?} */(event))).button !== 0;
                    /** @type {?} */
                    var rootElement = this._rootElement;
                    /** @type {?} */
                    var isSyntheticEvent = !isTouchSequence && this._lastTouchEventTime &&
                        this._lastTouchEventTime + MOUSE_EVENT_IGNORE_TIME > Date.now();
                    // If the event started from an element with the native HTML drag&drop, it'll interfere
                    // with our own dragging (e.g. `img` tags do it by default). Prevent the default action
                    // to stop it from happening. Note that preventing on `dragstart` also seems to work, but
                    // it's flaky and it fails if the user drags it away quickly. Also note that we only want
                    // to do this for `mousedown` since doing the same for `touchstart` will stop any `click`
                    // events from firing on touch devices.
                    if (event.target && (( /** @type {?} */(event.target))).draggable && event.type === 'mousedown') {
                        event.preventDefault();
                    }
                    // Abort if the user is already dragging or is using a mouse button other than the primary one.
                    if (isDragging || isAuxiliaryMouseButton || isSyntheticEvent) {
                        return;
                    }
                    // If we've got handles, we need to disable the tap highlight on the entire root element,
                    // otherwise iOS will still add it, even though all the drag interactions on the handle
                    // are disabled.
                    if (this._handles.length) {
                        this._rootElementTapHighlight = rootElement.style.webkitTapHighlightColor;
                        rootElement.style.webkitTapHighlightColor = 'transparent';
                    }
                    this._hasStartedDragging = this._hasMoved = false;
                    this._initialContainer = ( /** @type {?} */(this._dropContainer));
                    // Avoid multiple subscriptions and memory leaks when multi touch
                    // (isDragging check above isn't enough because of possible temporal and/or dimensional delays)
                    this._removeSubscriptions();
                    this._pointerMoveSubscription = this._dragDropRegistry.pointerMove.subscribe(this._pointerMove);
                    this._pointerUpSubscription = this._dragDropRegistry.pointerUp.subscribe(this._pointerUp);
                    this._scrollSubscription = this._dragDropRegistry.scroll.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["startWith"])(null)).subscribe(( /**
                     * @return {?}
                     */function () {
                        _this._scrollPosition = _this._viewportRuler.getViewportScrollPosition();
                    }));
                    if (this._boundaryElement) {
                        this._boundaryRect = this._boundaryElement.getBoundingClientRect();
                    }
                    // If we have a custom preview template, the element won't be visible anyway so we avoid the
                    // extra `getBoundingClientRect` calls and just move the preview next to the cursor.
                    this._pickupPositionInElement = this._previewTemplate && this._previewTemplate.template ?
                        { x: 0, y: 0 } :
                        this._getPointerPositionInElement(referenceElement, event);
                    /** @type {?} */
                    var pointerPosition = this._pickupPositionOnPage = this._getPointerPositionOnPage(event);
                    this._pointerDirectionDelta = { x: 0, y: 0 };
                    this._pointerPositionAtLastDirectionChange = { x: pointerPosition.x, y: pointerPosition.y };
                    this._dragStartTime = Date.now();
                    this._dragDropRegistry.startDragging(this, event);
                };
                /**
                 * Cleans up the DOM artifacts that were added to facilitate the element being dragged.
                 * @private
                 * @param {?} event
                 * @return {?}
                 */
                DragRef.prototype._cleanupDragArtifacts = function (event) {
                    var _this = this;
                    // Restore the element's visibility and insert it at its old position in the DOM.
                    // It's important that we maintain the position, because moving the element around in the DOM
                    // can throw off `NgFor` which does smart diffing and re-creates elements only when necessary,
                    // while moving the existing elements in all other cases.
                    this._rootElement.style.display = '';
                    if (this._nextSibling) {
                        ( /** @type {?} */(this._nextSibling.parentNode)).insertBefore(this._rootElement, this._nextSibling);
                    }
                    else {
                        Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__["coerceElement"])(this._initialContainer.element).appendChild(this._rootElement);
                    }
                    this._destroyPreview();
                    this._destroyPlaceholder();
                    this._boundaryRect = this._previewRect = undefined;
                    // Re-enter the NgZone since we bound `document` events on the outside.
                    this._ngZone.run(( /**
                     * @return {?}
                     */function () {
                        /** @type {?} */
                        var container = ( /** @type {?} */(_this._dropContainer));
                        /** @type {?} */
                        var currentIndex = container.getItemIndex(_this);
                        /** @type {?} */
                        var pointerPosition = _this._getPointerPositionOnPage(event);
                        /** @type {?} */
                        var distance = _this._getDragDistance(_this._getPointerPositionOnPage(event));
                        /** @type {?} */
                        var isPointerOverContainer = container._isOverContainer(pointerPosition.x, pointerPosition.y);
                        _this.ended.next({ source: _this, distance: distance });
                        _this.dropped.next({
                            item: _this,
                            currentIndex: currentIndex,
                            previousIndex: _this._initialContainer.getItemIndex(_this),
                            container: container,
                            previousContainer: _this._initialContainer,
                            isPointerOverContainer: isPointerOverContainer,
                            distance: distance
                        });
                        container.drop(_this, currentIndex, _this._initialContainer, isPointerOverContainer, distance);
                        _this._dropContainer = _this._initialContainer;
                    }));
                };
                /**
                 * Updates the item's position in its drop container, or moves it
                 * into a new one, depending on its current drag position.
                 * @private
                 * @param {?} __0
                 * @return {?}
                 */
                DragRef.prototype._updateActiveDropContainer = function (_a) {
                    var _this = this;
                    var x = _a.x, y = _a.y;
                    // Drop container that draggable has been moved into.
                    /** @type {?} */
                    var newContainer = this._initialContainer._getSiblingContainerFromPosition(this, x, y);
                    // If we couldn't find a new container to move the item into, and the item has left its
                    // initial container, check whether the it's over the initial container. This handles the
                    // case where two containers are connected one way and the user tries to undo dragging an
                    // item into a new container.
                    if (!newContainer && this._dropContainer !== this._initialContainer &&
                        this._initialContainer._isOverContainer(x, y)) {
                        newContainer = this._initialContainer;
                    }
                    if (newContainer && newContainer !== this._dropContainer) {
                        this._ngZone.run(( /**
                         * @return {?}
                         */function () {
                            // Notify the old container that the item has left.
                            _this.exited.next({ item: _this, container: ( /** @type {?} */(_this._dropContainer)) });
                            ( /** @type {?} */(_this._dropContainer)).exit(_this);
                            // Notify the new container that the item has entered.
                            _this._dropContainer = ( /** @type {?} */(newContainer));
                            _this._dropContainer.enter(_this, x, y);
                            _this.entered.next({
                                item: _this,
                                container: ( /** @type {?} */(newContainer)),
                                currentIndex: ( /** @type {?} */(newContainer)).getItemIndex(_this)
                            });
                        }));
                    }
                    ( /** @type {?} */(this._dropContainer))._startScrollingIfNecessary(x, y);
                    ( /** @type {?} */(this._dropContainer))._sortItem(this, x, y, this._pointerDirectionDelta);
                    this._preview.style.transform =
                        getTransform(x - this._pickupPositionInElement.x, y - this._pickupPositionInElement.y);
                };
                /**
                 * Creates the element that will be rendered next to the user's pointer
                 * and will be used as a preview of the element that is being dragged.
                 * @private
                 * @return {?}
                 */
                DragRef.prototype._createPreviewElement = function () {
                    /** @type {?} */
                    var previewConfig = this._previewTemplate;
                    /** @type {?} */
                    var previewTemplate = previewConfig ? previewConfig.template : null;
                    /** @type {?} */
                    var preview;
                    if (previewTemplate) {
                        /** @type {?} */
                        var viewRef = ( /** @type {?} */(previewConfig)).viewContainer.createEmbeddedView(previewTemplate, ( /** @type {?} */(previewConfig)).context);
                        preview = getRootNode(viewRef, this._document);
                        this._previewRef = viewRef;
                        preview.style.transform =
                            getTransform(this._pickupPositionOnPage.x, this._pickupPositionOnPage.y);
                    }
                    else {
                        /** @type {?} */
                        var element = this._rootElement;
                        /** @type {?} */
                        var elementRect = element.getBoundingClientRect();
                        preview = deepCloneNode(element);
                        preview.style.width = elementRect.width + "px";
                        preview.style.height = elementRect.height + "px";
                        preview.style.transform = getTransform(elementRect.left, elementRect.top);
                    }
                    extendStyles(preview.style, {
                        // It's important that we disable the pointer events on the preview, because
                        // it can throw off the `document.elementFromPoint` calls in the `CdkDropList`.
                        pointerEvents: 'none',
                        // We have to reset the margin, because can throw off positioning relative to the viewport.
                        margin: '0',
                        position: 'fixed',
                        top: '0',
                        left: '0',
                        zIndex: '1000'
                    });
                    toggleNativeDragInteractions(preview, false);
                    preview.classList.add('cdk-drag-preview');
                    preview.setAttribute('dir', this._direction);
                    return preview;
                };
                /**
                 * Animates the preview element from its current position to the location of the drop placeholder.
                 * @private
                 * @return {?} Promise that resolves when the animation completes.
                 */
                DragRef.prototype._animatePreviewToPlaceholder = function () {
                    var _this = this;
                    // If the user hasn't moved yet, the transitionend event won't fire.
                    if (!this._hasMoved) {
                        return Promise.resolve();
                    }
                    /** @type {?} */
                    var placeholderRect = this._placeholder.getBoundingClientRect();
                    // Apply the class that adds a transition to the preview.
                    this._preview.classList.add('cdk-drag-animating');
                    // Move the preview to the placeholder position.
                    this._preview.style.transform = getTransform(placeholderRect.left, placeholderRect.top);
                    // If the element doesn't have a `transition`, the `transitionend` event won't fire. Since
                    // we need to trigger a style recalculation in order for the `cdk-drag-animating` class to
                    // apply its style, we take advantage of the available info to figure out whether we need to
                    // bind the event in the first place.
                    /** @type {?} */
                    var duration = getTransformTransitionDurationInMs(this._preview);
                    if (duration === 0) {
                        return Promise.resolve();
                    }
                    return this._ngZone.runOutsideAngular(( /**
                     * @return {?}
                     */function () {
                        return new Promise(( /**
                         * @param {?} resolve
                         * @return {?}
                         */function (/**
                         * @param {?} resolve
                         * @return {?}
                         */ resolve) {
                            /** @type {?} */
                            var handler = ( /** @type {?} */((( /**
                             * @param {?} event
                             * @return {?}
                             */function (event) {
                                if (!event || (event.target === _this._preview && event.propertyName === 'transform')) {
                                    _this._preview.removeEventListener('transitionend', handler);
                                    resolve();
                                    clearTimeout(timeout);
                                }
                            }))));
                            // If a transition is short enough, the browser might not fire the `transitionend` event.
                            // Since we know how long it's supposed to take, add a timeout with a 50% buffer that'll
                            // fire if the transition hasn't completed when it was supposed to.
                            /** @type {?} */
                            var timeout = setTimeout(( /** @type {?} */(handler)), duration * 1.5);
                            _this._preview.addEventListener('transitionend', handler);
                        }));
                    }));
                };
                /**
                 * Creates an element that will be shown instead of the current element while dragging.
                 * @private
                 * @return {?}
                 */
                DragRef.prototype._createPlaceholderElement = function () {
                    /** @type {?} */
                    var placeholderConfig = this._placeholderTemplate;
                    /** @type {?} */
                    var placeholderTemplate = placeholderConfig ? placeholderConfig.template : null;
                    /** @type {?} */
                    var placeholder;
                    if (placeholderTemplate) {
                        this._placeholderRef = ( /** @type {?} */(placeholderConfig)).viewContainer.createEmbeddedView(placeholderTemplate, ( /** @type {?} */(placeholderConfig)).context);
                        placeholder = getRootNode(this._placeholderRef, this._document);
                    }
                    else {
                        placeholder = deepCloneNode(this._rootElement);
                    }
                    placeholder.classList.add('cdk-drag-placeholder');
                    return placeholder;
                };
                /**
                 * Figures out the coordinates at which an element was picked up.
                 * @private
                 * @param {?} referenceElement Element that initiated the dragging.
                 * @param {?} event Event that initiated the dragging.
                 * @return {?}
                 */
                DragRef.prototype._getPointerPositionInElement = function (referenceElement, event) {
                    /** @type {?} */
                    var elementRect = this._rootElement.getBoundingClientRect();
                    /** @type {?} */
                    var handleElement = referenceElement === this._rootElement ? null : referenceElement;
                    /** @type {?} */
                    var referenceRect = handleElement ? handleElement.getBoundingClientRect() : elementRect;
                    /** @type {?} */
                    var point = isTouchEvent(event) ? event.targetTouches[0] : event;
                    /** @type {?} */
                    var x = point.pageX - referenceRect.left - this._scrollPosition.left;
                    /** @type {?} */
                    var y = point.pageY - referenceRect.top - this._scrollPosition.top;
                    return {
                        x: referenceRect.left - elementRect.left + x,
                        y: referenceRect.top - elementRect.top + y
                    };
                };
                /**
                 * Determines the point of the page that was touched by the user.
                 * @private
                 * @param {?} event
                 * @return {?}
                 */
                DragRef.prototype._getPointerPositionOnPage = function (event) {
                    // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.
                    /** @type {?} */
                    var point = isTouchEvent(event) ? (event.touches[0] || event.changedTouches[0]) : event;
                    return {
                        x: point.pageX - this._scrollPosition.left,
                        y: point.pageY - this._scrollPosition.top
                    };
                };
                /**
                 * Gets the pointer position on the page, accounting for any position constraints.
                 * @private
                 * @param {?} event
                 * @return {?}
                 */
                DragRef.prototype._getConstrainedPointerPosition = function (event) {
                    /** @type {?} */
                    var point = this._getPointerPositionOnPage(event);
                    /** @type {?} */
                    var constrainedPoint = this.constrainPosition ? this.constrainPosition(point, this) : point;
                    /** @type {?} */
                    var dropContainerLock = this._dropContainer ? this._dropContainer.lockAxis : null;
                    if (this.lockAxis === 'x' || dropContainerLock === 'x') {
                        constrainedPoint.y = this._pickupPositionOnPage.y;
                    }
                    else if (this.lockAxis === 'y' || dropContainerLock === 'y') {
                        constrainedPoint.x = this._pickupPositionOnPage.x;
                    }
                    if (this._boundaryRect) {
                        var _a = this._pickupPositionInElement, pickupX = _a.x, pickupY = _a.y;
                        /** @type {?} */
                        var boundaryRect = this._boundaryRect;
                        /** @type {?} */
                        var previewRect = ( /** @type {?} */(this._previewRect));
                        /** @type {?} */
                        var minY = boundaryRect.top + pickupY;
                        /** @type {?} */
                        var maxY = boundaryRect.bottom - (previewRect.height - pickupY);
                        /** @type {?} */
                        var minX = boundaryRect.left + pickupX;
                        /** @type {?} */
                        var maxX = boundaryRect.right - (previewRect.width - pickupX);
                        constrainedPoint.x = clamp(constrainedPoint.x, minX, maxX);
                        constrainedPoint.y = clamp(constrainedPoint.y, minY, maxY);
                    }
                    return constrainedPoint;
                };
                /**
                 * Updates the current drag delta, based on the user's current pointer position on the page.
                 * @private
                 * @param {?} pointerPositionOnPage
                 * @return {?}
                 */
                DragRef.prototype._updatePointerDirectionDelta = function (pointerPositionOnPage) {
                    var x = pointerPositionOnPage.x, y = pointerPositionOnPage.y;
                    /** @type {?} */
                    var delta = this._pointerDirectionDelta;
                    /** @type {?} */
                    var positionSinceLastChange = this._pointerPositionAtLastDirectionChange;
                    // Amount of pixels the user has dragged since the last time the direction changed.
                    /** @type {?} */
                    var changeX = Math.abs(x - positionSinceLastChange.x);
                    /** @type {?} */
                    var changeY = Math.abs(y - positionSinceLastChange.y);
                    // Because we handle pointer events on a per-pixel basis, we don't want the delta
                    // to change for every pixel, otherwise anything that depends on it can look erratic.
                    // To make the delta more consistent, we track how much the user has moved since the last
                    // delta change and we only update it after it has reached a certain threshold.
                    if (changeX > this._config.pointerDirectionChangeThreshold) {
                        delta.x = x > positionSinceLastChange.x ? 1 : -1;
                        positionSinceLastChange.x = x;
                    }
                    if (changeY > this._config.pointerDirectionChangeThreshold) {
                        delta.y = y > positionSinceLastChange.y ? 1 : -1;
                        positionSinceLastChange.y = y;
                    }
                    return delta;
                };
                /**
                 * Toggles the native drag interactions, based on how many handles are registered.
                 * @private
                 * @return {?}
                 */
                DragRef.prototype._toggleNativeDragInteractions = function () {
                    if (!this._rootElement || !this._handles) {
                        return;
                    }
                    /** @type {?} */
                    var shouldEnable = this._handles.length > 0 || !this.isDragging();
                    if (shouldEnable !== this._nativeInteractionsEnabled) {
                        this._nativeInteractionsEnabled = shouldEnable;
                        toggleNativeDragInteractions(this._rootElement, shouldEnable);
                    }
                };
                /**
                 * Removes the manually-added event listeners from the root element.
                 * @private
                 * @param {?} element
                 * @return {?}
                 */
                DragRef.prototype._removeRootElementListeners = function (element) {
                    element.removeEventListener('mousedown', this._pointerDown, activeEventListenerOptions);
                    element.removeEventListener('touchstart', this._pointerDown, passiveEventListenerOptions);
                };
                /**
                 * Applies a `transform` to the root element, taking into account any existing transforms on it.
                 * @private
                 * @param {?} x New transform value along the X axis.
                 * @param {?} y New transform value along the Y axis.
                 * @return {?}
                 */
                DragRef.prototype._applyRootElementTransform = function (x, y) {
                    /** @type {?} */
                    var transform = getTransform(x, y);
                    // Cache the previous transform amount only after the first drag sequence, because
                    // we don't want our own transforms to stack on top of each other.
                    if (this._initialTransform == null) {
                        this._initialTransform = this._rootElement.style.transform || '';
                    }
                    // Preserve the previous `transform` value, if there was one. Note that we apply our own
                    // transform before the user's, because things like rotation can affect which direction
                    // the element will be translated towards.
                    this._rootElement.style.transform = this._initialTransform ?
                        transform + ' ' + this._initialTransform : transform;
                };
                /**
                 * Gets the distance that the user has dragged during the current drag sequence.
                 * @private
                 * @param {?} currentPosition Current position of the user's pointer.
                 * @return {?}
                 */
                DragRef.prototype._getDragDistance = function (currentPosition) {
                    /** @type {?} */
                    var pickupPosition = this._pickupPositionOnPage;
                    if (pickupPosition) {
                        return { x: currentPosition.x - pickupPosition.x, y: currentPosition.y - pickupPosition.y };
                    }
                    return { x: 0, y: 0 };
                };
                /**
                 * Cleans up any cached element dimensions that we don't need after dragging has stopped.
                 * @private
                 * @return {?}
                 */
                DragRef.prototype._cleanupCachedDimensions = function () {
                    this._boundaryRect = this._previewRect = undefined;
                };
                /**
                 * Checks whether the element is still inside its boundary after the viewport has been resized.
                 * If not, the position is adjusted so that the element fits again.
                 * @private
                 * @return {?}
                 */
                DragRef.prototype._containInsideBoundaryOnResize = function () {
                    var _a = this._passiveTransform, x = _a.x, y = _a.y;
                    if ((x === 0 && y === 0) || this.isDragging() || !this._boundaryElement) {
                        return;
                    }
                    /** @type {?} */
                    var boundaryRect = this._boundaryElement.getBoundingClientRect();
                    /** @type {?} */
                    var elementRect = this._rootElement.getBoundingClientRect();
                    /** @type {?} */
                    var leftOverflow = boundaryRect.left - elementRect.left;
                    /** @type {?} */
                    var rightOverflow = elementRect.right - boundaryRect.right;
                    /** @type {?} */
                    var topOverflow = boundaryRect.top - elementRect.top;
                    /** @type {?} */
                    var bottomOverflow = elementRect.bottom - boundaryRect.bottom;
                    // If the element has become wider than the boundary, we can't
                    // do much to make it fit so we just anchor it to the left.
                    if (boundaryRect.width > elementRect.width) {
                        if (leftOverflow > 0) {
                            x += leftOverflow;
                        }
                        if (rightOverflow > 0) {
                            x -= rightOverflow;
                        }
                    }
                    else {
                        x = 0;
                    }
                    // If the element has become taller than the boundary, we can't
                    // do much to make it fit so we just anchor it to the top.
                    if (boundaryRect.height > elementRect.height) {
                        if (topOverflow > 0) {
                            y += topOverflow;
                        }
                        if (bottomOverflow > 0) {
                            y -= bottomOverflow;
                        }
                    }
                    else {
                        y = 0;
                    }
                    if (x !== this._passiveTransform.x || y !== this._passiveTransform.y) {
                        this.setFreeDragPosition({ y: y, x: x });
                    }
                };
                return DragRef;
            }());
            /**
             * Gets a 3d `transform` that can be applied to an element.
             * @param {?} x Desired position of the element along the X axis.
             * @param {?} y Desired position of the element along the Y axis.
             * @return {?}
             */
            function getTransform(x, y) {
                // Round the transforms since some browsers will
                // blur the elements for sub-pixel transforms.
                return "translate3d(" + Math.round(x) + "px, " + Math.round(y) + "px, 0)";
            }
            /**
             * Creates a deep clone of an element.
             * @param {?} node
             * @return {?}
             */
            function deepCloneNode(node) {
                /** @type {?} */
                var clone = ( /** @type {?} */(node.cloneNode(true)));
                /** @type {?} */
                var descendantsWithId = clone.querySelectorAll('[id]');
                /** @type {?} */
                var descendantCanvases = node.querySelectorAll('canvas');
                // Remove the `id` to avoid having multiple elements with the same id on the page.
                clone.removeAttribute('id');
                for (var i = 0; i < descendantsWithId.length; i++) {
                    descendantsWithId[i].removeAttribute('id');
                }
                // `cloneNode` won't transfer the content of `canvas` elements so we have to do it ourselves.
                // We match up the cloned canvas to their sources using their index in the DOM.
                if (descendantCanvases.length) {
                    /** @type {?} */
                    var cloneCanvases = clone.querySelectorAll('canvas');
                    for (var i = 0; i < descendantCanvases.length; i++) {
                        /** @type {?} */
                        var correspondingCloneContext = cloneCanvases[i].getContext('2d');
                        if (correspondingCloneContext) {
                            correspondingCloneContext.drawImage(descendantCanvases[i], 0, 0);
                        }
                    }
                }
                return clone;
            }
            /**
             * Clamps a value between a minimum and a maximum.
             * @param {?} value
             * @param {?} min
             * @param {?} max
             * @return {?}
             */
            function clamp(value, min, max) {
                return Math.max(min, Math.min(max, value));
            }
            /**
             * Helper to remove an element from the DOM and to do all the necessary null checks.
             * @param {?} element Element to be removed.
             * @return {?}
             */
            function removeElement(element) {
                if (element && element.parentNode) {
                    element.parentNode.removeChild(element);
                }
            }
            /**
             * Determines whether an event is a touch event.
             * @param {?} event
             * @return {?}
             */
            function isTouchEvent(event) {
                // This function is called for every pixel that the user has dragged so we need it to be
                // as fast as possible. Since we only bind mouse events and touch events, we can assume
                // that if the event's name starts with `t`, it's a touch event.
                return event.type[0] === 't';
            }
            /**
             * Gets the element into which the drag preview should be inserted.
             * @param {?} documentRef
             * @return {?}
             */
            function getPreviewInsertionPoint(documentRef) {
                // We can't use the body if the user is in fullscreen mode,
                // because the preview will render under the fullscreen element.
                // TODO(crisbeto): dedupe this with the `FullscreenOverlayContainer` eventually.
                return documentRef.fullscreenElement ||
                    documentRef.webkitFullscreenElement ||
                    documentRef.mozFullScreenElement ||
                    documentRef.msFullscreenElement ||
                    documentRef.body;
            }
            /**
             * Gets the root HTML element of an embedded view.
             * If the root is not an HTML element it gets wrapped in one.
             * @param {?} viewRef
             * @param {?} _document
             * @return {?}
             */
            function getRootNode(viewRef, _document) {
                /** @type {?} */
                var rootNode = viewRef.rootNodes[0];
                if (rootNode.nodeType !== _document.ELEMENT_NODE) {
                    /** @type {?} */
                    var wrapper = _document.createElement('div');
                    wrapper.appendChild(rootNode);
                    return wrapper;
                }
                return ( /** @type {?} */(rootNode));
            }
            /**
             * @fileoverview added by tsickle
             * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
             */
            /**
             * Moves an item one index in an array to another.
             * @template T
             * @param {?} array Array in which to move the item.
             * @param {?} fromIndex Starting index of the item.
             * @param {?} toIndex Index to which the item should be moved.
             * @return {?}
             */
            function moveItemInArray(array, fromIndex, toIndex) {
                /** @type {?} */
                var from = clamp$1(fromIndex, array.length - 1);
                /** @type {?} */
                var to = clamp$1(toIndex, array.length - 1);
                if (from === to) {
                    return;
                }
                /** @type {?} */
                var target = array[from];
                /** @type {?} */
                var delta = to < from ? -1 : 1;
                for (var i = from; i !== to; i += delta) {
                    array[i] = array[i + delta];
                }
                array[to] = target;
            }
            /**
             * Moves an item from one array to another.
             * @template T
             * @param {?} currentArray Array from which to transfer the item.
             * @param {?} targetArray Array into which to put the item.
             * @param {?} currentIndex Index of the item in its current array.
             * @param {?} targetIndex Index at which to insert the item.
             * @return {?}
             */
            function transferArrayItem(currentArray, targetArray, currentIndex, targetIndex) {
                /** @type {?} */
                var from = clamp$1(currentIndex, currentArray.length - 1);
                /** @type {?} */
                var to = clamp$1(targetIndex, targetArray.length);
                if (currentArray.length) {
                    targetArray.splice(to, 0, currentArray.splice(from, 1)[0]);
                }
            }
            /**
             * Copies an item from one array to another, leaving it in its
             * original position in current array.
             * @template T
             * @param {?} currentArray Array from which to copy the item.
             * @param {?} targetArray Array into which is copy the item.
             * @param {?} currentIndex Index of the item in its current array.
             * @param {?} targetIndex Index at which to insert the item.
             *
             * @return {?}
             */
            function copyArrayItem(currentArray, targetArray, currentIndex, targetIndex) {
                /** @type {?} */
                var to = clamp$1(targetIndex, targetArray.length);
                if (currentArray.length) {
                    targetArray.splice(to, 0, currentArray[currentIndex]);
                }
            }
            /**
             * Clamps a number between zero and a maximum.
             * @param {?} value
             * @param {?} max
             * @return {?}
             */
            function clamp$1(value, max) {
                return Math.max(0, Math.min(max, value));
            }
            /**
             * @fileoverview added by tsickle
             * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
             */
            /**
             * Counter used to generate unique ids for drop refs.
             * @type {?}
             */
            var _uniqueIdCounter = 0;
            /**
             * Proximity, as a ratio to width/height, at which a
             * dragged item will affect the drop container.
             * @type {?}
             */
            var DROP_PROXIMITY_THRESHOLD = 0.05;
            /**
             * Proximity, as a ratio to width/height at which to start auto-scrolling the drop list or the
             * viewport. The value comes from trying it out manually until it feels right.
             * @type {?}
             */
            var SCROLL_PROXIMITY_THRESHOLD = 0.05;
            /**
             * Number of pixels to scroll for each frame when auto-scrolling an element.
             * The value comes from trying it out manually until it feels right.
             * @type {?}
             */
            var AUTO_SCROLL_STEP = 2;
            /**
             * Reference to a drop list. Used to manipulate or dispose of the container.
             * \@docs-private
             * @template T
             */
            var DropListRef = /** @class */ (function () {
                /**
                 * @param {?} element
                 * @param {?} _dragDropRegistry
                 * @param {?} _document
                 * @param {?=} _ngZone
                 * @param {?=} _viewportRuler
                 */
                function DropListRef(element, _dragDropRegistry, _document, _ngZone, _viewportRuler) {
                    var _this = this;
                    this._dragDropRegistry = _dragDropRegistry;
                    this._ngZone = _ngZone;
                    this._viewportRuler = _viewportRuler;
                    /**
                     * Unique ID for the drop list.
                     * @deprecated No longer being used. To be removed.
                     * \@breaking-change 8.0.0
                     */
                    this.id = "cdk-drop-list-ref-" + _uniqueIdCounter++;
                    /**
                     * Whether starting a dragging sequence from this container is disabled.
                     */
                    this.disabled = false;
                    /**
                     * Whether sorting items within the list is disabled.
                     */
                    this.sortingDisabled = false;
                    /**
                     * Whether auto-scrolling the view when the user
                     * moves their pointer close to the edges is disabled.
                     */
                    this.autoScrollDisabled = false;
                    /**
                     * Function that is used to determine whether an item
                     * is allowed to be moved into a drop container.
                     */
                    this.enterPredicate = ( /**
                     * @return {?}
                     */function () { return true; });
                    /**
                     * Emits right before dragging has started.
                     */
                    this.beforeStarted = new rxjs__WEBPACK_IMPORTED_MODULE_2__["Subject"]();
                    /**
                     * Emits when the user has moved a new drag item into this container.
                     */
                    this.entered = new rxjs__WEBPACK_IMPORTED_MODULE_2__["Subject"]();
                    /**
                     * Emits when the user removes an item from the container
                     * by dragging it into another container.
                     */
                    this.exited = new rxjs__WEBPACK_IMPORTED_MODULE_2__["Subject"]();
                    /**
                     * Emits when the user drops an item inside the container.
                     */
                    this.dropped = new rxjs__WEBPACK_IMPORTED_MODULE_2__["Subject"]();
                    /**
                     * Emits as the user is swapping items while actively dragging.
                     */
                    this.sorted = new rxjs__WEBPACK_IMPORTED_MODULE_2__["Subject"]();
                    /**
                     * Whether an item in the list is being dragged.
                     */
                    this._isDragging = false;
                    /**
                     * Cache of the dimensions of all the items inside the container.
                     */
                    this._itemPositions = [];
                    /**
                     * Keeps track of the container's scroll position.
                     */
                    this._scrollPosition = { top: 0, left: 0 };
                    /**
                     * Keeps track of the scroll position of the viewport.
                     */
                    this._viewportScrollPosition = { top: 0, left: 0 };
                    /**
                     * Keeps track of the item that was last swapped with the dragged item, as
                     * well as what direction the pointer was moving in when the swap occured.
                     */
                    this._previousSwap = { drag: ( /** @type {?} */(null)), delta: 0 };
                    /**
                     * Drop lists that are connected to the current one.
                     */
                    this._siblings = [];
                    /**
                     * Direction in which the list is oriented.
                     */
                    this._orientation = 'vertical';
                    /**
                     * Connected siblings that currently have a dragged item.
                     */
                    this._activeSiblings = new Set();
                    /**
                     * Layout direction of the drop list.
                     */
                    this._direction = 'ltr';
                    /**
                     * Subscription to the window being scrolled.
                     */
                    this._viewportScrollSubscription = rxjs__WEBPACK_IMPORTED_MODULE_2__["Subscription"].EMPTY;
                    /**
                     * Vertical direction in which the list is currently scrolling.
                     */
                    this._verticalScrollDirection = 0 /* NONE */;
                    /**
                     * Horizontal direction in which the list is currently scrolling.
                     */
                    this._horizontalScrollDirection = 0 /* NONE */;
                    /**
                     * Used to signal to the current auto-scroll sequence when to stop.
                     */
                    this._stopScrollTimers = new rxjs__WEBPACK_IMPORTED_MODULE_2__["Subject"]();
                    /**
                     * Handles the container being scrolled. Has to be an arrow function to preserve the context.
                     */
                    this._handleScroll = ( /**
                     * @return {?}
                     */function () {
                        if (!_this.isDragging()) {
                            return;
                        }
                        /** @type {?} */
                        var element = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__["coerceElement"])(_this.element);
                        _this._updateAfterScroll(_this._scrollPosition, element.scrollTop, element.scrollLeft);
                    });
                    /**
                     * Starts the interval that'll auto-scroll the element.
                     */
                    this._startScrollInterval = ( /**
                     * @return {?}
                     */function () {
                        _this._stopScrolling();
                        Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["interval"])(0, rxjs__WEBPACK_IMPORTED_MODULE_2__["animationFrameScheduler"])
                            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["takeUntil"])(_this._stopScrollTimers))
                            .subscribe(( /**
                     * @return {?}
                     */function () {
                            /** @type {?} */
                            var node = _this._scrollNode;
                            if (_this._verticalScrollDirection === 1 /* UP */) {
                                incrementVerticalScroll(node, -AUTO_SCROLL_STEP);
                            }
                            else if (_this._verticalScrollDirection === 2 /* DOWN */) {
                                incrementVerticalScroll(node, AUTO_SCROLL_STEP);
                            }
                            if (_this._horizontalScrollDirection === 1 /* LEFT */) {
                                incrementHorizontalScroll(node, -AUTO_SCROLL_STEP);
                            }
                            else if (_this._horizontalScrollDirection === 2 /* RIGHT */) {
                                incrementHorizontalScroll(node, AUTO_SCROLL_STEP);
                            }
                        }));
                    });
                    /** @type {?} */
                    var nativeNode = this.element = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__["coerceElement"])(element);
                    this._shadowRoot = getShadowRoot(nativeNode) || _document;
                    _dragDropRegistry.registerDropContainer(this);
                }
                /**
                 * Removes the drop list functionality from the DOM element.
                 * @return {?}
                 */
                DropListRef.prototype.dispose = function () {
                    this._stopScrolling();
                    this._stopScrollTimers.complete();
                    this._removeListeners();
                    this.beforeStarted.complete();
                    this.entered.complete();
                    this.exited.complete();
                    this.dropped.complete();
                    this.sorted.complete();
                    this._activeSiblings.clear();
                    this._scrollNode = ( /** @type {?} */(null));
                    this._dragDropRegistry.removeDropContainer(this);
                };
                /**
                 * Whether an item from this list is currently being dragged.
                 * @return {?}
                 */
                DropListRef.prototype.isDragging = function () {
                    return this._isDragging;
                };
                /**
                 * Starts dragging an item.
                 * @return {?}
                 */
                DropListRef.prototype.start = function () {
                    var _this = this;
                    /** @type {?} */
                    var element = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__["coerceElement"])(this.element);
                    this.beforeStarted.next();
                    this._isDragging = true;
                    this._cacheItems();
                    this._siblings.forEach(( /**
                     * @param {?} sibling
                     * @return {?}
                     */function (/**
                     * @param {?} sibling
                     * @return {?}
                     */ sibling) { return sibling._startReceiving(_this); }));
                    this._removeListeners();
                    // @breaking-change 9.0.0 Remove check for _ngZone once it's marked as a required param.
                    if (this._ngZone) {
                        this._ngZone.runOutsideAngular(( /**
                         * @return {?}
                         */function () { return element.addEventListener('scroll', _this._handleScroll); }));
                    }
                    else {
                        element.addEventListener('scroll', this._handleScroll);
                    }
                    // @breaking-change 9.0.0 Remove check for _viewportRuler once it's marked as a required param.
                    if (this._viewportRuler) {
                        this._listenToScrollEvents();
                    }
                };
                /**
                 * Emits an event to indicate that the user moved an item into the container.
                 * @param {?} item Item that was moved into the container.
                 * @param {?} pointerX Position of the item along the X axis.
                 * @param {?} pointerY Position of the item along the Y axis.
                 * @return {?}
                 */
                DropListRef.prototype.enter = function (item, pointerX, pointerY) {
                    this.start();
                    // If sorting is disabled, we want the item to return to its starting
                    // position if the user is returning it to its initial container.
                    /** @type {?} */
                    var newIndex = this.sortingDisabled ? this._draggables.indexOf(item) : -1;
                    if (newIndex === -1) {
                        // We use the coordinates of where the item entered the drop
                        // zone to figure out at which index it should be inserted.
                        newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY);
                    }
                    /** @type {?} */
                    var activeDraggables = this._activeDraggables;
                    /** @type {?} */
                    var currentIndex = activeDraggables.indexOf(item);
                    /** @type {?} */
                    var placeholder = item.getPlaceholderElement();
                    /** @type {?} */
                    var newPositionReference = activeDraggables[newIndex];
                    // If the item at the new position is the same as the item that is being dragged,
                    // it means that we're trying to restore the item to its initial position. In this
                    // case we should use the next item from the list as the reference.
                    if (newPositionReference === item) {
                        newPositionReference = activeDraggables[newIndex + 1];
                    }
                    // Since the item may be in the `activeDraggables` already (e.g. if the user dragged it
                    // into another container and back again), we have to ensure that it isn't duplicated.
                    if (currentIndex > -1) {
                        activeDraggables.splice(currentIndex, 1);
                    }
                    // Don't use items that are being dragged as a reference, because
                    // their element has been moved down to the bottom of the body.
                    if (newPositionReference && !this._dragDropRegistry.isDragging(newPositionReference)) {
                        /** @type {?} */
                        var element = newPositionReference.getRootElement();
                        ( /** @type {?} */(element.parentElement)).insertBefore(placeholder, element);
                        activeDraggables.splice(newIndex, 0, item);
                    }
                    else {
                        Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__["coerceElement"])(this.element).appendChild(placeholder);
                        activeDraggables.push(item);
                    }
                    // The transform needs to be cleared so it doesn't throw off the measurements.
                    placeholder.style.transform = '';
                    // Note that the positions were already cached when we called `start` above,
                    // but we need to refresh them since the amount of items has changed.
                    this._cacheItemPositions();
                    this.entered.next({ item: item, container: this, currentIndex: this.getItemIndex(item) });
                };
                /**
                 * Removes an item from the container after it was dragged into another container by the user.
                 * @param {?} item Item that was dragged out.
                 * @return {?}
                 */
                DropListRef.prototype.exit = function (item) {
                    this._reset();
                    this.exited.next({ item: item, container: this });
                };
                /**
                 * Drops an item into this container.
                 * \@breaking-change 9.0.0 `distance` parameter to become required.
                 * @param {?} item Item being dropped into the container.
                 * @param {?} currentIndex Index at which the item should be inserted.
                 * @param {?} previousContainer Container from which the item got dragged in.
                 * @param {?} isPointerOverContainer Whether the user's pointer was over the
                 *    container when the item was dropped.
                 * @param {?=} distance Distance the user has dragged since the start of the dragging sequence.
                 * @return {?}
                 */
                DropListRef.prototype.drop = function (item, currentIndex, previousContainer, isPointerOverContainer, distance) {
                    if (distance === void 0) { distance = { x: 0, y: 0 }; }
                    this._reset();
                    this.dropped.next({
                        item: item,
                        currentIndex: currentIndex,
                        previousIndex: previousContainer.getItemIndex(item),
                        container: this,
                        previousContainer: previousContainer,
                        isPointerOverContainer: isPointerOverContainer,
                        distance: distance
                    });
                };
                /**
                 * Sets the draggable items that are a part of this list.
                 * @template THIS
                 * @this {THIS}
                 * @param {?} items Items that are a part of this list.
                 * @return {THIS}
                 */
                DropListRef.prototype.withItems = function (items) {
                    var _this = this;
                    ( /** @type {?} */(this))._draggables = items;
                    items.forEach(( /**
                     * @param {?} item
                     * @return {?}
                     */function (/**
                     * @param {?} item
                     * @return {?}
                     */ item) { return item._withDropContainer(( /** @type {?} */(_this))); }));
                    if (( /** @type {?} */(this)).isDragging()) {
                        ( /** @type {?} */(this))._cacheItems();
                    }
                    return ( /** @type {?} */(this));
                };
                /**
                 * Sets the layout direction of the drop list.
                 * @template THIS
                 * @this {THIS}
                 * @param {?} direction
                 * @return {THIS}
                 */
                DropListRef.prototype.withDirection = function (direction) {
                    ( /** @type {?} */(this))._direction = direction;
                    return ( /** @type {?} */(this));
                };
                /**
                 * Sets the containers that are connected to this one. When two or more containers are
                 * connected, the user will be allowed to transfer items between them.
                 * @template THIS
                 * @this {THIS}
                 * @param {?} connectedTo Other containers that the current containers should be connected to.
                 * @return {THIS}
                 */
                DropListRef.prototype.connectedTo = function (connectedTo) {
                    ( /** @type {?} */(this))._siblings = connectedTo.slice();
                    return ( /** @type {?} */(this));
                };
                /**
                 * Sets the orientation of the container.
                 * @template THIS
                 * @this {THIS}
                 * @param {?} orientation New orientation for the container.
                 * @return {THIS}
                 */
                DropListRef.prototype.withOrientation = function (orientation) {
                    ( /** @type {?} */(this))._orientation = orientation;
                    return ( /** @type {?} */(this));
                };
                /**
                 * Figures out the index of an item in the container.
                 * @param {?} item Item whose index should be determined.
                 * @return {?}
                 */
                DropListRef.prototype.getItemIndex = function (item) {
                    if (!this._isDragging) {
                        return this._draggables.indexOf(item);
                    }
                    // Items are sorted always by top/left in the cache, however they flow differently in RTL.
                    // The rest of the logic still stands no matter what orientation we're in, however
                    // we need to invert the array when determining the index.
                    /** @type {?} */
                    var items = this._orientation === 'horizontal' && this._direction === 'rtl' ?
                        this._itemPositions.slice().reverse() : this._itemPositions;
                    return findIndex(items, ( /**
                     * @param {?} currentItem
                     * @return {?}
                     */function (/**
                     * @param {?} currentItem
                     * @return {?}
                     */ currentItem) { return currentItem.drag === item; }));
                };
                /**
                 * Whether the list is able to receive the item that
                 * is currently being dragged inside a connected drop list.
                 * @return {?}
                 */
                DropListRef.prototype.isReceiving = function () {
                    return this._activeSiblings.size > 0;
                };
                /**
                 * Sorts an item inside the container based on its position.
                 * @param {?} item Item to be sorted.
                 * @param {?} pointerX Position of the item along the X axis.
                 * @param {?} pointerY Position of the item along the Y axis.
                 * @param {?} pointerDelta Direction in which the pointer is moving along each axis.
                 * @return {?}
                 */
                DropListRef.prototype._sortItem = function (item, pointerX, pointerY, pointerDelta) {
                    // Don't sort the item if sorting is disabled or it's out of range.
                    if (this.sortingDisabled || !this._isPointerNearDropContainer(pointerX, pointerY)) {
                        return;
                    }
                    /** @type {?} */
                    var siblings = this._itemPositions;
                    /** @type {?} */
                    var newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY, pointerDelta);
                    if (newIndex === -1 && siblings.length > 0) {
                        return;
                    }
                    /** @type {?} */
                    var isHorizontal = this._orientation === 'horizontal';
                    /** @type {?} */
                    var currentIndex = findIndex(siblings, ( /**
                     * @param {?} currentItem
                     * @return {?}
                     */function (/**
                     * @param {?} currentItem
                     * @return {?}
                     */ currentItem) { return currentItem.drag === item; }));
                    /** @type {?} */
                    var siblingAtNewPosition = siblings[newIndex];
                    /** @type {?} */
                    var currentPosition = siblings[currentIndex].clientRect;
                    /** @type {?} */
                    var newPosition = siblingAtNewPosition.clientRect;
                    /** @type {?} */
                    var delta = currentIndex > newIndex ? 1 : -1;
                    this._previousSwap.drag = siblingAtNewPosition.drag;
                    this._previousSwap.delta = isHorizontal ? pointerDelta.x : pointerDelta.y;
                    // How many pixels the item's placeholder should be offset.
                    /** @type {?} */
                    var itemOffset = this._getItemOffsetPx(currentPosition, newPosition, delta);
                    // How many pixels all the other items should be offset.
                    /** @type {?} */
                    var siblingOffset = this._getSiblingOffsetPx(currentIndex, siblings, delta);
                    // Save the previous order of the items before moving the item to its new index.
                    // We use this to check whether an item has been moved as a result of the sorting.
                    /** @type {?} */
                    var oldOrder = siblings.slice();
                    // Shuffle the array in place.
                    moveItemInArray(siblings, currentIndex, newIndex);
                    this.sorted.next({
                        previousIndex: currentIndex,
                        currentIndex: newIndex,
                        container: this,
                        item: item
                    });
                    siblings.forEach(( /**
                     * @param {?} sibling
                     * @param {?} index
                     * @return {?}
                     */function (sibling, index) {
                        // Don't do anything if the position hasn't changed.
                        if (oldOrder[index] === sibling) {
                            return;
                        }
                        /** @type {?} */
                        var isDraggedItem = sibling.drag === item;
                        /** @type {?} */
                        var offset = isDraggedItem ? itemOffset : siblingOffset;
                        /** @type {?} */
                        var elementToOffset = isDraggedItem ? item.getPlaceholderElement() :
                            sibling.drag.getRootElement();
                        // Update the offset to reflect the new position.
                        sibling.offset += offset;
                        // Since we're moving the items with a `transform`, we need to adjust their cached
                        // client rects to reflect their new position, as well as swap their positions in the cache.
                        // Note that we shouldn't use `getBoundingClientRect` here to update the cache, because the
                        // elements may be mid-animation which will give us a wrong result.
                        if (isHorizontal) {
                            // Round the transforms since some browsers will
                            // blur the elements, for sub-pixel transforms.
                            elementToOffset.style.transform = "translate3d(" + Math.round(sibling.offset) + "px, 0, 0)";
                            adjustClientRect(sibling.clientRect, 0, offset);
                        }
                        else {
                            elementToOffset.style.transform = "translate3d(0, " + Math.round(sibling.offset) + "px, 0)";
                            adjustClientRect(sibling.clientRect, offset, 0);
                        }
                    }));
                };
                /**
                 * Checks whether the user's pointer is close to the edges of either the
                 * viewport or the drop list and starts the auto-scroll sequence.
                 * @param {?} pointerX User's pointer position along the x axis.
                 * @param {?} pointerY User's pointer position along the y axis.
                 * @return {?}
                 */
                DropListRef.prototype._startScrollingIfNecessary = function (pointerX, pointerY) {
                    var _a;
                    if (this.autoScrollDisabled) {
                        return;
                    }
                    /** @type {?} */
                    var scrollNode;
                    /** @type {?} */
                    var verticalScrollDirection = 0 /* NONE */;
                    /** @type {?} */
                    var horizontalScrollDirection = 0 /* NONE */;
                    // Check whether we should start scrolling the container.
                    if (this._isPointerNearDropContainer(pointerX, pointerY)) {
                        /** @type {?} */
                        var element = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__["coerceElement"])(this.element);
                        _a = __read(getElementScrollDirections(element, this._clientRect, pointerX, pointerY), 2), verticalScrollDirection = _a[0], horizontalScrollDirection = _a[1];
                        if (verticalScrollDirection || horizontalScrollDirection) {
                            scrollNode = element;
                        }
                    }
                    // @breaking-change 9.0.0 Remove null check for _viewportRuler once it's a required parameter.
                    // Otherwise check if we can start scrolling the viewport.
                    if (this._viewportRuler && !verticalScrollDirection && !horizontalScrollDirection) {
                        var _b = this._viewportRuler.getViewportSize(), width = _b.width, height = _b.height;
                        /** @type {?} */
                        var clientRect = { width: width, height: height, top: 0, right: width, bottom: height, left: 0 };
                        verticalScrollDirection = getVerticalScrollDirection(clientRect, pointerY);
                        horizontalScrollDirection = getHorizontalScrollDirection(clientRect, pointerX);
                        scrollNode = window;
                    }
                    if (scrollNode && (verticalScrollDirection !== this._verticalScrollDirection ||
                        horizontalScrollDirection !== this._horizontalScrollDirection ||
                        scrollNode !== this._scrollNode)) {
                        this._verticalScrollDirection = verticalScrollDirection;
                        this._horizontalScrollDirection = horizontalScrollDirection;
                        this._scrollNode = scrollNode;
                        if ((verticalScrollDirection || horizontalScrollDirection) && scrollNode) {
                            // @breaking-change 9.0.0 Remove null check for `_ngZone` once it is made required.
                            if (this._ngZone) {
                                this._ngZone.runOutsideAngular(this._startScrollInterval);
                            }
                            else {
                                this._startScrollInterval();
                            }
                        }
                        else {
                            this._stopScrolling();
                        }
                    }
                };
                /**
                 * Stops any currently-running auto-scroll sequences.
                 * @return {?}
                 */
                DropListRef.prototype._stopScrolling = function () {
                    this._stopScrollTimers.next();
                };
                /**
                 * Caches the position of the drop list.
                 * @private
                 * @return {?}
                 */
                DropListRef.prototype._cacheOwnPosition = function () {
                    /** @type {?} */
                    var element = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__["coerceElement"])(this.element);
                    this._clientRect = getMutableClientRect(element);
                    this._scrollPosition = { top: element.scrollTop, left: element.scrollLeft };
                };
                /**
                 * Refreshes the position cache of the items and sibling containers.
                 * @private
                 * @return {?}
                 */
                DropListRef.prototype._cacheItemPositions = function () {
                    var _this = this;
                    /** @type {?} */
                    var isHorizontal = this._orientation === 'horizontal';
                    this._itemPositions = this._activeDraggables.map(( /**
                     * @param {?} drag
                     * @return {?}
                     */function (/**
                     * @param {?} drag
                     * @return {?}
                     */ drag) {
                        /** @type {?} */
                        var elementToMeasure = _this._dragDropRegistry.isDragging(drag) ?
                            // If the element is being dragged, we have to measure the
                            // placeholder, because the element is hidden.
                            drag.getPlaceholderElement() :
                            drag.getRootElement();
                        return { drag: drag, offset: 0, clientRect: getMutableClientRect(elementToMeasure) };
                    })).sort(( /**
                     * @param {?} a
                     * @param {?} b
                     * @return {?}
                     */function (a, b) {
                        return isHorizontal ? a.clientRect.left - b.clientRect.left :
                            a.clientRect.top - b.clientRect.top;
                    }));
                };
                /**
                 * Resets the container to its initial state.
                 * @private
                 * @return {?}
                 */
                DropListRef.prototype._reset = function () {
                    var _this = this;
                    this._isDragging = false;
                    // TODO(crisbeto): may have to wait for the animations to finish.
                    this._activeDraggables.forEach(( /**
                     * @param {?} item
                     * @return {?}
                     */function (/**
                     * @param {?} item
                     * @return {?}
                     */ item) { return item.getRootElement().style.transform = ''; }));
                    this._siblings.forEach(( /**
                     * @param {?} sibling
                     * @return {?}
                     */function (/**
                     * @param {?} sibling
                     * @return {?}
                     */ sibling) { return sibling._stopReceiving(_this); }));
                    this._activeDraggables = [];
                    this._itemPositions = [];
                    this._previousSwap.drag = null;
                    this._previousSwap.delta = 0;
                    this._stopScrolling();
                    this._removeListeners();
                };
                /**
                 * Gets the offset in pixels by which the items that aren't being dragged should be moved.
                 * @private
                 * @param {?} currentIndex Index of the item currently being dragged.
                 * @param {?} siblings All of the items in the list.
                 * @param {?} delta Direction in which the user is moving.
                 * @return {?}
                 */
                DropListRef.prototype._getSiblingOffsetPx = function (currentIndex, siblings, delta) {
                    /** @type {?} */
                    var isHorizontal = this._orientation === 'horizontal';
                    /** @type {?} */
                    var currentPosition = siblings[currentIndex].clientRect;
                    /** @type {?} */
                    var immediateSibling = siblings[currentIndex + delta * -1];
                    /** @type {?} */
                    var siblingOffset = currentPosition[isHorizontal ? 'width' : 'height'] * delta;
                    if (immediateSibling) {
                        /** @type {?} */
                        var start = isHorizontal ? 'left' : 'top';
                        /** @type {?} */
                        var end = isHorizontal ? 'right' : 'bottom';
                        // Get the spacing between the start of the current item and the end of the one immediately
                        // after it in the direction in which the user is dragging, or vice versa. We add it to the
                        // offset in order to push the element to where it will be when it's inline and is influenced
                        // by the `margin` of its siblings.
                        if (delta === -1) {
                            siblingOffset -= immediateSibling.clientRect[start] - currentPosition[end];
                        }
                        else {
                            siblingOffset += currentPosition[start] - immediateSibling.clientRect[end];
                        }
                    }
                    return siblingOffset;
                };
                /**
                 * Checks whether the pointer coordinates are close to the drop container.
                 * @private
                 * @param {?} pointerX Coordinates along the X axis.
                 * @param {?} pointerY Coordinates along the Y axis.
                 * @return {?}
                 */
                DropListRef.prototype._isPointerNearDropContainer = function (pointerX, pointerY) {
                    var _a = this._clientRect, top = _a.top, right = _a.right, bottom = _a.bottom, left = _a.left, width = _a.width, height = _a.height;
                    /** @type {?} */
                    var xThreshold = width * DROP_PROXIMITY_THRESHOLD;
                    /** @type {?} */
                    var yThreshold = height * DROP_PROXIMITY_THRESHOLD;
                    return pointerY > top - yThreshold && pointerY < bottom + yThreshold &&
                        pointerX > left - xThreshold && pointerX < right + xThreshold;
                };
                /**
                 * Gets the offset in pixels by which the item that is being dragged should be moved.
                 * @private
                 * @param {?} currentPosition Current position of the item.
                 * @param {?} newPosition Position of the item where the current item should be moved.
                 * @param {?} delta Direction in which the user is moving.
                 * @return {?}
                 */
                DropListRef.prototype._getItemOffsetPx = function (currentPosition, newPosition, delta) {
                    /** @type {?} */
                    var isHorizontal = this._orientation === 'horizontal';
                    /** @type {?} */
                    var itemOffset = isHorizontal ? newPosition.left - currentPosition.left :
                        newPosition.top - currentPosition.top;
                    // Account for differences in the item width/height.
                    if (delta === -1) {
                        itemOffset += isHorizontal ? newPosition.width - currentPosition.width :
                            newPosition.height - currentPosition.height;
                    }
                    return itemOffset;
                };
                /**
                 * Gets the index of an item in the drop container, based on the position of the user's pointer.
                 * @private
                 * @param {?} item Item that is being sorted.
                 * @param {?} pointerX Position of the user's pointer along the X axis.
                 * @param {?} pointerY Position of the user's pointer along the Y axis.
                 * @param {?=} delta Direction in which the user is moving their pointer.
                 * @return {?}
                 */
                DropListRef.prototype._getItemIndexFromPointerPosition = function (item, pointerX, pointerY, delta) {
                    var _this = this;
                    /** @type {?} */
                    var isHorizontal = this._orientation === 'horizontal';
                    return findIndex(this._itemPositions, ( /**
                     * @param {?} __0
                     * @param {?} _
                     * @param {?} array
                     * @return {?}
                     */function (_a, _, array) {
                        var drag = _a.drag, clientRect = _a.clientRect;
                        if (drag === item) {
                            // If there's only one item left in the container, it must be
                            // the dragged item itself so we use it as a reference.
                            return array.length < 2;
                        }
                        if (delta) {
                            /** @type {?} */
                            var direction = isHorizontal ? delta.x : delta.y;
                            // If the user is still hovering over the same item as last time, and they didn't change
                            // the direction in which they're dragging, we don't consider it a direction swap.
                            if (drag === _this._previousSwap.drag && direction === _this._previousSwap.delta) {
                                return false;
                            }
                        }
                        return isHorizontal ?
                            // Round these down since most browsers report client rects with
                            // sub-pixel precision, whereas the pointer coordinates are rounded to pixels.
                            pointerX >= Math.floor(clientRect.left) && pointerX <= Math.floor(clientRect.right) :
                            pointerY >= Math.floor(clientRect.top) && pointerY <= Math.floor(clientRect.bottom);
                    }));
                };
                /**
                 * Caches the current items in the list and their positions.
                 * @private
                 * @return {?}
                 */
                DropListRef.prototype._cacheItems = function () {
                    this._activeDraggables = this._draggables.slice();
                    this._cacheItemPositions();
                    this._cacheOwnPosition();
                };
                /**
                 * Updates the internal state of the container after a scroll event has happened.
                 * @private
                 * @param {?} scrollPosition Object that is keeping track of the scroll position.
                 * @param {?} newTop New top scroll position.
                 * @param {?} newLeft New left scroll position.
                 * @param {?=} extraClientRect Extra `ClientRect` object that should be updated, in addition to the
                 *  ones of the drag items. Useful when the viewport has been scrolled and we also need to update
                 *  the `ClientRect` of the list.
                 * @return {?}
                 */
                DropListRef.prototype._updateAfterScroll = function (scrollPosition, newTop, newLeft, extraClientRect) {
                    var _this = this;
                    /** @type {?} */
                    var topDifference = scrollPosition.top - newTop;
                    /** @type {?} */
                    var leftDifference = scrollPosition.left - newLeft;
                    if (extraClientRect) {
                        adjustClientRect(extraClientRect, topDifference, leftDifference);
                    }
                    // Since we know the amount that the user has scrolled we can shift all of the client rectangles
                    // ourselves. This is cheaper than re-measuring everything and we can avoid inconsistent
                    // behavior where we might be measuring the element before its position has changed.
                    this._itemPositions.forEach(( /**
                     * @param {?} __0
                     * @return {?}
                     */function (_a) {
                        var clientRect = _a.clientRect;
                        adjustClientRect(clientRect, topDifference, leftDifference);
                    }));
                    // We need two loops for this, because we want all of the cached
                    // positions to be up-to-date before we re-sort the item.
                    this._itemPositions.forEach(( /**
                     * @param {?} __0
                     * @return {?}
                     */function (_a) {
                        var drag = _a.drag;
                        if (_this._dragDropRegistry.isDragging(drag)) {
                            // We need to re-sort the item manually, because the pointer move
                            // events won't be dispatched while the user is scrolling.
                            drag._sortFromLastPointerPosition();
                        }
                    }));
                    scrollPosition.top = newTop;
                    scrollPosition.left = newLeft;
                };
                /**
                 * Removes the event listeners associated with this drop list.
                 * @private
                 * @return {?}
                 */
                DropListRef.prototype._removeListeners = function () {
                    Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__["coerceElement"])(this.element).removeEventListener('scroll', this._handleScroll);
                    this._viewportScrollSubscription.unsubscribe();
                };
                /**
                 * Checks whether the user's pointer is positioned over the container.
                 * @param {?} x Pointer position along the X axis.
                 * @param {?} y Pointer position along the Y axis.
                 * @return {?}
                 */
                DropListRef.prototype._isOverContainer = function (x, y) {
                    return isInsideClientRect(this._clientRect, x, y);
                };
                /**
                 * Figures out whether an item should be moved into a sibling
                 * drop container, based on its current position.
                 * @param {?} item Drag item that is being moved.
                 * @param {?} x Position of the item along the X axis.
                 * @param {?} y Position of the item along the Y axis.
                 * @return {?}
                 */
                DropListRef.prototype._getSiblingContainerFromPosition = function (item, x, y) {
                    return this._siblings.find(( /**
                     * @param {?} sibling
                     * @return {?}
                     */function (/**
                     * @param {?} sibling
                     * @return {?}
                     */ sibling) { return sibling._canReceive(item, x, y); }));
                };
                /**
                 * Checks whether the drop list can receive the passed-in item.
                 * @param {?} item Item that is being dragged into the list.
                 * @param {?} x Position of the item along the X axis.
                 * @param {?} y Position of the item along the Y axis.
                 * @return {?}
                 */
                DropListRef.prototype._canReceive = function (item, x, y) {
                    if (!this.enterPredicate(item, this) || !isInsideClientRect(this._clientRect, x, y)) {
                        return false;
                    }
                    /** @type {?} */
                    var elementFromPoint = ( /** @type {?} */(this._shadowRoot.elementFromPoint(x, y)));
                    // If there's no element at the pointer position, then
                    // the client rect is probably scrolled out of the view.
                    if (!elementFromPoint) {
                        return false;
                    }
                    /** @type {?} */
                    var nativeElement = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__["coerceElement"])(this.element);
                    // The `ClientRect`, that we're using to find the container over which the user is
                    // hovering, doesn't give us any information on whether the element has been scrolled
                    // out of the view or whether it's overlapping with other containers. This means that
                    // we could end up transferring the item into a container that's invisible or is positioned
                    // below another one. We use the result from `elementFromPoint` to get the top-most element
                    // at the pointer position and to find whether it's one of the intersecting drop containers.
                    return elementFromPoint === nativeElement || nativeElement.contains(elementFromPoint);
                };
                /**
                 * Called by one of the connected drop lists when a dragging sequence has started.
                 * @param {?} sibling Sibling in which dragging has started.
                 * @return {?}
                 */
                DropListRef.prototype._startReceiving = function (sibling) {
                    /** @type {?} */
                    var activeSiblings = this._activeSiblings;
                    if (!activeSiblings.has(sibling)) {
                        activeSiblings.add(sibling);
                        this._cacheOwnPosition();
                        this._listenToScrollEvents();
                    }
                };
                /**
                 * Called by a connected drop list when dragging has stopped.
                 * @param {?} sibling Sibling whose dragging has stopped.
                 * @return {?}
                 */
                DropListRef.prototype._stopReceiving = function (sibling) {
                    this._activeSiblings.delete(sibling);
                    this._viewportScrollSubscription.unsubscribe();
                };
                /**
                 * Starts listening to scroll events on the viewport.
                 * Used for updating the internal state of the list.
                 * @private
                 * @return {?}
                 */
                DropListRef.prototype._listenToScrollEvents = function () {
                    var _this = this;
                    this._viewportScrollPosition = ( /** @type {?} */(this._viewportRuler)).getViewportScrollPosition();
                    this._viewportScrollSubscription = this._dragDropRegistry.scroll.subscribe(( /**
                     * @return {?}
                     */function () {
                        if (_this.isDragging()) {
                            /** @type {?} */
                            var newPosition = ( /** @type {?} */(_this._viewportRuler)).getViewportScrollPosition();
                            _this._updateAfterScroll(_this._viewportScrollPosition, newPosition.top, newPosition.left, _this._clientRect);
                        }
                        else if (_this.isReceiving()) {
                            _this._cacheOwnPosition();
                        }
                    }));
                };
                return DropListRef;
            }());
            /**
             * Updates the top/left positions of a `ClientRect`, as well as their bottom/right counterparts.
             * @param {?} clientRect `ClientRect` that should be updated.
             * @param {?} top Amount to add to the `top` position.
             * @param {?} left Amount to add to the `left` position.
             * @return {?}
             */
            function adjustClientRect(clientRect, top, left) {
                clientRect.top += top;
                clientRect.bottom = clientRect.top + clientRect.height;
                clientRect.left += left;
                clientRect.right = clientRect.left + clientRect.width;
            }
            /**
             * Finds the index of an item that matches a predicate function. Used as an equivalent
             * of `Array.prototype.findIndex` which isn't part of the standard Google typings.
             * @template T
             * @param {?} array Array in which to look for matches.
             * @param {?} predicate Function used to determine whether an item is a match.
             * @return {?}
             */
            function findIndex(array, predicate) {
                for (var i = 0; i < array.length; i++) {
                    if (predicate(array[i], i, array)) {
                        return i;
                    }
                }
                return -1;
            }
            /**
             * Checks whether some coordinates are within a `ClientRect`.
             * @param {?} clientRect ClientRect that is being checked.
             * @param {?} x Coordinates along the X axis.
             * @param {?} y Coordinates along the Y axis.
             * @return {?}
             */
            function isInsideClientRect(clientRect, x, y) {
                var top = clientRect.top, bottom = clientRect.bottom, left = clientRect.left, right = clientRect.right;
                return y >= top && y <= bottom && x >= left && x <= right;
            }
            /**
             * Gets a mutable version of an element's bounding `ClientRect`.
             * @param {?} element
             * @return {?}
             */
            function getMutableClientRect(element) {
                /** @type {?} */
                var clientRect = element.getBoundingClientRect();
                // We need to clone the `clientRect` here, because all the values on it are readonly
                // and we need to be able to update them. Also we can't use a spread here, because
                // the values on a `ClientRect` aren't own properties. See:
                // https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect#Notes
                return {
                    top: clientRect.top,
                    right: clientRect.right,
                    bottom: clientRect.bottom,
                    left: clientRect.left,
                    width: clientRect.width,
                    height: clientRect.height
                };
            }
            /**
             * Increments the vertical scroll position of a node.
             * @param {?} node Node whose scroll position should change.
             * @param {?} amount Amount of pixels that the `node` should be scrolled.
             * @return {?}
             */
            function incrementVerticalScroll(node, amount) {
                if (node === window) {
                    (( /** @type {?} */(node))).scrollBy(0, amount);
                }
                else {
                    // Ideally we could use `Element.scrollBy` here as well, but IE and Edge don't support it.
                    (( /** @type {?} */(node))).scrollTop += amount;
                }
            }
            /**
             * Increments the horizontal scroll position of a node.
             * @param {?} node Node whose scroll position should change.
             * @param {?} amount Amount of pixels that the `node` should be scrolled.
             * @return {?}
             */
            function incrementHorizontalScroll(node, amount) {
                if (node === window) {
                    (( /** @type {?} */(node))).scrollBy(amount, 0);
                }
                else {
                    // Ideally we could use `Element.scrollBy` here as well, but IE and Edge don't support it.
                    (( /** @type {?} */(node))).scrollLeft += amount;
                }
            }
            /**
             * Gets whether the vertical auto-scroll direction of a node.
             * @param {?} clientRect Dimensions of the node.
             * @param {?} pointerY Position of the user's pointer along the y axis.
             * @return {?}
             */
            function getVerticalScrollDirection(clientRect, pointerY) {
                var top = clientRect.top, bottom = clientRect.bottom, height = clientRect.height;
                /** @type {?} */
                var yThreshold = height * SCROLL_PROXIMITY_THRESHOLD;
                if (pointerY >= top - yThreshold && pointerY <= top + yThreshold) {
                    return 1 /* UP */;
                }
                else if (pointerY >= bottom - yThreshold && pointerY <= bottom + yThreshold) {
                    return 2 /* DOWN */;
                }
                return 0 /* NONE */;
            }
            /**
             * Gets whether the horizontal auto-scroll direction of a node.
             * @param {?} clientRect Dimensions of the node.
             * @param {?} pointerX Position of the user's pointer along the x axis.
             * @return {?}
             */
            function getHorizontalScrollDirection(clientRect, pointerX) {
                var left = clientRect.left, right = clientRect.right, width = clientRect.width;
                /** @type {?} */
                var xThreshold = width * SCROLL_PROXIMITY_THRESHOLD;
                if (pointerX >= left - xThreshold && pointerX <= left + xThreshold) {
                    return 1 /* LEFT */;
                }
                else if (pointerX >= right - xThreshold && pointerX <= right + xThreshold) {
                    return 2 /* RIGHT */;
                }
                return 0 /* NONE */;
            }
            /**
             * Gets the directions in which an element node should be scrolled,
             * assuming that the user's pointer is already within it scrollable region.
             * @param {?} element Element for which we should calculate the scroll direction.
             * @param {?} clientRect Bounding client rectangle of the element.
             * @param {?} pointerX Position of the user's pointer along the x axis.
             * @param {?} pointerY Position of the user's pointer along the y axis.
             * @return {?}
             */
            function getElementScrollDirections(element, clientRect, pointerX, pointerY) {
                /** @type {?} */
                var computedVertical = getVerticalScrollDirection(clientRect, pointerY);
                /** @type {?} */
                var computedHorizontal = getHorizontalScrollDirection(clientRect, pointerX);
                /** @type {?} */
                var verticalScrollDirection = 0 /* NONE */;
                /** @type {?} */
                var horizontalScrollDirection = 0 /* NONE */;
                // Note that we here we do some extra checks for whether the element is actually scrollable in
                // a certain direction and we only assign the scroll direction if it is. We do this so that we
                // can allow other elements to be scrolled, if the current element can't be scrolled anymore.
                // This allows us to handle cases where the scroll regions of two scrollable elements overlap.
                if (computedVertical) {
                    /** @type {?} */
                    var scrollTop = element.scrollTop;
                    if (computedVertical === 1 /* UP */) {
                        if (scrollTop > 0) {
                            verticalScrollDirection = 1 /* UP */;
                        }
                    }
                    else if (element.scrollHeight - scrollTop > element.clientHeight) {
                        verticalScrollDirection = 2 /* DOWN */;
                    }
                }
                if (computedHorizontal) {
                    /** @type {?} */
                    var scrollLeft = element.scrollLeft;
                    if (computedHorizontal === 1 /* LEFT */) {
                        if (scrollLeft > 0) {
                            horizontalScrollDirection = 1 /* LEFT */;
                        }
                    }
                    else if (element.scrollWidth - scrollLeft > element.clientWidth) {
                        horizontalScrollDirection = 2 /* RIGHT */;
                    }
                }
                return [verticalScrollDirection, horizontalScrollDirection];
            }
            /**
             * Gets the shadow root of an element, if any.
             * @param {?} element
             * @return {?}
             */
            function getShadowRoot(element) {
                if (Object(_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_0__["_supportsShadowDom"])()) {
                    /** @type {?} */
                    var rootNode = element.getRootNode ? element.getRootNode() : null;
                    if (rootNode instanceof ShadowRoot) {
                        return rootNode;
                    }
                }
                return null;
            }
            /**
             * @fileoverview added by tsickle
             * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
             */
            /**
             * Event options that can be used to bind an active, capturing event.
             * @type {?}
             */
            var activeCapturingEventOptions = Object(_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_0__["normalizePassiveListenerOptions"])({
                passive: false,
                capture: true
            });
            /**
             * Service that keeps track of all the drag item and drop container
             * instances, and manages global event listeners on the `document`.
             * \@docs-private
             * @template I, C
             */
            // Note: this class is generic, rather than referencing CdkDrag and CdkDropList directly, in order
            // to avoid circular imports. If we were to reference them here, importing the registry into the
            // classes that are registering themselves will introduce a circular import.
            var DragDropRegistry = /** @class */ (function () {
                /**
                 * @param {?} _ngZone
                 * @param {?} _document
                 */
                function DragDropRegistry(_ngZone, _document) {
                    var _this = this;
                    this._ngZone = _ngZone;
                    /**
                     * Registered drop container instances.
                     */
                    this._dropInstances = new Set();
                    /**
                     * Registered drag item instances.
                     */
                    this._dragInstances = new Set();
                    /**
                     * Drag item instances that are currently being dragged.
                     */
                    this._activeDragInstances = new Set();
                    /**
                     * Keeps track of the event listeners that we've bound to the `document`.
                     */
                    this._globalListeners = new Map();
                    /**
                     * Emits the `touchmove` or `mousemove` events that are dispatched
                     * while the user is dragging a drag item instance.
                     */
                    this.pointerMove = new rxjs__WEBPACK_IMPORTED_MODULE_2__["Subject"]();
                    /**
                     * Emits the `touchend` or `mouseup` events that are dispatched
                     * while the user is dragging a drag item instance.
                     */
                    this.pointerUp = new rxjs__WEBPACK_IMPORTED_MODULE_2__["Subject"]();
                    /**
                     * Emits when the viewport has been scrolled while the user is dragging an item.
                     */
                    this.scroll = new rxjs__WEBPACK_IMPORTED_MODULE_2__["Subject"]();
                    /**
                     * Event listener that will prevent the default browser action while the user is dragging.
                     * @param event Event whose default action should be prevented.
                     */
                    this._preventDefaultWhileDragging = ( /**
                     * @param {?} event
                     * @return {?}
                     */function (event) {
                        if (_this._activeDragInstances.size) {
                            event.preventDefault();
                        }
                    });
                    this._document = _document;
                }
                /**
                 * Adds a drop container to the registry.
                 * @param {?} drop
                 * @return {?}
                 */
                DragDropRegistry.prototype.registerDropContainer = function (drop) {
                    if (!this._dropInstances.has(drop)) {
                        if (this.getDropContainer(drop.id)) {
                            throw Error("Drop instance with id \"" + drop.id + "\" has already been registered.");
                        }
                        this._dropInstances.add(drop);
                    }
                };
                /**
                 * Adds a drag item instance to the registry.
                 * @param {?} drag
                 * @return {?}
                 */
                DragDropRegistry.prototype.registerDragItem = function (drag) {
                    var _this = this;
                    this._dragInstances.add(drag);
                    // The `touchmove` event gets bound once, ahead of time, because WebKit
                    // won't preventDefault on a dynamically-added `touchmove` listener.
                    // See https://bugs.webkit.org/show_bug.cgi?id=184250.
                    if (this._dragInstances.size === 1) {
                        this._ngZone.runOutsideAngular(( /**
                         * @return {?}
                         */function () {
                            // The event handler has to be explicitly active,
                            // because newer browsers make it passive by default.
                            _this._document.addEventListener('touchmove', _this._preventDefaultWhileDragging, activeCapturingEventOptions);
                        }));
                    }
                };
                /**
                 * Removes a drop container from the registry.
                 * @param {?} drop
                 * @return {?}
                 */
                DragDropRegistry.prototype.removeDropContainer = function (drop) {
                    this._dropInstances.delete(drop);
                };
                /**
                 * Removes a drag item instance from the registry.
                 * @param {?} drag
                 * @return {?}
                 */
                DragDropRegistry.prototype.removeDragItem = function (drag) {
                    this._dragInstances.delete(drag);
                    this.stopDragging(drag);
                    if (this._dragInstances.size === 0) {
                        this._document.removeEventListener('touchmove', this._preventDefaultWhileDragging, activeCapturingEventOptions);
                    }
                };
                /**
                 * Starts the dragging sequence for a drag instance.
                 * @param {?} drag Drag instance which is being dragged.
                 * @param {?} event Event that initiated the dragging.
                 * @return {?}
                 */
                DragDropRegistry.prototype.startDragging = function (drag, event) {
                    var _this = this;
                    // Do not process the same drag twice to avoid memory leaks and redundant listeners
                    if (this._activeDragInstances.has(drag)) {
                        return;
                    }
                    this._activeDragInstances.add(drag);
                    if (this._activeDragInstances.size === 1) {
                        /** @type {?} */
                        var isTouchEvent_1 = event.type.startsWith('touch');
                        /** @type {?} */
                        var moveEvent = isTouchEvent_1 ? 'touchmove' : 'mousemove';
                        /** @type {?} */
                        var upEvent = isTouchEvent_1 ? 'touchend' : 'mouseup';
                        // We explicitly bind __active__ listeners here, because newer browsers will default to
                        // passive ones for `mousemove` and `touchmove`. The events need to be active, because we
                        // use `preventDefault` to prevent the page from scrolling while the user is dragging.
                        this._globalListeners
                            .set(moveEvent, {
                            handler: ( /**
                             * @param {?} e
                             * @return {?}
                             */function (e) { return _this.pointerMove.next(( /** @type {?} */(e))); }),
                            options: activeCapturingEventOptions
                        })
                            .set(upEvent, {
                            handler: ( /**
                             * @param {?} e
                             * @return {?}
                             */function (e) { return _this.pointerUp.next(( /** @type {?} */(e))); }),
                            options: true
                        })
                            .set('scroll', {
                            handler: ( /**
                             * @param {?} e
                             * @return {?}
                             */function (e) { return _this.scroll.next(e); }),
                            // Use capturing so that we pick up scroll changes in any scrollable nodes that aren't
                            // the document. See https://github.com/angular/components/issues/17144.
                            options: true
                        })
                            // Preventing the default action on `mousemove` isn't enough to disable text selection
                            // on Safari so we need to prevent the selection event as well. Alternatively this can
                            // be done by setting `user-select: none` on the `body`, however it has causes a style
                            // recalculation which can be expensive on pages with a lot of elements.
                            .set('selectstart', {
                            handler: this._preventDefaultWhileDragging,
                            options: activeCapturingEventOptions
                        });
                        this._ngZone.runOutsideAngular(( /**
                         * @return {?}
                         */function () {
                            _this._globalListeners.forEach(( /**
                             * @param {?} config
                             * @param {?} name
                             * @return {?}
                             */function (config, name) {
                                _this._document.addEventListener(name, config.handler, config.options);
                            }));
                        }));
                    }
                };
                /**
                 * Stops dragging a drag item instance.
                 * @param {?} drag
                 * @return {?}
                 */
                DragDropRegistry.prototype.stopDragging = function (drag) {
                    this._activeDragInstances.delete(drag);
                    if (this._activeDragInstances.size === 0) {
                        this._clearGlobalListeners();
                    }
                };
                /**
                 * Gets whether a drag item instance is currently being dragged.
                 * @param {?} drag
                 * @return {?}
                 */
                DragDropRegistry.prototype.isDragging = function (drag) {
                    return this._activeDragInstances.has(drag);
                };
                /**
                 * Gets a drop container by its id.
                 * @deprecated No longer being used. To be removed.
                 * \@breaking-change 8.0.0
                 * @param {?} id
                 * @return {?}
                 */
                DragDropRegistry.prototype.getDropContainer = function (id) {
                    return Array.from(this._dropInstances).find(( /**
                     * @param {?} instance
                     * @return {?}
                     */function (/**
                     * @param {?} instance
                     * @return {?}
                     */ instance) { return instance.id === id; }));
                };
                /**
                 * @return {?}
                 */
                DragDropRegistry.prototype.ngOnDestroy = function () {
                    var _this = this;
                    this._dragInstances.forEach(( /**
                     * @param {?} instance
                     * @return {?}
                     */function (/**
                     * @param {?} instance
                     * @return {?}
                     */ instance) { return _this.removeDragItem(instance); }));
                    this._dropInstances.forEach(( /**
                     * @param {?} instance
                     * @return {?}
                     */function (/**
                     * @param {?} instance
                     * @return {?}
                     */ instance) { return _this.removeDropContainer(instance); }));
                    this._clearGlobalListeners();
                    this.pointerMove.complete();
                    this.pointerUp.complete();
                };
                /**
                 * Clears out the global event listeners from the `document`.
                 * @private
                 * @return {?}
                 */
                DragDropRegistry.prototype._clearGlobalListeners = function () {
                    var _this = this;
                    this._globalListeners.forEach(( /**
                     * @param {?} config
                     * @param {?} name
                     * @return {?}
                     */function (config, name) {
                        _this._document.removeEventListener(name, config.handler, config.options);
                    }));
                    this._globalListeners.clear();
                };
                return DragDropRegistry;
            }());
            DragDropRegistry.decorators = [
                { type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Injectable"], args: [{ providedIn: 'root' },] },
            ];
            /** @nocollapse */
            DragDropRegistry.ctorParameters = function () { return [
                { type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["NgZone"] },
                { type: undefined, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Inject"], args: [_angular_common__WEBPACK_IMPORTED_MODULE_5__["DOCUMENT"],] }] }
            ]; };
            /** @nocollapse */ DragDropRegistry.ngInjectableDef = Object(_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineInjectable"])({ factory: function DragDropRegistry_Factory() { return new DragDropRegistry(Object(_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵinject"])(_angular_core__WEBPACK_IMPORTED_MODULE_4__["NgZone"]), Object(_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵinject"])(_angular_common__WEBPACK_IMPORTED_MODULE_5__["DOCUMENT"])); }, token: DragDropRegistry, providedIn: "root" });
            /**
             * @fileoverview added by tsickle
             * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
             */
            /**
             * Default configuration to be used when creating a `DragRef`.
             * @type {?}
             */
            var DEFAULT_CONFIG = {
                dragStartThreshold: 5,
                pointerDirectionChangeThreshold: 5
            };
            /**
             * Service that allows for drag-and-drop functionality to be attached to DOM elements.
             */
            var DragDrop = /** @class */ (function () {
                /**
                 * @param {?} _document
                 * @param {?} _ngZone
                 * @param {?} _viewportRuler
                 * @param {?} _dragDropRegistry
                 */
                function DragDrop(_document, _ngZone, _viewportRuler, _dragDropRegistry) {
                    this._document = _document;
                    this._ngZone = _ngZone;
                    this._viewportRuler = _viewportRuler;
                    this._dragDropRegistry = _dragDropRegistry;
                }
                /**
                 * Turns an element into a draggable item.
                 * @template T
                 * @param {?} element Element to which to attach the dragging functionality.
                 * @param {?=} config Object used to configure the dragging behavior.
                 * @return {?}
                 */
                DragDrop.prototype.createDrag = function (element, config) {
                    if (config === void 0) { config = DEFAULT_CONFIG; }
                    return new DragRef(element, config, this._document, this._ngZone, this._viewportRuler, this._dragDropRegistry);
                };
                /**
                 * Turns an element into a drop list.
                 * @template T
                 * @param {?} element Element to which to attach the drop list functionality.
                 * @return {?}
                 */
                DragDrop.prototype.createDropList = function (element) {
                    return new DropListRef(element, this._dragDropRegistry, this._document, this._ngZone, this._viewportRuler);
                };
                return DragDrop;
            }());
            DragDrop.decorators = [
                { type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Injectable"], args: [{ providedIn: 'root' },] },
            ];
            /** @nocollapse */
            DragDrop.ctorParameters = function () { return [
                { type: undefined, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Inject"], args: [_angular_common__WEBPACK_IMPORTED_MODULE_5__["DOCUMENT"],] }] },
                { type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["NgZone"] },
                { type: _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_6__["ViewportRuler"] },
                { type: DragDropRegistry }
            ]; };
            /** @nocollapse */ DragDrop.ngInjectableDef = Object(_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineInjectable"])({ factory: function DragDrop_Factory() { return new DragDrop(Object(_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵinject"])(_angular_common__WEBPACK_IMPORTED_MODULE_5__["DOCUMENT"]), Object(_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵinject"])(_angular_core__WEBPACK_IMPORTED_MODULE_4__["NgZone"]), Object(_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵinject"])(_angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_6__["ViewportRuler"]), Object(_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵinject"])(DragDropRegistry)); }, token: DragDrop, providedIn: "root" });
            /**
             * @fileoverview added by tsickle
             * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
             */
            /**
             * Injection token that is used to provide a CdkDropList instance to CdkDrag.
             * Used for avoiding circular imports.
             * @type {?}
             */
            var CDK_DROP_LIST = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["InjectionToken"]('CDK_DROP_LIST');
            /**
             * Injection token that is used to provide a CdkDropList instance to CdkDrag.
             * Used for avoiding circular imports.
             * @deprecated Use `CDK_DROP_LIST` instead.
             * \@breaking-change 8.0.0
             * @type {?}
             */
            var CDK_DROP_LIST_CONTAINER = CDK_DROP_LIST;
            /**
             * @fileoverview added by tsickle
             * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
             */
            /**
             * @fileoverview added by tsickle
             * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
             */
            /**
             * Injection token that can be used for a `CdkDrag` to provide itself as a parent to the
             * drag-specific child directive (`CdkDragHandle`, `CdkDragPreview` etc.). Used primarily
             * to avoid circular imports.
             * \@docs-private
             * @type {?}
             */
            var CDK_DRAG_PARENT = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["InjectionToken"]('CDK_DRAG_PARENT');
            /**
             * @fileoverview added by tsickle
             * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
             */
            /**
             * Handle that can be used to drag and CdkDrag instance.
             */
            var CdkDragHandle = /** @class */ (function () {
                /**
                 * @param {?} element
                 * @param {?=} parentDrag
                 */
                function CdkDragHandle(element, parentDrag) {
                    this.element = element;
                    /**
                     * Emits when the state of the handle has changed.
                     */
                    this._stateChanges = new rxjs__WEBPACK_IMPORTED_MODULE_2__["Subject"]();
                    this._disabled = false;
                    this._parentDrag = parentDrag;
                    toggleNativeDragInteractions(element.nativeElement, false);
                }
                Object.defineProperty(CdkDragHandle.prototype, "disabled", {
                    /**
                     * Whether starting to drag through this handle is disabled.
                     * @return {?}
                     */
                    get: function () { return this._disabled; },
                    /**
                     * @param {?} value
                     * @return {?}
                     */
                    set: function (value) {
                        this._disabled = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__["coerceBooleanProperty"])(value);
                        this._stateChanges.next(this);
                    },
                    enumerable: true,
                    configurable: true
                });
                /**
                 * @return {?}
                 */
                CdkDragHandle.prototype.ngOnDestroy = function () {
                    this._stateChanges.complete();
                };
                return CdkDragHandle;
            }());
            CdkDragHandle.decorators = [
                { type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Directive"], args: [{
                            selector: '[cdkDragHandle]',
                            host: {
                                'class': 'cdk-drag-handle'
                            }
                        },] },
            ];
            /** @nocollapse */
            CdkDragHandle.ctorParameters = function () { return [
                { type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["ElementRef"] },
                { type: undefined, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Inject"], args: [CDK_DRAG_PARENT,] }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Optional"] }] }
            ]; };
            CdkDragHandle.propDecorators = {
                disabled: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"], args: ['cdkDragHandleDisabled',] }]
            };
            /**
             * @fileoverview added by tsickle
             * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
             */
            /**
             * Element that will be used as a template for the placeholder of a CdkDrag when
             * it is being dragged. The placeholder is displayed in place of the element being dragged.
             * @template T
             */
            var CdkDragPlaceholder = /** @class */ (function () {
                /**
                 * @param {?} templateRef
                 */
                function CdkDragPlaceholder(templateRef) {
                    this.templateRef = templateRef;
                }
                return CdkDragPlaceholder;
            }());
            CdkDragPlaceholder.decorators = [
                { type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Directive"], args: [{
                            selector: 'ng-template[cdkDragPlaceholder]'
                        },] },
            ];
            /** @nocollapse */
            CdkDragPlaceholder.ctorParameters = function () { return [
                { type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["TemplateRef"] }
            ]; };
            CdkDragPlaceholder.propDecorators = {
                data: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"] }]
            };
            /**
             * @fileoverview added by tsickle
             * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
             */
            /**
             * Element that will be used as a template for the preview
             * of a CdkDrag when it is being dragged.
             * @template T
             */
            var CdkDragPreview = /** @class */ (function () {
                /**
                 * @param {?} templateRef
                 */
                function CdkDragPreview(templateRef) {
                    this.templateRef = templateRef;
                }
                return CdkDragPreview;
            }());
            CdkDragPreview.decorators = [
                { type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Directive"], args: [{
                            selector: 'ng-template[cdkDragPreview]'
                        },] },
            ];
            /** @nocollapse */
            CdkDragPreview.ctorParameters = function () { return [
                { type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["TemplateRef"] }
            ]; };
            CdkDragPreview.propDecorators = {
                data: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"] }]
            };
            /**
             * @fileoverview added by tsickle
             * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
             */
            /**
             * Injection token that can be used to configure the behavior of `CdkDrag`.
             * @type {?}
             */
            var CDK_DRAG_CONFIG = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["InjectionToken"]('CDK_DRAG_CONFIG', {
                providedIn: 'root',
                factory: CDK_DRAG_CONFIG_FACTORY
            });
            /**
             * \@docs-private
             * @return {?}
             */
            function CDK_DRAG_CONFIG_FACTORY() {
                return { dragStartThreshold: 5, pointerDirectionChangeThreshold: 5 };
            }
            /**
             * Element that can be moved inside a CdkDropList container.
             * @template T
             */
            var CdkDrag = /** @class */ (function () {
                /**
                 * @param {?} element
                 * @param {?} dropContainer
                 * @param {?} _document
                 * @param {?} _ngZone
                 * @param {?} _viewContainerRef
                 * @param {?} config
                 * @param {?} _dir
                 * @param {?} dragDrop
                 * @param {?} _changeDetectorRef
                 */
                function CdkDrag(element, dropContainer, _document, _ngZone, _viewContainerRef, config, _dir, dragDrop, _changeDetectorRef) {
                    var _this = this;
                    this.element = element;
                    this.dropContainer = dropContainer;
                    this._document = _document;
                    this._ngZone = _ngZone;
                    this._viewContainerRef = _viewContainerRef;
                    this._dir = _dir;
                    this._changeDetectorRef = _changeDetectorRef;
                    this._destroyed = new rxjs__WEBPACK_IMPORTED_MODULE_2__["Subject"]();
                    /**
                     * Amount of milliseconds to wait after the user has put their
                     * pointer down before starting to drag the element.
                     */
                    this.dragStartDelay = 0;
                    this._disabled = false;
                    /**
                     * Emits when the user starts dragging the item.
                     */
                    this.started = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
                    /**
                     * Emits when the user has released a drag item, before any animations have started.
                     */
                    this.released = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
                    /**
                     * Emits when the user stops dragging an item in the container.
                     */
                    this.ended = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
                    /**
                     * Emits when the user has moved the item into a new container.
                     */
                    this.entered = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
                    /**
                     * Emits when the user removes the item its container by dragging it into another container.
                     */
                    this.exited = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
                    /**
                     * Emits when the user drops the item inside a container.
                     */
                    this.dropped = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
                    /**
                     * Emits as the user is dragging the item. Use with caution,
                     * because this event will fire for every pixel that the user has dragged.
                     */
                    this.moved = new rxjs__WEBPACK_IMPORTED_MODULE_2__["Observable"](( /**
                     * @param {?} observer
                     * @return {?}
                     */function (observer) {
                        /** @type {?} */
                        var subscription = _this._dragRef.moved.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(( /**
                         * @param {?} movedEvent
                         * @return {?}
                         */function (/**
                         * @param {?} movedEvent
                         * @return {?}
                         */ movedEvent) { return ({
                            source: _this,
                            pointerPosition: movedEvent.pointerPosition,
                            event: movedEvent.event,
                            delta: movedEvent.delta,
                            distance: movedEvent.distance
                        }); }))).subscribe(observer);
                        return ( /**
                         * @return {?}
                         */function () {
                            subscription.unsubscribe();
                        });
                    }));
                    this._dragRef = dragDrop.createDrag(element, config);
                    this._dragRef.data = this;
                    this._syncInputs(this._dragRef);
                    this._handleEvents(this._dragRef);
                }
                Object.defineProperty(CdkDrag.prototype, "boundaryElementSelector", {
                    /**
                     * Selector that will be used to determine the element to which the draggable's position will
                     * be constrained. Matching starts from the element's parent and goes up the DOM until a matching
                     * element has been found
                     * @deprecated Use `boundaryElement` instead.
                     * \@breaking-change 9.0.0
                     * @return {?}
                     */
                    get: function () {
                        return typeof this.boundaryElement === 'string' ? this.boundaryElement : ( /** @type {?} */(undefined));
                    },
                    /**
                     * @param {?} selector
                     * @return {?}
                     */
                    set: function (selector) {
                        this.boundaryElement = selector;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(CdkDrag.prototype, "disabled", {
                    /**
                     * Whether starting to drag this element is disabled.
                     * @return {?}
                     */
                    get: function () {
                        return this._disabled || (this.dropContainer && this.dropContainer.disabled);
                    },
                    /**
                     * @param {?} value
                     * @return {?}
                     */
                    set: function (value) {
                        this._disabled = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__["coerceBooleanProperty"])(value);
                        this._dragRef.disabled = this._disabled;
                    },
                    enumerable: true,
                    configurable: true
                });
                /**
                 * Returns the element that is being used as a placeholder
                 * while the current element is being dragged.
                 * @return {?}
                 */
                CdkDrag.prototype.getPlaceholderElement = function () {
                    return this._dragRef.getPlaceholderElement();
                };
                /**
                 * Returns the root draggable element.
                 * @return {?}
                 */
                CdkDrag.prototype.getRootElement = function () {
                    return this._dragRef.getRootElement();
                };
                /**
                 * Resets a standalone drag item to its initial position.
                 * @return {?}
                 */
                CdkDrag.prototype.reset = function () {
                    this._dragRef.reset();
                };
                /**
                 * Gets the pixel coordinates of the draggable outside of a drop container.
                 * @return {?}
                 */
                CdkDrag.prototype.getFreeDragPosition = function () {
                    return this._dragRef.getFreeDragPosition();
                };
                /**
                 * @return {?}
                 */
                CdkDrag.prototype.ngAfterViewInit = function () {
                    var _this = this;
                    // We need to wait for the zone to stabilize, in order for the reference
                    // element to be in the proper place in the DOM. This is mostly relevant
                    // for draggable elements inside portals since they get stamped out in
                    // their original DOM position and then they get transferred to the portal.
                    this._ngZone.onStable.asObservable()
                        .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["take"])(1), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["takeUntil"])(this._destroyed))
                        .subscribe(( /**
                 * @return {?}
                 */function () {
                        _this._updateRootElement();
                        // Listen for any newly-added handles.
                        _this._handles.changes.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["startWith"])(_this._handles), 
                        // Sync the new handles with the DragRef.
                        Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["tap"])(( /**
                         * @param {?} handles
                         * @return {?}
                         */function (handles) {
                            /** @type {?} */
                            var childHandleElements = handles
                                .filter(( /**
                         * @param {?} handle
                         * @return {?}
                         */function (/**
                         * @param {?} handle
                         * @return {?}
                         */ handle) { return handle._parentDrag === _this; }))
                                .map(( /**
                         * @param {?} handle
                         * @return {?}
                         */function (/**
                         * @param {?} handle
                         * @return {?}
                         */ handle) { return handle.element; }));
                            _this._dragRef.withHandles(childHandleElements);
                        })), 
                        // Listen if the state of any of the handles changes.
                        Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["switchMap"])(( /**
                         * @param {?} handles
                         * @return {?}
                         */function (handles) {
                            return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["merge"]).apply(void 0, __spread(handles.map(( /**
                             * @param {?} item
                             * @return {?}
                             */function (/**
                             * @param {?} item
                             * @return {?}
                             */ item) { return item._stateChanges; }))));
                        })), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["takeUntil"])(_this._destroyed)).subscribe(( /**
                         * @param {?} handleInstance
                         * @return {?}
                         */function (/**
                         * @param {?} handleInstance
                         * @return {?}
                         */ handleInstance) {
                            // Enabled/disable the handle that changed in the DragRef.
                            /** @type {?} */
                            var dragRef = _this._dragRef;
                            /** @type {?} */
                            var handle = handleInstance.element.nativeElement;
                            handleInstance.disabled ? dragRef.disableHandle(handle) : dragRef.enableHandle(handle);
                        }));
                        if (_this.freeDragPosition) {
                            _this._dragRef.setFreeDragPosition(_this.freeDragPosition);
                        }
                    }));
                };
                /**
                 * @param {?} changes
                 * @return {?}
                 */
                CdkDrag.prototype.ngOnChanges = function (changes) {
                    /** @type {?} */
                    var rootSelectorChange = changes['rootElementSelector'];
                    /** @type {?} */
                    var positionChange = changes['freeDragPosition'];
                    // We don't have to react to the first change since it's being
                    // handled in `ngAfterViewInit` where it needs to be deferred.
                    if (rootSelectorChange && !rootSelectorChange.firstChange) {
                        this._updateRootElement();
                    }
                    // Skip the first change since it's being handled in `ngAfterViewInit`.
                    if (positionChange && !positionChange.firstChange && this.freeDragPosition) {
                        this._dragRef.setFreeDragPosition(this.freeDragPosition);
                    }
                };
                /**
                 * @return {?}
                 */
                CdkDrag.prototype.ngOnDestroy = function () {
                    this._destroyed.next();
                    this._destroyed.complete();
                    this._dragRef.dispose();
                };
                /**
                 * Syncs the root element with the `DragRef`.
                 * @private
                 * @return {?}
                 */
                CdkDrag.prototype._updateRootElement = function () {
                    /** @type {?} */
                    var element = this.element.nativeElement;
                    /** @type {?} */
                    var rootElement = this.rootElementSelector ?
                        getClosestMatchingAncestor(element, this.rootElementSelector) : element;
                    if (rootElement && rootElement.nodeType !== this._document.ELEMENT_NODE) {
                        throw Error("cdkDrag must be attached to an element node. " +
                            ("Currently attached to \"" + rootElement.nodeName + "\"."));
                    }
                    this._dragRef.withRootElement(rootElement || element);
                };
                /**
                 * Gets the boundary element, based on the `boundaryElement` value.
                 * @private
                 * @return {?}
                 */
                CdkDrag.prototype._getBoundaryElement = function () {
                    /** @type {?} */
                    var boundary = this.boundaryElement;
                    if (!boundary) {
                        return null;
                    }
                    if (typeof boundary === 'string') {
                        return getClosestMatchingAncestor(this.element.nativeElement, boundary);
                    }
                    /** @type {?} */
                    var element = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__["coerceElement"])(boundary);
                    if (Object(_angular_core__WEBPACK_IMPORTED_MODULE_4__["isDevMode"])() && !element.contains(this.element.nativeElement)) {
                        throw Error('Draggable element is not inside of the node passed into cdkDragBoundary.');
                    }
                    return element;
                };
                /**
                 * Syncs the inputs of the CdkDrag with the options of the underlying DragRef.
                 * @private
                 * @param {?} ref
                 * @return {?}
                 */
                CdkDrag.prototype._syncInputs = function (ref) {
                    var _this = this;
                    ref.beforeStarted.subscribe(( /**
                     * @return {?}
                     */function () {
                        if (!ref.isDragging()) {
                            /** @type {?} */
                            var dir = _this._dir;
                            /** @type {?} */
                            var placeholder = _this._placeholderTemplate ? {
                                template: _this._placeholderTemplate.templateRef,
                                context: _this._placeholderTemplate.data,
                                viewContainer: _this._viewContainerRef
                            } : null;
                            /** @type {?} */
                            var preview = _this._previewTemplate ? {
                                template: _this._previewTemplate.templateRef,
                                context: _this._previewTemplate.data,
                                viewContainer: _this._viewContainerRef
                            } : null;
                            ref.disabled = _this.disabled;
                            ref.lockAxis = _this.lockAxis;
                            ref.dragStartDelay = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__["coerceNumberProperty"])(_this.dragStartDelay);
                            ref.constrainPosition = _this.constrainPosition;
                            ref
                                .withBoundaryElement(_this._getBoundaryElement())
                                .withPlaceholderTemplate(placeholder)
                                .withPreviewTemplate(preview);
                            if (dir) {
                                ref.withDirection(dir.value);
                            }
                        }
                    }));
                };
                /**
                 * Handles the events from the underlying `DragRef`.
                 * @private
                 * @param {?} ref
                 * @return {?}
                 */
                CdkDrag.prototype._handleEvents = function (ref) {
                    var _this = this;
                    ref.started.subscribe(( /**
                     * @return {?}
                     */function () {
                        _this.started.emit({ source: _this });
                        // Since all of these events run outside of change detection,
                        // we need to ensure that everything is marked correctly.
                        _this._changeDetectorRef.markForCheck();
                    }));
                    ref.released.subscribe(( /**
                     * @return {?}
                     */function () {
                        _this.released.emit({ source: _this });
                    }));
                    ref.ended.subscribe(( /**
                     * @param {?} event
                     * @return {?}
                     */function (/**
                     * @param {?} event
                     * @return {?}
                     */ event) {
                        _this.ended.emit({ source: _this, distance: event.distance });
                        // Since all of these events run outside of change detection,
                        // we need to ensure that everything is marked correctly.
                        _this._changeDetectorRef.markForCheck();
                    }));
                    ref.entered.subscribe(( /**
                     * @param {?} event
                     * @return {?}
                     */function (/**
                     * @param {?} event
                     * @return {?}
                     */ event) {
                        _this.entered.emit({
                            container: event.container.data,
                            item: _this,
                            currentIndex: event.currentIndex
                        });
                    }));
                    ref.exited.subscribe(( /**
                     * @param {?} event
                     * @return {?}
                     */function (/**
                     * @param {?} event
                     * @return {?}
                     */ event) {
                        _this.exited.emit({
                            container: event.container.data,
                            item: _this
                        });
                    }));
                    ref.dropped.subscribe(( /**
                     * @param {?} event
                     * @return {?}
                     */function (/**
                     * @param {?} event
                     * @return {?}
                     */ event) {
                        _this.dropped.emit({
                            previousIndex: event.previousIndex,
                            currentIndex: event.currentIndex,
                            previousContainer: event.previousContainer.data,
                            container: event.container.data,
                            isPointerOverContainer: event.isPointerOverContainer,
                            item: _this,
                            distance: event.distance
                        });
                    }));
                };
                return CdkDrag;
            }());
            CdkDrag.decorators = [
                { type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Directive"], args: [{
                            selector: '[cdkDrag]',
                            exportAs: 'cdkDrag',
                            host: {
                                'class': 'cdk-drag',
                                '[class.cdk-drag-disabled]': 'disabled',
                                '[class.cdk-drag-dragging]': '_dragRef.isDragging()',
                            },
                            providers: [{ provide: CDK_DRAG_PARENT, useExisting: CdkDrag }]
                        },] },
            ];
            /** @nocollapse */
            CdkDrag.ctorParameters = function () { return [
                { type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["ElementRef"] },
                { type: undefined, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Inject"], args: [CDK_DROP_LIST,] }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Optional"] }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["SkipSelf"] }] },
                { type: undefined, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Inject"], args: [_angular_common__WEBPACK_IMPORTED_MODULE_5__["DOCUMENT"],] }] },
                { type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["NgZone"] },
                { type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["ViewContainerRef"] },
                { type: undefined, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Inject"], args: [CDK_DRAG_CONFIG,] }] },
                { type: _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_7__["Directionality"], decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Optional"] }] },
                { type: DragDrop },
                { type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["ChangeDetectorRef"] }
            ]; };
            CdkDrag.propDecorators = {
                _handles: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["ContentChildren"], args: [CdkDragHandle, { descendants: true },] }],
                _previewTemplate: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["ContentChild"], args: [CdkDragPreview, { static: false },] }],
                _placeholderTemplate: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["ContentChild"], args: [CdkDragPlaceholder, { static: false },] }],
                data: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"], args: ['cdkDragData',] }],
                lockAxis: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"], args: ['cdkDragLockAxis',] }],
                rootElementSelector: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"], args: ['cdkDragRootElement',] }],
                boundaryElement: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"], args: ['cdkDragBoundary',] }],
                dragStartDelay: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"], args: ['cdkDragStartDelay',] }],
                freeDragPosition: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"], args: ['cdkDragFreeDragPosition',] }],
                disabled: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"], args: ['cdkDragDisabled',] }],
                constrainPosition: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"], args: ['cdkDragConstrainPosition',] }],
                started: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"], args: ['cdkDragStarted',] }],
                released: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"], args: ['cdkDragReleased',] }],
                ended: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"], args: ['cdkDragEnded',] }],
                entered: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"], args: ['cdkDragEntered',] }],
                exited: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"], args: ['cdkDragExited',] }],
                dropped: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"], args: ['cdkDragDropped',] }],
                moved: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"], args: ['cdkDragMoved',] }]
            };
            /**
             * Gets the closest ancestor of an element that matches a selector.
             * @param {?} element
             * @param {?} selector
             * @return {?}
             */
            function getClosestMatchingAncestor(element, selector) {
                /** @type {?} */
                var currentElement = ( /** @type {?} */(element.parentElement));
                while (currentElement) {
                    // IE doesn't support `matches` so we have to fall back to `msMatchesSelector`.
                    if (currentElement.matches ? currentElement.matches(selector) :
                        (( /** @type {?} */(currentElement))).msMatchesSelector(selector)) {
                        return currentElement;
                    }
                    currentElement = currentElement.parentElement;
                }
                return null;
            }
            /**
             * @fileoverview added by tsickle
             * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
             */
            /**
             * Declaratively connects sibling `cdkDropList` instances together. All of the `cdkDropList`
             * elements that are placed inside a `cdkDropListGroup` will be connected to each other
             * automatically. Can be used as an alternative to the `cdkDropListConnectedTo` input
             * from `cdkDropList`.
             * @template T
             */
            var CdkDropListGroup = /** @class */ (function () {
                function CdkDropListGroup() {
                    /**
                     * Drop lists registered inside the group.
                     */
                    this._items = new Set();
                    this._disabled = false;
                }
                Object.defineProperty(CdkDropListGroup.prototype, "disabled", {
                    /**
                     * Whether starting a dragging sequence from inside this group is disabled.
                     * @return {?}
                     */
                    get: function () { return this._disabled; },
                    /**
                     * @param {?} value
                     * @return {?}
                     */
                    set: function (value) {
                        this._disabled = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__["coerceBooleanProperty"])(value);
                    },
                    enumerable: true,
                    configurable: true
                });
                /**
                 * @return {?}
                 */
                CdkDropListGroup.prototype.ngOnDestroy = function () {
                    this._items.clear();
                };
                return CdkDropListGroup;
            }());
            CdkDropListGroup.decorators = [
                { type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Directive"], args: [{
                            selector: '[cdkDropListGroup]',
                            exportAs: 'cdkDropListGroup',
                        },] },
            ];
            CdkDropListGroup.propDecorators = {
                disabled: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"], args: ['cdkDropListGroupDisabled',] }]
            };
            /**
             * @fileoverview added by tsickle
             * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
             */
            /**
             * Counter used to generate unique ids for drop zones.
             * @type {?}
             */
            var _uniqueIdCounter$1 = 0;
            var ɵ0 = undefined;
            // @breaking-change 8.0.0 `CdkDropList` implements `CdkDropListContainer` for backwards
            // compatiblity. The implements clause, as well as all the methods that it enforces can
            // be removed when `CdkDropListContainer` is deleted.
            /**
             * Container that wraps a set of draggable items.
             * @template T
             */
            var CdkDropList = /** @class */ (function () {
                /**
                 * @param {?} element
                 * @param {?} dragDrop
                 * @param {?} _changeDetectorRef
                 * @param {?=} _dir
                 * @param {?=} _group
                 */
                function CdkDropList(element, dragDrop, _changeDetectorRef, _dir, _group) {
                    var _this = this;
                    this.element = element;
                    this._changeDetectorRef = _changeDetectorRef;
                    this._dir = _dir;
                    this._group = _group;
                    /**
                     * Emits when the list has been destroyed.
                     */
                    this._destroyed = new rxjs__WEBPACK_IMPORTED_MODULE_2__["Subject"]();
                    /**
                     * Other draggable containers that this container is connected to and into which the
                     * container's items can be transferred. Can either be references to other drop containers,
                     * or their unique IDs.
                     */
                    this.connectedTo = [];
                    /**
                     * Direction in which the list is oriented.
                     */
                    this.orientation = 'vertical';
                    /**
                     * Unique ID for the drop zone. Can be used as a reference
                     * in the `connectedTo` of another `CdkDropList`.
                     */
                    this.id = "cdk-drop-list-" + _uniqueIdCounter$1++;
                    this._disabled = false;
                    this._sortingDisabled = false;
                    /**
                     * Function that is used to determine whether an item
                     * is allowed to be moved into a drop container.
                     */
                    this.enterPredicate = ( /**
                     * @return {?}
                     */function () { return true; });
                    /**
                     * Whether to auto-scroll the view when the user moves their pointer close to the edges.
                     */
                    this.autoScrollDisabled = false;
                    /**
                     * Emits when the user drops an item inside the container.
                     */
                    this.dropped = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
                    /**
                     * Emits when the user has moved a new drag item into this container.
                     */
                    this.entered = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
                    /**
                     * Emits when the user removes an item from the container
                     * by dragging it into another container.
                     */
                    this.exited = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
                    /**
                     * Emits as the user is swapping items while actively dragging.
                     */
                    this.sorted = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
                    this._dropListRef = dragDrop.createDropList(element);
                    this._dropListRef.data = this;
                    this._dropListRef.enterPredicate = ( /**
                     * @param {?} drag
                     * @param {?} drop
                     * @return {?}
                     */function (drag, drop) {
                        return _this.enterPredicate(drag.data, drop.data);
                    });
                    this._syncInputs(this._dropListRef);
                    this._handleEvents(this._dropListRef);
                    CdkDropList._dropLists.push(this);
                    if (_group) {
                        _group._items.add(this);
                    }
                }
                Object.defineProperty(CdkDropList.prototype, "disabled", {
                    /**
                     * Whether starting a dragging sequence from this container is disabled.
                     * @return {?}
                     */
                    get: function () {
                        return this._disabled || (!!this._group && this._group.disabled);
                    },
                    /**
                     * @param {?} value
                     * @return {?}
                     */
                    set: function (value) {
                        this._disabled = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__["coerceBooleanProperty"])(value);
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(CdkDropList.prototype, "sortingDisabled", {
                    /**
                     * Whether sorting within this drop list is disabled.
                     * @return {?}
                     */
                    get: function () { return this._sortingDisabled; },
                    /**
                     * @param {?} value
                     * @return {?}
                     */
                    set: function (value) {
                        this._sortingDisabled = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__["coerceBooleanProperty"])(value);
                    },
                    enumerable: true,
                    configurable: true
                });
                /**
                 * @return {?}
                 */
                CdkDropList.prototype.ngAfterContentInit = function () {
                    var _this = this;
                    this._draggables.changes
                        .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["startWith"])(this._draggables), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["takeUntil"])(this._destroyed))
                        .subscribe(( /**
                 * @param {?} items
                 * @return {?}
                 */function (items) {
                        _this._dropListRef.withItems(items.map(( /**
                         * @param {?} drag
                         * @return {?}
                         */function (/**
                         * @param {?} drag
                         * @return {?}
                         */ drag) { return drag._dragRef; })));
                    }));
                };
                /**
                 * @return {?}
                 */
                CdkDropList.prototype.ngOnDestroy = function () {
                    /** @type {?} */
                    var index = CdkDropList._dropLists.indexOf(this);
                    if (index > -1) {
                        CdkDropList._dropLists.splice(index, 1);
                    }
                    if (this._group) {
                        this._group._items.delete(this);
                    }
                    this._dropListRef.dispose();
                    this._destroyed.next();
                    this._destroyed.complete();
                };
                /**
                 * Starts dragging an item.
                 * @return {?}
                 */
                CdkDropList.prototype.start = function () {
                    this._dropListRef.start();
                };
                /**
                 * Drops an item into this container.
                 * @param {?} item Item being dropped into the container.
                 * @param {?} currentIndex Index at which the item should be inserted.
                 * @param {?} previousContainer Container from which the item got dragged in.
                 * @param {?} isPointerOverContainer Whether the user's pointer was over the
                 *    container when the item was dropped.
                 * @return {?}
                 */
                CdkDropList.prototype.drop = function (item, currentIndex, previousContainer, isPointerOverContainer) {
                    this._dropListRef.drop(item._dragRef, currentIndex, (( /** @type {?} */(previousContainer)))._dropListRef, isPointerOverContainer);
                };
                /**
                 * Emits an event to indicate that the user moved an item into the container.
                 * @param {?} item Item that was moved into the container.
                 * @param {?} pointerX Position of the item along the X axis.
                 * @param {?} pointerY Position of the item along the Y axis.
                 * @return {?}
                 */
                CdkDropList.prototype.enter = function (item, pointerX, pointerY) {
                    this._dropListRef.enter(item._dragRef, pointerX, pointerY);
                };
                /**
                 * Removes an item from the container after it was dragged into another container by the user.
                 * @param {?} item Item that was dragged out.
                 * @return {?}
                 */
                CdkDropList.prototype.exit = function (item) {
                    this._dropListRef.exit(item._dragRef);
                };
                /**
                 * Figures out the index of an item in the container.
                 * @param {?} item Item whose index should be determined.
                 * @return {?}
                 */
                CdkDropList.prototype.getItemIndex = function (item) {
                    return this._dropListRef.getItemIndex(item._dragRef);
                };
                /**
                 * Sorts an item inside the container based on its position.
                 * @param {?} item Item to be sorted.
                 * @param {?} pointerX Position of the item along the X axis.
                 * @param {?} pointerY Position of the item along the Y axis.
                 * @param {?} pointerDelta Direction in which the pointer is moving along each axis.
                 * @return {?}
                 */
                CdkDropList.prototype._sortItem = function (item, pointerX, pointerY, pointerDelta) {
                    return this._dropListRef._sortItem(item._dragRef, pointerX, pointerY, pointerDelta);
                };
                /**
                 * Figures out whether an item should be moved into a sibling
                 * drop container, based on its current position.
                 * @param {?} item Drag item that is being moved.
                 * @param {?} x Position of the item along the X axis.
                 * @param {?} y Position of the item along the Y axis.
                 * @return {?}
                 */
                CdkDropList.prototype._getSiblingContainerFromPosition = function (item, x, y) {
                    /** @type {?} */
                    var result = this._dropListRef._getSiblingContainerFromPosition(item._dragRef, x, y);
                    return result ? result.data : null;
                };
                /**
                 * Checks whether the user's pointer is positioned over the container.
                 * @param {?} x Pointer position along the X axis.
                 * @param {?} y Pointer position along the Y axis.
                 * @return {?}
                 */
                CdkDropList.prototype._isOverContainer = function (x, y) {
                    return this._dropListRef._isOverContainer(x, y);
                };
                /**
                 * Syncs the inputs of the CdkDropList with the options of the underlying DropListRef.
                 * @private
                 * @param {?} ref
                 * @return {?}
                 */
                CdkDropList.prototype._syncInputs = function (ref) {
                    var _this = this;
                    if (this._dir) {
                        this._dir.change
                            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["startWith"])(this._dir.value), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["takeUntil"])(this._destroyed))
                            .subscribe(( /**
                     * @param {?} value
                     * @return {?}
                     */function (/**
                     * @param {?} value
                     * @return {?}
                     */ value) { return ref.withDirection(value); }));
                    }
                    ref.beforeStarted.subscribe(( /**
                     * @return {?}
                     */function () {
                        /** @type {?} */
                        var siblings = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__["coerceArray"])(_this.connectedTo).map(( /**
                         * @param {?} drop
                         * @return {?}
                         */function (/**
                         * @param {?} drop
                         * @return {?}
                         */ drop) {
                            return typeof drop === 'string' ?
                                ( /** @type {?} */(CdkDropList._dropLists.find(( /**
                                 * @param {?} list
                                 * @return {?}
                                 */function (/**
                                 * @param {?} list
                                 * @return {?}
                                 */ list) { return list.id === drop; })))) : drop;
                        }));
                        if (_this._group) {
                            _this._group._items.forEach(( /**
                             * @param {?} drop
                             * @return {?}
                             */function (/**
                             * @param {?} drop
                             * @return {?}
                             */ drop) {
                                if (siblings.indexOf(drop) === -1) {
                                    siblings.push(drop);
                                }
                            }));
                        }
                        ref.disabled = _this.disabled;
                        ref.lockAxis = _this.lockAxis;
                        ref.sortingDisabled = _this.sortingDisabled;
                        ref.autoScrollDisabled = _this.autoScrollDisabled;
                        ref
                            .connectedTo(siblings.filter(( /**
                     * @param {?} drop
                     * @return {?}
                     */function (/**
                     * @param {?} drop
                     * @return {?}
                     */ drop) { return drop && drop !== _this; })).map(( /**
                         * @param {?} list
                         * @return {?}
                         */function (/**
                         * @param {?} list
                         * @return {?}
                         */ list) { return list._dropListRef; })))
                            .withOrientation(_this.orientation);
                    }));
                };
                /**
                 * Handles events from the underlying DropListRef.
                 * @private
                 * @param {?} ref
                 * @return {?}
                 */
                CdkDropList.prototype._handleEvents = function (ref) {
                    var _this = this;
                    ref.beforeStarted.subscribe(( /**
                     * @return {?}
                     */function () {
                        _this._changeDetectorRef.markForCheck();
                    }));
                    ref.entered.subscribe(( /**
                     * @param {?} event
                     * @return {?}
                     */function (/**
                     * @param {?} event
                     * @return {?}
                     */ event) {
                        _this.entered.emit({
                            container: _this,
                            item: event.item.data,
                            currentIndex: event.currentIndex
                        });
                    }));
                    ref.exited.subscribe(( /**
                     * @param {?} event
                     * @return {?}
                     */function (/**
                     * @param {?} event
                     * @return {?}
                     */ event) {
                        _this.exited.emit({
                            container: _this,
                            item: event.item.data
                        });
                        _this._changeDetectorRef.markForCheck();
                    }));
                    ref.sorted.subscribe(( /**
                     * @param {?} event
                     * @return {?}
                     */function (/**
                     * @param {?} event
                     * @return {?}
                     */ event) {
                        _this.sorted.emit({
                            previousIndex: event.previousIndex,
                            currentIndex: event.currentIndex,
                            container: _this,
                            item: event.item.data
                        });
                    }));
                    ref.dropped.subscribe(( /**
                     * @param {?} event
                     * @return {?}
                     */function (/**
                     * @param {?} event
                     * @return {?}
                     */ event) {
                        _this.dropped.emit({
                            previousIndex: event.previousIndex,
                            currentIndex: event.currentIndex,
                            previousContainer: event.previousContainer.data,
                            container: event.container.data,
                            item: event.item.data,
                            isPointerOverContainer: event.isPointerOverContainer,
                            distance: event.distance
                        });
                        // Mark for check since all of these events run outside of change
                        // detection and we're not guaranteed for something else to have triggered it.
                        _this._changeDetectorRef.markForCheck();
                    }));
                };
                return CdkDropList;
            }());
            /**
             * Keeps track of the drop lists that are currently on the page.
             */
            CdkDropList._dropLists = [];
            CdkDropList.decorators = [
                { type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Directive"], args: [{
                            selector: '[cdkDropList], cdk-drop-list',
                            exportAs: 'cdkDropList',
                            providers: [
                                // Prevent child drop lists from picking up the same group as their parent.
                                { provide: CdkDropListGroup, useValue: ɵ0 },
                                { provide: CDK_DROP_LIST_CONTAINER, useExisting: CdkDropList },
                            ],
                            host: {
                                'class': 'cdk-drop-list',
                                '[id]': 'id',
                                '[class.cdk-drop-list-disabled]': 'disabled',
                                '[class.cdk-drop-list-dragging]': '_dropListRef.isDragging()',
                                '[class.cdk-drop-list-receiving]': '_dropListRef.isReceiving()',
                            }
                        },] },
            ];
            /** @nocollapse */
            CdkDropList.ctorParameters = function () { return [
                { type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["ElementRef"] },
                { type: DragDrop },
                { type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["ChangeDetectorRef"] },
                { type: _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_7__["Directionality"], decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Optional"] }] },
                { type: CdkDropListGroup, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Optional"] }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["SkipSelf"] }] }
            ]; };
            CdkDropList.propDecorators = {
                _draggables: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["ContentChildren"], args: [Object(_angular_core__WEBPACK_IMPORTED_MODULE_4__["forwardRef"])(( /**
                                         * @return {?}
                                         */function () { return CdkDrag; })), {
                                // Explicitly set to false since some of the logic below makes assumptions about it.
                                // The `.withItems` call below should be updated if we ever need to switch this to `true`.
                                descendants: false
                            },] }],
                connectedTo: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"], args: ['cdkDropListConnectedTo',] }],
                data: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"], args: ['cdkDropListData',] }],
                orientation: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"], args: ['cdkDropListOrientation',] }],
                id: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"] }],
                lockAxis: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"], args: ['cdkDropListLockAxis',] }],
                disabled: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"], args: ['cdkDropListDisabled',] }],
                sortingDisabled: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"], args: ['cdkDropListSortingDisabled',] }],
                enterPredicate: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"], args: ['cdkDropListEnterPredicate',] }],
                autoScrollDisabled: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"], args: ['cdkDropListAutoScrollDisabled',] }],
                dropped: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"], args: ['cdkDropListDropped',] }],
                entered: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"], args: ['cdkDropListEntered',] }],
                exited: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"], args: ['cdkDropListExited',] }],
                sorted: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"], args: ['cdkDropListSorted',] }]
            };
            /**
             * @fileoverview added by tsickle
             * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
             */
            var DragDropModule = /** @class */ (function () {
                function DragDropModule() {
                }
                return DragDropModule;
            }());
            DragDropModule.decorators = [
                { type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["NgModule"], args: [{
                            declarations: [
                                CdkDropList,
                                CdkDropListGroup,
                                CdkDrag,
                                CdkDragHandle,
                                CdkDragPreview,
                                CdkDragPlaceholder,
                            ],
                            exports: [
                                CdkDropList,
                                CdkDropListGroup,
                                CdkDrag,
                                CdkDragHandle,
                                CdkDragPreview,
                                CdkDragPlaceholder,
                            ],
                            providers: [
                                DragDrop,
                            ]
                        },] },
            ];
            /**
             * @fileoverview added by tsickle
             * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
             */
            /**
             * @fileoverview added by tsickle
             * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
             */
            //# sourceMappingURL=drag-drop.js.map
            /***/ 
        }),
        /***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/tables/extended-tables/extended-tables.component.html": 
        /*!*************************************************************************************************************!*\
          !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/tables/extended-tables/extended-tables.component.html ***!
          \*************************************************************************************************************/
        /*! exports provided: default */
        /***/ (function (module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony default export */ __webpack_exports__["default"] = ("<div class=\"container-fluid content-wrapper\">\n\n  <div class=\"page-title-wrapper\">\n    <h1 class=\"page-title\">Extended table</h1>\n    <span class=\"page-subtitle\">Regular table with customized cells</span>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-12 table-wrapper table-responsive\">\n      <table mat-table [dataSource]=\"dataSource\" class=\"table table-borderless\">\n        <ng-container matColumnDef=\"picture\">\n          <th mat-header-cell *matHeaderCellDef> User </th>\n          <td mat-cell *matCellDef=\"let element\">\n            <div class=\"user-image-wrapper\">\n              <cc-aspect-ratio [ratio]=\"{w: 1, h: 1}\">\n                <cc-image-shell animation=\"spinner\" [mode]=\"'cover'\" class=\"user-image\" [src]=\"element.picture\" [alt]=\"'user image'\"></cc-image-shell>\n              </cc-aspect-ratio>\n            </div>\n          </td>\n        </ng-container>\n        <ng-container matColumnDef=\"name\">\n          <th mat-header-cell *matHeaderCellDef> Name </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n        </ng-container>\n        <ng-container matColumnDef=\"status\">\n          <th mat-header-cell *matHeaderCellDef> Status </th>\n          <td [attr.cell-name]=\"'status'\" [attr.cell-value]=\"element.status\" mat-cell *matCellDef=\"let element\"> {{element.status}} </td>\n        </ng-container>\n        <ng-container matColumnDef=\"progress\">\n          <th mat-header-cell *matHeaderCellDef> Progress </th>\n          <td [attr.cell-name]=\"'progress'\" [attr.cell-value]=\"element.progress\" mat-cell *matCellDef=\"let element\">\n            <ngb-progressbar class=\"rounded-progress-bar\" height=\"10px\" [value]=\"element.progress\"></ngb-progressbar>\n          </td>\n        </ng-container>\n        <ng-container matColumnDef=\"renewal_date\">\n          <th mat-header-cell *matHeaderCellDef> Renewal Date </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.renewal_date}} </td>\n        </ng-container>\n        <ng-container matColumnDef=\"subscription\">\n          <th mat-header-cell *matHeaderCellDef> Subscription </th>\n          <td [attr.cell-name]=\"'subscription'\" [attr.cell-value]=\"element.subscription\" mat-cell *matCellDef=\"let element\">\n            <span class=\"subscription-value\">${{ element.subscription }}</span>\n            <span *ngIf=\"element.subscription === 0\" class=\"subscription-plan subscription-plan-free\">Free Trial</span>\n            <span *ngIf=\"element.subscription >= 5000 && element.subscription < 10000\" class=\"subscription-plan subscription-plan-basic\">Basic Plan</span>\n            <span *ngIf=\"element.subscription >= 10000 && element.subscription < 20000 \" class=\"subscription-plan subscription-plan-pro\">Pro Plan</span>\n            <span *ngIf=\"element.subscription >= 20000\" class=\"subscription-plan subscription-plan-king\">King Plan</span>\n          </td>\n        </ng-container>\n        <ng-container matColumnDef=\"actions\">\n          <th mat-header-cell *matHeaderCellDef> </th>\n          <td mat-cell *matCellDef=\"let element\">\n            <button class=\"btn\" placement=\"bottom-right\" [ngbPopover]=\"popoverRef\" popoverClass=\"actions-popover\"><i class=\"actions-icon fas fa-ellipsis-h\"></i></button>\n          </td>\n        </ng-container>\n        <ng-template #popoverRef>\n          <ul class=\"actions-popover-list list-unstyled\">\n            <li><span>Send email</span></li>\n            <li><span>Call user</span></li>\n            <li><span>Conversation history</span></li>\n          </ul>\n        </ng-template>\n         <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n         <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n      </table>\n    </div>\n  </div>\n</div>\n");
            /***/ 
        }),
        /***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/tables/external-filters-table/external-filters-table.component.html": 
        /*!***************************************************************************************************************************!*\
          !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/tables/external-filters-table/external-filters-table.component.html ***!
          \***************************************************************************************************************************/
        /*! exports provided: default */
        /***/ (function (module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony default export */ __webpack_exports__["default"] = ("<div class=\"container-fluid content-wrapper\">\n\n  <div class=\"page-title-wrapper\">\n    <h1 class=\"page-title\">Table with filters and functionalities</h1>\n    <span class=\"page-subtitle\">Advanced filtering by column, Sorting and Pagination</span>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div *ngIf=\"filtersVisible\">\n        <form [formGroup]=\"filtersForm\" class=\"filters-form\">\n          <div class=\"row\">\n            <div class=\"col-sm-4\">\n              <div class=\"form-group\">\n                <label class=\"col-form-label\">Search</label>\n                <input class=\"form-control\" type=\"text\" (keyup)=\"search($event.target.value)\" formControlName=\"search\"  placeholder=\"Search by any field...\">\n              </div>\n            </div>\n            <div class=\"col-sm-3\">\n              <div class=\"form-group\">\n                <label class=\"col-form-label\">Purchased before</label>\n                <div class=\"input-group\">\n                  <input class=\"form-control\" name=\"datepicker\" formControlName=\"date\" ngbDatepicker #datepicker=\"ngbDatepicker\">\n                  <div class=\"input-group-append\">\n                    <button class=\"btn datepicker-toggle-btn\" (click)=\"datepicker.toggle()\" type=\"button\"><i class=\"fas fa-calendar-alt\"></i></button>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm-5\">\n              <div class=\"form-group categories\">\n                <label class=\"col-form-label\">Categories</label>\n                <input class=\"form-control custom-autocomplete-input\" type=\"text\" placeholder=\"Enter a product category...\"\n                  [formControl]=\"filtersForm.controls.categories\"\n                  #categoriesInput\n                  [matChipInputFor]=\"categoriesList\"\n                  [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n                  [matChipInputAddOnBlur]=\"true\"\n                  (matChipInputTokenEnd)=\"addCategory($event)\">\n                <mat-chip-list #categoriesList>\n                  <mat-chip *ngFor=\"let category of categories\"\n                  selectable=\"false\"\n                  removable=\"true\"\n                  class=\"custom-chips rounded-chips\"\n                  (removed)=\"removeCategory(category)\">\n                    {{category}}\n                    <i matChipRemove class=\"fas fa-times remove-chip\"></i>\n                  </mat-chip>\n                </mat-chip-list>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n      <div class=\"row buttons-row no-gutters\">\n        <button class=\"col-sm-6 col-md-3 col-lg-2 filters-button\" type=\"button\" (click)=\"toggleFilters()\">{{toggleFiltersLabel}}</button>\n        <button class=\"col-sm-6 col-md-3 col-lg-2 filters-button\" type=\"button\" (click)=\"clearFilters()\">Clear filters</button>\n      </div>\n      <div class=\"recent-orders row\">\n        <div class=\"col table-wrapper table-responsive\">\n          <table mat-table matSort [dataSource]=\"recentOrdersTableDataSource\" class=\"table table-borderless table-sm recent-orders-table\">\n            <ng-container matColumnDef=\"id\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\n            </ng-container>\n            <ng-container matColumnDef=\"product\">\n              <th mat-header-cell *matHeaderCellDef> Product </th>\n              <td mat-cell *matCellDef=\"let element\" class=\"product-row\">\n                <div class=\"product-image\">\n                  <cc-aspect-ratio [ratio]=\"{w: 1, h: 1}\">\n                    <cc-image-shell animation=\"spinner\" [src]=\"element.picture\" [alt]=\"'product image'\"></cc-image-shell>\n                  </cc-aspect-ratio>\n                </div>\n                <div class=\"product-details\">\n                  <span class=\"product-name\">{{ element.name }}</span><br>\n                  <span>{{ element.color }}</span> -\n                  <span>{{ element.sku }}</span>\n                </div>\n              </td>\n            </ng-container>\n            <ng-container matColumnDef=\"category\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Category </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.category}} </td>\n            </ng-container>\n            <ng-container matColumnDef=\"location\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Location </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.location}} </td>\n            </ng-container>\n            <ng-container matColumnDef=\"customer\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Customer </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.customer}} </td>\n            </ng-container>\n            <ng-container matColumnDef=\"price\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Price </th>\n              <td mat-cell *matCellDef=\"let element\" class=\"price-row\"> ${{element.price}} </td>\n            </ng-container>\n            <ng-container matColumnDef=\"date\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Date </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.date}} </td>\n            </ng-container>\n            <ng-container matColumnDef=\"status\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Status </th>\n              <td [attr.cell-name]=\"'status'\" [attr.cell-value]=\"element.status\" mat-cell *matCellDef=\"let element\">\n                <span class=\"order-status\">{{element.status}}</span>\n              </td>\n            </ng-container>\n             <tr mat-header-row *matHeaderRowDef=\"recentOrdersTableDisplayedColumns\"></tr>\n             <tr mat-row *matRowDef=\"let row; columns: recentOrdersTableDisplayedColumns;\"></tr>\n          </table>\n          <mat-paginator class=\"table-paginator\" [pageSizeOptions]=\"[5, 10, 25]\" [pageSize]=\"5\"></mat-paginator>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n");
            /***/ 
        }),
        /***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/tables/regular-tables/regular-tables.component.html": 
        /*!***********************************************************************************************************!*\
          !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/tables/regular-tables/regular-tables.component.html ***!
          \***********************************************************************************************************/
        /*! exports provided: default */
        /***/ (function (module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony default export */ __webpack_exports__["default"] = ("<div class=\"container-fluid content-wrapper\">\n\n  <div class=\"page-title-wrapper\">\n    <h1 class=\"page-title\">Regular table</h1>\n    <span class=\"page-subtitle\">Simple table with or without stripes. To remove the stripes, just remove the <code>table-striped</code> class.</span>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-12 table-wrapper table-responsive\">\n      <table mat-table [dataSource]=\"dataSource\" class=\"table table-borderless table-striped\">\n        <ng-container matColumnDef=\"id\">\n          <th mat-header-cell *matHeaderCellDef> ID </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\n        </ng-container>\n        <ng-container matColumnDef=\"name\">\n          <th mat-header-cell *matHeaderCellDef> Name </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n        </ng-container>\n        <ng-container matColumnDef=\"country\">\n          <th mat-header-cell *matHeaderCellDef> Country </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.country}} </td>\n        </ng-container>\n        <ng-container matColumnDef=\"city\">\n          <th mat-header-cell *matHeaderCellDef> City </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.city}} </td>\n        </ng-container>\n        <ng-container matColumnDef=\"birthday\">\n          <th mat-header-cell *matHeaderCellDef> Birthday </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.birthday}} </td>\n        </ng-container>\n        <ng-container matColumnDef=\"age\">\n          <th mat-header-cell *matHeaderCellDef> Age </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.age}} </td>\n        </ng-container>\n        <ng-container matColumnDef=\"salary\">\n          <th mat-header-cell *matHeaderCellDef> Salary </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.salary}} </td>\n        </ng-container>\n         <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n         <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n      </table>\n    </div>\n  </div>\n</div>\n");
            /***/ 
        }),
        /***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/tables/smart-tables/smart-tables.component.html": 
        /*!*******************************************************************************************************!*\
          !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/tables/smart-tables/smart-tables.component.html ***!
          \*******************************************************************************************************/
        /*! exports provided: default */
        /***/ (function (module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony default export */ __webpack_exports__["default"] = ("<div class=\"container-fluid content-wrapper\">\n  <div class=\"page-title-wrapper\">\n    <h1 class=\"page-title\">Smart table with functionalities</h1>\n    <span class=\"page-subtitle\">Filtering, Sorting, Pagination, Row Selection</span>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"filter-wrapper\">\n        <div class=\"input-group\">\n          <div class=\"input-group-prepend\">\n            <span class=\"input-group-text\">\n              <i class=\"fas fa-search\"></i>\n            </span>\n          </div>\n          <input type=\"text\" class=\"form-control\" (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter by any field...\">\n        </div>\n      </div>\n\n      <div class=\"table-wrapper table-responsive\">\n        <table mat-table #table class=\"table table-borderless\" [dataSource]=\"dataSource\" matSort #sort=\"matSort\">\n\n          <ng-container matColumnDef=\"select\">\n            <th mat-header-cell *matHeaderCellDef>\n             <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                           [checked]=\"selection.hasValue() && isAllSelected()\"\n                           [indeterminate]=\"selection.hasValue() && !isAllSelected()\">\n             </mat-checkbox>\n            </th>\n            <td mat-cell *matCellDef=\"let row\">\n             <mat-checkbox (click)=\"$event.stopPropagation()\"\n                           (change)=\"$event ? selection.toggle(row) : null\"\n                           [checked]=\"selection.isSelected(row)\">\n             </mat-checkbox>\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"picture\">\n            <th mat-header-cell *matHeaderCellDef></th>\n            <td mat-cell *matCellDef=\"let row\">\n              <div class=\"user-image-wrapper\">\n                <cc-aspect-ratio [ratio]=\"{w: 1, h: 1}\">\n                  <cc-image-shell animation=\"spinner\" [mode]=\"'cover'\" class=\"user-image\" [src]=\"row.picture\" [alt]=\"'user image'\"></cc-image-shell>\n                </cc-aspect-ratio>\n              </div>\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\n            <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"country\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Country </th>\n            <td mat-cell *matCellDef=\"let row\"> {{row.country}} </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"interests\">\n            <th mat-header-cell *matHeaderCellDef> Interests </th>\n            <td mat-cell *matCellDef=\"let row\"> {{row.interests}} </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"subscribed\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Subscribed </th>\n            <td mat-cell *matCellDef=\"let row\"> {{row.subscribed}} </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"age\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Age </th>\n            <td mat-cell *matCellDef=\"let row\"> {{row.age}} </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"status\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Status </th>\n            <td [attr.cell-name]=\"'status'\" [attr.cell-value]=\"row.status\" mat-cell *matCellDef=\"let row\"> {{row.status}} </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"selection.toggle(row)\">\n          </tr>\n        </table>\n\n        <mat-paginator #paginator class=\"table-paginator\"\n          [pageSizeOptions]=\"[5, 10, 25]\"\n          [pageSize]=\"5\">\n        </mat-paginator>\n      </div>\n    </div>\n  </div>\n</div>\n");
            /***/ 
        }),
        /***/ "./src/app/tables/extended-tables/extended-tables.component.scss": 
        /*!***********************************************************************!*\
          !*** ./src/app/tables/extended-tables/extended-tables.component.scss ***!
          \***********************************************************************/
        /*! exports provided: default */
        /***/ (function (module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony default export */ __webpack_exports__["default"] = ("/*\n  Shared\n*/\n/*\n  CSS 4 Mode\n*/\n/*\n  Sass Mode\n*/\n/*\n  Shared\n*/\n/*\n  CSS 4 Mode\n*/\n/*\n  Sass Mode\n*/\n/*\n  Shared\n*/\n/*\n  CSS 4 Mode\n*/\n/*\n  Sass Mode\n*/\n/*\n  Shared\n*/\n/*\n  CSS 4 Mode\n*/\n/*\n  Sass Mode\n*/\n/*\n  Shared\n*/\n/*\n  CSS 4 Mode\n*/\n/*\n  Sass Mode\n*/\n:host {\n  --page-title-color: rgb(var(--palette-primary-rgb));\n  --page-subtitle-color: rgb(var(--palette-grey-8-rgb));\n  --page-padding: 60px 40px;\n  --page-spacing: 10px;\n  --table-text-color: rgb(var(--palette-grey-7-rgb));\n  --status-active-color: rgb(var(--palette-success-rgb));\n  --status-inactive-color: rgb(var(--palette-error-rgb));\n  --subscription-free-plan-color: rgb(var(--palette-tertiary-rgb));\n  --subscription-basic-plan-color: rgb(var(--palette-quaternary-rgb));\n  --subscription-pro-plan-color: rgb(var(--palette-secondary-rgb));\n  --subscription-king-plan-color: rgb(var(--palette-primary-rgb));\n  --progress-bar-color: rgb(var(--palette-primary-rgb));\n  --progress-bar-background: rgba(var(--palette-primary-rgb), 0.2);\n}\n.content-wrapper {\n  padding: var(--page-padding);\n}\n.content-wrapper .page-title-wrapper {\n  margin-bottom: calc(var(--page-spacing) * 6);\n}\n.content-wrapper .page-title-wrapper .page-title {\n  color: var(--page-title-color);\n  font-size: 30px;\n}\n.content-wrapper .page-title-wrapper .page-subtitle {\n  color: var(--page-subtitle-color);\n}\n.content-wrapper .table-wrapper {\n  --table-header-color: rgb(var(--palette-primary-dark-rgb));\n  --table-text-color: rgb(var(--palette-grey-7-rgb));\n  --table-row-hover-background: rgb(var(--palette-white-rgb));\n  --page-background: rgb(var(--palette-grey-0-rgb));\n  --page-spacing: 10px;\n  text-align: center;\n}\n.content-wrapper .table-wrapper table {\n  width: 100%;\n  background: none;\n}\n.content-wrapper .table-wrapper table.table-sm td.mat-cell {\n  padding: var(--page-spacing);\n}\n.content-wrapper .table-wrapper table.table-sm th.mat-header-cell {\n  padding: var(--page-spacing);\n}\n.content-wrapper .table-wrapper table th {\n  color: var(--table-header-color);\n  font-size: 15px;\n  font-weight: 600;\n}\n.content-wrapper .table-wrapper table th.mat-header-cell {\n  border-bottom-style: none;\n  padding: calc(var(--page-spacing) * 2);\n}\n.content-wrapper .table-wrapper table td {\n  color: var(--table-text-color);\n}\n.content-wrapper .table-wrapper table td.mat-cell {\n  border-bottom-style: none;\n  padding: var(--page-spacing) calc(var(--page-spacing) * 2);\n}\n.content-wrapper .table-wrapper table tr.mat-row {\n  height: auto;\n  cursor: pointer;\n  transition: background-color 1s;\n}\n.content-wrapper .table-wrapper table tr.mat-row td:first-child {\n  border-top-left-radius: 6px;\n  border-bottom-left-radius: 6px;\n}\n.content-wrapper .table-wrapper table tr.mat-row td:last-child {\n  border-top-right-radius: 6px;\n  border-bottom-right-radius: 6px;\n}\n.content-wrapper .table-wrapper table tr.mat-row:hover {\n  background-color: var(--table-row-hover-background);\n  transition: background-color 1s;\n}\n.content-wrapper .table-wrapper ::ng-deep [mat-table] .mat-sort-header-arrow {\n  color: var(--table-header-color);\n}\n.content-wrapper .table-wrapper th.mat-header-cell {\n  border: none;\n  text-align: center;\n}\n.content-wrapper .table-wrapper .user-image-wrapper {\n  width: calc(var(--page-spacing) * 4);\n  margin: 0px auto;\n}\n.content-wrapper .table-wrapper .user-image {\n  border-radius: 50%;\n}\n.content-wrapper .table-wrapper .mat-cell {\n  vertical-align: middle;\n}\n.content-wrapper .table-wrapper .mat-cell[cell-name=status][cell-value=ACTIVE] {\n  color: var(--status-active-color);\n  letter-spacing: 1px;\n}\n.content-wrapper .table-wrapper .mat-cell[cell-name=status][cell-value=INACTIVE] {\n  color: var(--status-inactive-color);\n  letter-spacing: 1px;\n}\n.content-wrapper .table-wrapper .mat-cell[cell-name=subscription] .subscription-plan {\n  display: block;\n}\n.content-wrapper .table-wrapper .mat-cell[cell-name=subscription] .subscription-plan.subscription-plan-free {\n  color: var(--subscription-free-plan-color);\n}\n.content-wrapper .table-wrapper .mat-cell[cell-name=subscription] .subscription-plan.subscription-plan-basic {\n  color: var(--subscription-basic-plan-color);\n}\n.content-wrapper .table-wrapper .mat-cell[cell-name=subscription] .subscription-plan.subscription-plan-pro {\n  color: var(--subscription-pro-plan-color);\n}\n.content-wrapper .table-wrapper .mat-cell[cell-name=subscription] .subscription-plan.subscription-plan-king {\n  color: var(--subscription-king-plan-color);\n}\n.content-wrapper .table-wrapper .actions-icon {\n  color: var(--table-text-color);\n}\n.content-wrapper .table-wrapper .actions-popover-list {\n  --page-spacing: 10px;\n  --text-color: rgb(var(--palette-grey-7-rgb));\n  margin-bottom: 0px;\n  padding: calc(var(--page-spacing) / 2) var(--page-spacing);\n  color: var(--text-color);\n}\n.content-wrapper .table-wrapper .actions-popover-list li {\n  line-height: calc(var(--page-spacing) * 3);\n}\n.content-wrapper .table-wrapper .actions-popover-list li a {\n  text-decoration: none;\n  color: var(--text-color);\n}\n::ng-deep .rounded-progress-bar .progress {\n  max-width: 80%;\n  margin: auto;\n  border-radius: calc(var(--page-spacing) * 2);\n  background-color: var(--progress-bar-background);\n}\n::ng-deep .rounded-progress-bar .progress .progress-bar {\n  border-radius: calc(var(--page-spacing) * 2);\n  background-color: var(--progress-bar-color);\n}\n::ng-deep .actions-popover {\n  --actions-popover-border: rgb(var(--palette-grey-2-rgb));\n  box-shadow: 0px 10px 20px rgba(var(--palette-grey-3-rgb), 0.15),  0px 3px 6px rgba(var(--palette-grey-3-rgb), 0.1);\n  border: 1px solid var(--actions-popover-border);\n}\n::ng-deep .actions-popover .arrow::before {\n  border-bottom-color: var(--actions-popover-border);\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zaGF3bndpc2UvYmVjY2Evc3JjL3RoZW1lL3BhbGV0dGVzL3NoYXJlZC5zY3NzIiwiL1VzZXJzL3NoYXdud2lzZS9iZWNjYS9zcmMvdGhlbWUvcGFsZXR0ZXMvbW9kZS5zY3NzIiwiL1VzZXJzL3NoYXdud2lzZS9iZWNjYS9zcmMvYXBwL3RhYmxlcy9leHRlbmRlZC10YWJsZXMvZXh0ZW5kZWQtdGFibGVzLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC90YWJsZXMvZXh0ZW5kZWQtdGFibGVzL2V4dGVuZGVkLXRhYmxlcy5jb21wb25lbnQuc2NzcyIsIi9Vc2Vycy9zaGF3bndpc2UvYmVjY2Evc3JjL3RoZW1lL21peGlucy90YWJsZS1iYXNpYy1zdHlsZXMuc2NzcyIsIi9Vc2Vycy9zaGF3bndpc2UvYmVjY2Evc3JjL3RoZW1lL21peGlucy9wb3BvdmVyLnNjc3MiLCIvVXNlcnMvc2hhd253aXNlL2JlY2NhL3NyYy90aGVtZS9taXhpbnMvZWxldmF0aW9ucy5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztDQUFBO0FDQUE7O0NBQUE7QUFNQTs7Q0FBQTtBRE5BOztDQUFBO0FDQUE7O0NBQUE7QUFNQTs7Q0FBQTtBRE5BOztDQUFBO0FDQUE7O0NBQUE7QUFNQTs7Q0FBQTtBRE5BOztDQUFBO0FDQUE7O0NBQUE7QUFNQTs7Q0FBQTtBRE5BOztDQUFBO0FDQUE7O0NBQUE7QUFNQTs7Q0FBQTtBQ0pBO0VBRUUsbURBQUE7RUFDQSxxREFBQTtFQUNBLHlCQUFBO0VBQ0Esb0JBQUE7RUFFQSxrREFBQTtFQUVBLHNEQUFBO0VBQ0Esc0RBQUE7RUFFQSxnRUFBQTtFQUNBLG1FQUFBO0VBQ0EsZ0VBQUE7RUFDQSwrREFBQTtFQUVBLHFEQUFBO0VBQ0EsZ0VBQUE7QUN1Q0Y7QURwQ0E7RUFDRSw0QkFBQTtBQ3VDRjtBRHJDRTtFQUNFLDRDQUFBO0FDdUNKO0FEckNJO0VBQ0UsOEJBQUE7RUFDQSxlQUFBO0FDdUNOO0FEcENJO0VBQ0UsaUNBQUE7QUNzQ047QURsQ0U7RUVwQ0EsMERBQUE7RUFDQSxrREFBQTtFQUNBLDJEQUFBO0VBRUEsaURBQUE7RUFDQSxvQkFBQTtFRmlDRSxrQkFBQTtBQ3dDSjtBQ3ZFRTtFQUNFLFdBQUE7RUFDQSxnQkFBQTtBRHlFSjtBQ3JFUTtFQUNFLDRCQUFBO0FEdUVWO0FDbkVRO0VBQ0UsNEJBQUE7QURxRVY7QUNoRUk7RUFDRSxnQ0FBQTtFQUNBLGVBQUE7RUFDQSxnQkFBQTtBRGtFTjtBQ2hFTTtFQUNFLHlCQUFBO0VBQ0Esc0NBQUE7QURrRVI7QUM5REk7RUFDRSw4QkFBQTtBRGdFTjtBQzlETTtFQUNFLHlCQUFBO0VBQ0EsMERBQUE7QURnRVI7QUM1REk7RUFDRSxZQUFBO0VBQ0EsZUFBQTtFQUNBLCtCQUFBO0FEOEROO0FDNURNO0VBQ0UsMkJBQUE7RUFDQSw4QkFBQTtBRDhEUjtBQzVETTtFQUNFLDRCQUFBO0VBQ0EsK0JBQUE7QUQ4RFI7QUMzRE07RUFDRSxtREFBQTtFQUNBLCtCQUFBO0FENkRSO0FDdkRJO0VBQ0UsZ0NBQUE7QUR5RE47QURwRkk7RUFDRSxZQUFBO0VBQ0Esa0JBQUE7QUNzRk47QURuRkk7RUFDRSxvQ0FBQTtFQUNBLGdCQUFBO0FDcUZOO0FEbkZJO0VBQ0Usa0JBQUE7QUNxRk47QURqRkk7RUFDRSxzQkFBQTtBQ21GTjtBRGhGUTtFQUNFLGlDQUFBO0VBQ0EsbUJBQUE7QUNrRlY7QURoRlE7RUFDRSxtQ0FBQTtFQUNBLG1CQUFBO0FDa0ZWO0FEN0VRO0VBQ0UsY0FBQTtBQytFVjtBRDdFVTtFQUNFLDBDQUFBO0FDK0VaO0FENUVVO0VBQ0UsMkNBQUE7QUM4RVo7QUQzRVU7RUFDRSx5Q0FBQTtBQzZFWjtBRDFFVTtFQUNFLDBDQUFBO0FDNEVaO0FEdEVJO0VBQ0UsOEJBQUE7QUN3RU47QURyRUk7RUcvRkYsb0JBQUE7RUFDQSw0Q0FBQTtFQUVBLGtCQUFBO0VBQ0EsMERBQUE7RUFDQSx3QkFBQTtBRnNLRjtBRXBLRTtFQUNFLDBDQUFBO0FGc0tKO0FFcktJO0VBQ0UscUJBQUE7RUFDQSx3QkFBQTtBRnVLTjtBRDNFSTtFQUNFLGNBQUE7RUFDQSxZQUFBO0VBQ0EsNENBQUE7RUFDQSxnREFBQTtBQzhFTjtBRDVFTTtFQUNFLDRDQUFBO0VBQ0EsMkNBQUE7QUM4RVI7QUQxRUU7RUdsR0Esd0RBQUE7RUNnRUUsa0hBQUE7RUQ5REYsK0NBQUE7QUYrS0Y7QUU1S0k7RUFDRSxrREFBQTtBRjhLTiIsImZpbGUiOiJzcmMvYXBwL3RhYmxlcy9leHRlbmRlZC10YWJsZXMvZXh0ZW5kZWQtdGFibGVzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAgU2hhcmVkXG4qL1xuXG5AaW1wb3J0ICdwcmVmZXJlbmNlcyc7XG5AaW1wb3J0ICdpbnRlcmZhY2UnO1xuQGltcG9ydCAnbW9kZSc7XG5cbi8vIEFuIGFic3RyYWN0IHdheSB0byBwcm92aWRlIGNvbG9ycy5cbi8vIFRoaXMgZnVuY3Rpb24gaXMgYW4gaW50ZXJmYWNlIHRvIGJvdGggU2FzcyB2YXJpYWJsZXMgYW5kIENTUyA0IHZhcmlhYmxlcyBiYXNlZCBjb2xvciBwYWxldHRlcy5cbkBmdW5jdGlvbiBwYWxldHRlLWNvbG9yKCRjb2xvci1uYW1lLCAkYWxwaGE6IDEpIHtcbiAgLy8gJGNvbG9yLXBhbGV0dGUtbW9kZSAgICAgICAgPT4gIERlZmluZWQgaW4gbW9kZS5zY3NzXG4gIC8vICRjaG9vc2VuLXBhbGV0dGUgICAgICAgICAgID0+ICBEZWZpbmVkIGluIG1vZGUuc2Nzc1xuICAvLyAkY29sb3ItcGFsZXR0ZS1pbnRlcmZhY2UgICA9PiAgRGVmaW5lZCBpbiBpbnRlcmZhY2Uuc2Nzc1xuICAvLyAkY3NzNC12YXItcHJlZml4ICAgICAgICAgICA9PiAgRGVmaW5lZCBpbiBwcmVmZXJlbmNlcy5zY3NzXG4gIC8vICRjc3M0LWNvbG9yLWZvcm1hdCAgICAgICAgID0+ICBEZWZpbmVkIGluIHByZWZlcmVuY2VzLnNjc3NcblxuICBAaWYgKCRjb2xvci1wYWxldHRlLW1vZGUgPT0gJ2Nzcy00Jykge1xuICAgICRwYWxldHRlLXJlZmVyZW5jZTogJGNvbG9yLXBhbGV0dGUtaW50ZXJmYWNlO1xuXG4gICAgJGNvbG9yLXZhcmlhYmxlLWluZGV4OiBpbmRleCgkcGFsZXR0ZS1yZWZlcmVuY2UsICRjb2xvci1uYW1lKTtcblxuICAgIEBpZiAodHlwZV9vZigkY29sb3ItdmFyaWFibGUtaW5kZXgpID09ICdudW1iZXInKSB7XG4gICAgICAkY29sb3ItdmFyaWFibGUtbmFtZTogbnRoKCRwYWxldHRlLXJlZmVyZW5jZSwgJGNvbG9yLXZhcmlhYmxlLWluZGV4KTtcblxuICAgICAgQGlmICgkYWxwaGEgPiAwIGFuZCAkYWxwaGEgPCAxKSB7XG4gICAgICAgIEByZXR1cm4gI3sncmdiYSh2YXIoJyArICRjc3M0LXZhci1wcmVmaXggKyAkY29sb3ItdmFyaWFibGUtbmFtZSArICctJyArICRjc3M0LWNvbG9yLWZvcm1hdCArJyksICN7JGFscGhhfSknfTtcbiAgICAgIH0gQGVsc2UgaWYgKCRhbHBoYSA9PSAxKSB7XG4gICAgICAgIEByZXR1cm4gI3sncmdiKHZhcignICsgJGNzczQtdmFyLXByZWZpeCArICRjb2xvci12YXJpYWJsZS1uYW1lICsgJy0nICsgJGNzczQtY29sb3ItZm9ybWF0ICsgJykpJ307XG4gICAgICB9IEBlbHNlIHtcbiAgICAgICAgQGVycm9yIFwiQWxwaGEgKCN7JGFscGhhfSkgbXVzdCBiZSBhIG51bWJlclwiO1xuICAgICAgfVxuICAgIH0gQGVsc2Uge1xuICAgICAgQGVycm9yIFwiQ29sb3IgKCN7JGNvbG9yLW5hbWV9KSB3YXMgbm90IGZvdW5kIG9uIENvbG9yIFBhbGV0dGUgZGVmaW5pdGlvbi4gTWFrZSBzdXJlIGl0J3MgZGVmaW5lZCBpbiB0aGUgdGhlbWUvcGFsZXR0ZXMvaW50ZXJmYWNlLnNjc3MgZmlsZVwiO1xuICAgIH1cbiAgfSBAZWxzZSBpZiAoJGNvbG9yLXBhbGV0dGUtbW9kZSA9PSAnc2FzcycpIHtcbiAgICAkcGFsZXR0ZS1yZWZlcmVuY2U6ICRjaG9vc2VuLXBhbGV0dGU7XG5cbiAgICAkY29sb3ItdmFyaWFibGU6IG1hcC1nZXQoJHBhbGV0dGUtcmVmZXJlbmNlLCAkY29sb3ItbmFtZSk7XG5cbiAgICAvLyBDaGVjayBpZiBpdCBpcyBhIFNhc3MgY29sb3JcbiAgICBAaWYgKHR5cGVfb2YoJGNvbG9yLXZhcmlhYmxlKSA9PSAnY29sb3InKSB7XG4gICAgICBAaWYgKCRhbHBoYSA+IDAgYW5kICRhbHBoYSA8IDEpIHtcbiAgICAgICAgQHJldHVybiByZ2JhKCRjb2xvci12YXJpYWJsZSwgJGFscGhhKTtcbiAgICAgIH0gQGVsc2UgaWYgKCRhbHBoYSA9PSAxKSB7XG4gICAgICAgIEByZXR1cm4gJGNvbG9yLXZhcmlhYmxlO1xuICAgICAgfSBAZWxzZSB7XG4gICAgICAgIEBlcnJvciBcIkFscGhhICgjeyRhbHBoYX0pIG11c3QgYmUgYSBudW1iZXJcIjtcbiAgICAgIH1cbiAgICB9IEBlbHNlIHtcbiAgICAgIEBlcnJvciBcIkNvbG9yICgjeyRjb2xvci12YXJpYWJsZX0pIGlzIG5vdCBhIFNhc3MgY29sb3JcIjtcbiAgICB9XG4gIH0gQGVsc2Uge1xuICAgIEBlcnJvciAnTm8gQ29sb3IgUGFsZXR0ZSBtb2RlIHNlbGVjdGVkIGluIHRoZW1lL3BhbGV0dGVzL3ByZWZlcmVuY2VzLnNjc3MnO1xuICB9XG59XG4iLCIvKlxuICBDU1MgNCBNb2RlXG4qL1xuJGNvbG9yLXBhbGV0dGUtbW9kZTogJ2Nzcy00JztcblxuXG4vKlxuICBTYXNzIE1vZGVcbiovXG4vLyBAaW1wb3J0ICdjb3JlJztcbi8vXG4vLyAkY29sb3ItcGFsZXR0ZS1tb2RlOiAnc2Fzcyc7XG4vL1xuLy8gLy8gSW1wb3J0IHRoZSBkZWZpbml0aW9ucyBvZiB0aGUgcGFsZXR0ZSB5b3Ugd2FudCB0byB1c2Vcbi8vIEBpbXBvcnQgJ3BhbGV0dGUtMS9kZWZpbml0aW9ucyc7XG4vLyAvLyBAaW1wb3J0ICdwYWxldHRlLTIvZGVmaW5pdGlvbnMnO1xuLy9cbi8vIC8vIEFzc2lnbiBhIHBhcnRpY3VsYXIgQ29sb3IgUGFsZXR0ZSB0byB0aGUgJ2Nob29zZW4tcGFsZXR0ZScgcG9pbnRlci5cbi8vIC8vICRjaG9vc2VuLXBhbGV0dGUgd2lsbCBiZSBhIFNhc3MgbWFwIHBvaW50aW5nIHRvIGFub3RoZXIgY29sb3IgcGFsZXR0ZSBTYXNzIG1hcFxuLy8gJGNob29zZW4tcGFsZXR0ZTogYnVpbGRTYXNzUGFsZXR0ZSgkcGFsZXR0ZS0xKTtcbi8vIC8vICRjaG9vc2VuLXBhbGV0dGU6IGJ1aWxkU2Fzc1BhbGV0dGUoJHBhbGV0dGUtMik7XG4iLCJAaW1wb3J0ICdzaGFyZWQnO1xuXG46aG9zdCB7XG4gIC8vIERlZmF1bHQgdmFyaWFibGVzXG4gIC0tcGFnZS10aXRsZS1jb2xvcjogI3twYWxldHRlLWNvbG9yKCdwcmltYXJ5Jyl9O1xuICAtLXBhZ2Utc3VidGl0bGUtY29sb3I6ICN7cGFsZXR0ZS1jb2xvcignZ3JleS04Jyl9O1xuICAtLXBhZ2UtcGFkZGluZzogNjBweCA0MHB4O1xuICAtLXBhZ2Utc3BhY2luZzogMTBweDtcblxuICAtLXRhYmxlLXRleHQtY29sb3I6ICN7cGFsZXR0ZS1jb2xvcignZ3JleS03Jyl9O1xuXG4gIC0tc3RhdHVzLWFjdGl2ZS1jb2xvcjogI3twYWxldHRlLWNvbG9yKCdzdWNjZXNzJyl9O1xuICAtLXN0YXR1cy1pbmFjdGl2ZS1jb2xvcjogI3twYWxldHRlLWNvbG9yKCdlcnJvcicpfTtcblxuICAtLXN1YnNjcmlwdGlvbi1mcmVlLXBsYW4tY29sb3I6ICN7cGFsZXR0ZS1jb2xvcigndGVydGlhcnknKX07XG4gIC0tc3Vic2NyaXB0aW9uLWJhc2ljLXBsYW4tY29sb3I6ICN7cGFsZXR0ZS1jb2xvcigncXVhdGVybmFyeScpfTtcbiAgLS1zdWJzY3JpcHRpb24tcHJvLXBsYW4tY29sb3I6ICN7cGFsZXR0ZS1jb2xvcignc2Vjb25kYXJ5Jyl9O1xuICAtLXN1YnNjcmlwdGlvbi1raW5nLXBsYW4tY29sb3I6ICN7cGFsZXR0ZS1jb2xvcigncHJpbWFyeScpfTtcblxuICAtLXByb2dyZXNzLWJhci1jb2xvcjogI3twYWxldHRlLWNvbG9yKCdwcmltYXJ5Jyl9O1xuICAtLXByb2dyZXNzLWJhci1iYWNrZ3JvdW5kOiAje3BhbGV0dGUtY29sb3IoJ3ByaW1hcnknLCAwLjIpfTtcbn1cblxuLmNvbnRlbnQtd3JhcHBlciB7XG4gIHBhZGRpbmc6IHZhcigtLXBhZ2UtcGFkZGluZyk7XG5cbiAgLnBhZ2UtdGl0bGUtd3JhcHBlciB7XG4gICAgbWFyZ2luLWJvdHRvbTogY2FsYyh2YXIoLS1wYWdlLXNwYWNpbmcpICogNik7XG5cbiAgICAucGFnZS10aXRsZSB7XG4gICAgICBjb2xvcjogdmFyKC0tcGFnZS10aXRsZS1jb2xvcik7XG4gICAgICBmb250LXNpemU6IDMwcHg7XG4gICAgfVxuXG4gICAgLnBhZ2Utc3VidGl0bGUge1xuICAgICAgY29sb3I6IHZhcigtLXBhZ2Utc3VidGl0bGUtY29sb3IpO1xuICAgIH1cbiAgfVxuXG4gIC50YWJsZS13cmFwcGVyIHtcbiAgICBAaW5jbHVkZSB0YWJsZS1iYXNpYy1zdHlsZXMoKTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5cbiAgICB0aC5tYXQtaGVhZGVyLWNlbGwge1xuICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIH1cblxuICAgIC51c2VyLWltYWdlLXdyYXBwZXIge1xuICAgICAgd2lkdGg6IGNhbGModmFyKC0tcGFnZS1zcGFjaW5nKSAqIDQpO1xuICAgICAgbWFyZ2luOiAwcHggYXV0bztcbiAgICB9XG4gICAgLnVzZXItaW1hZ2Uge1xuICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgIH1cblxuICAgIC8vIHRib2R5XG4gICAgLm1hdC1jZWxsIHtcbiAgICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG5cbiAgICAgICZbY2VsbC1uYW1lID0gJ3N0YXR1cyddIHtcbiAgICAgICAgJltjZWxsLXZhbHVlID0gJ0FDVElWRSddIHtcbiAgICAgICAgICBjb2xvcjogdmFyKC0tc3RhdHVzLWFjdGl2ZS1jb2xvcik7XG4gICAgICAgICAgbGV0dGVyLXNwYWNpbmc6IDFweDtcbiAgICAgICAgfVxuICAgICAgICAmW2NlbGwtdmFsdWUgPSAnSU5BQ1RJVkUnXSB7XG4gICAgICAgICAgY29sb3I6ICB2YXIoLS1zdGF0dXMtaW5hY3RpdmUtY29sb3IpO1xuICAgICAgICAgIGxldHRlci1zcGFjaW5nOiAxcHg7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgJltjZWxsLW5hbWUgPSAnc3Vic2NyaXB0aW9uJ10ge1xuICAgICAgICAuc3Vic2NyaXB0aW9uLXBsYW4ge1xuICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuXG4gICAgICAgICAgJi5zdWJzY3JpcHRpb24tcGxhbi1mcmVlIHtcbiAgICAgICAgICAgIGNvbG9yOiB2YXIoLS1zdWJzY3JpcHRpb24tZnJlZS1wbGFuLWNvbG9yKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICAmLnN1YnNjcmlwdGlvbi1wbGFuLWJhc2ljIHtcbiAgICAgICAgICAgIGNvbG9yOiB2YXIoLS1zdWJzY3JpcHRpb24tYmFzaWMtcGxhbi1jb2xvcik7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgJi5zdWJzY3JpcHRpb24tcGxhbi1wcm8ge1xuICAgICAgICAgICAgY29sb3I6IHZhcigtLXN1YnNjcmlwdGlvbi1wcm8tcGxhbi1jb2xvcik7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgJi5zdWJzY3JpcHRpb24tcGxhbi1raW5nIHtcbiAgICAgICAgICAgIGNvbG9yOiB2YXIoLS1zdWJzY3JpcHRpb24ta2luZy1wbGFuLWNvbG9yKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICAuYWN0aW9ucy1pY29uIHtcbiAgICAgIGNvbG9yOiB2YXIoLS10YWJsZS10ZXh0LWNvbG9yKTtcbiAgICB9XG5cbiAgICAuYWN0aW9ucy1wb3BvdmVyLWxpc3Qge1xuICAgICAgQGluY2x1ZGUgcG9wb3Zlci1saXN0LXN0eWxlcygpO1xuICAgIH1cbiAgfVxufVxuXG46Om5nLWRlZXAge1xuICAucm91bmRlZC1wcm9ncmVzcy1iYXIge1xuICAgIC5wcm9ncmVzcyB7XG4gICAgICBtYXgtd2lkdGg6IDgwJTtcbiAgICAgIG1hcmdpbjogYXV0bztcbiAgICAgIGJvcmRlci1yYWRpdXM6IGNhbGModmFyKC0tcGFnZS1zcGFjaW5nKSAqIDIpO1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tcHJvZ3Jlc3MtYmFyLWJhY2tncm91bmQpO1xuXG4gICAgICAucHJvZ3Jlc3MtYmFyIHtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogY2FsYyh2YXIoLS1wYWdlLXNwYWNpbmcpICogMik7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXByb2dyZXNzLWJhci1jb2xvcik7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIC5hY3Rpb25zLXBvcG92ZXIge1xuICAgIEBpbmNsdWRlIHBvcG92ZXItYm94LXN0eWxlcygpO1xuICB9XG59XG4iLCIvKlxuICBTaGFyZWRcbiovXG4vKlxuICBDU1MgNCBNb2RlXG4qL1xuLypcbiAgU2FzcyBNb2RlXG4qL1xuLypcbiAgU2hhcmVkXG4qL1xuLypcbiAgQ1NTIDQgTW9kZVxuKi9cbi8qXG4gIFNhc3MgTW9kZVxuKi9cbi8qXG4gIFNoYXJlZFxuKi9cbi8qXG4gIENTUyA0IE1vZGVcbiovXG4vKlxuICBTYXNzIE1vZGVcbiovXG4vKlxuICBTaGFyZWRcbiovXG4vKlxuICBDU1MgNCBNb2RlXG4qL1xuLypcbiAgU2FzcyBNb2RlXG4qL1xuLypcbiAgU2hhcmVkXG4qL1xuLypcbiAgQ1NTIDQgTW9kZVxuKi9cbi8qXG4gIFNhc3MgTW9kZVxuKi9cbjpob3N0IHtcbiAgLS1wYWdlLXRpdGxlLWNvbG9yOiByZ2IodmFyKC0tcGFsZXR0ZS1wcmltYXJ5LXJnYikpO1xuICAtLXBhZ2Utc3VidGl0bGUtY29sb3I6IHJnYih2YXIoLS1wYWxldHRlLWdyZXktOC1yZ2IpKTtcbiAgLS1wYWdlLXBhZGRpbmc6IDYwcHggNDBweDtcbiAgLS1wYWdlLXNwYWNpbmc6IDEwcHg7XG4gIC0tdGFibGUtdGV4dC1jb2xvcjogcmdiKHZhcigtLXBhbGV0dGUtZ3JleS03LXJnYikpO1xuICAtLXN0YXR1cy1hY3RpdmUtY29sb3I6IHJnYih2YXIoLS1wYWxldHRlLXN1Y2Nlc3MtcmdiKSk7XG4gIC0tc3RhdHVzLWluYWN0aXZlLWNvbG9yOiByZ2IodmFyKC0tcGFsZXR0ZS1lcnJvci1yZ2IpKTtcbiAgLS1zdWJzY3JpcHRpb24tZnJlZS1wbGFuLWNvbG9yOiByZ2IodmFyKC0tcGFsZXR0ZS10ZXJ0aWFyeS1yZ2IpKTtcbiAgLS1zdWJzY3JpcHRpb24tYmFzaWMtcGxhbi1jb2xvcjogcmdiKHZhcigtLXBhbGV0dGUtcXVhdGVybmFyeS1yZ2IpKTtcbiAgLS1zdWJzY3JpcHRpb24tcHJvLXBsYW4tY29sb3I6IHJnYih2YXIoLS1wYWxldHRlLXNlY29uZGFyeS1yZ2IpKTtcbiAgLS1zdWJzY3JpcHRpb24ta2luZy1wbGFuLWNvbG9yOiByZ2IodmFyKC0tcGFsZXR0ZS1wcmltYXJ5LXJnYikpO1xuICAtLXByb2dyZXNzLWJhci1jb2xvcjogcmdiKHZhcigtLXBhbGV0dGUtcHJpbWFyeS1yZ2IpKTtcbiAgLS1wcm9ncmVzcy1iYXItYmFja2dyb3VuZDogcmdiYSh2YXIoLS1wYWxldHRlLXByaW1hcnktcmdiKSwgMC4yKTtcbn1cblxuLmNvbnRlbnQtd3JhcHBlciB7XG4gIHBhZGRpbmc6IHZhcigtLXBhZ2UtcGFkZGluZyk7XG59XG4uY29udGVudC13cmFwcGVyIC5wYWdlLXRpdGxlLXdyYXBwZXIge1xuICBtYXJnaW4tYm90dG9tOiBjYWxjKHZhcigtLXBhZ2Utc3BhY2luZykgKiA2KTtcbn1cbi5jb250ZW50LXdyYXBwZXIgLnBhZ2UtdGl0bGUtd3JhcHBlciAucGFnZS10aXRsZSB7XG4gIGNvbG9yOiB2YXIoLS1wYWdlLXRpdGxlLWNvbG9yKTtcbiAgZm9udC1zaXplOiAzMHB4O1xufVxuLmNvbnRlbnQtd3JhcHBlciAucGFnZS10aXRsZS13cmFwcGVyIC5wYWdlLXN1YnRpdGxlIHtcbiAgY29sb3I6IHZhcigtLXBhZ2Utc3VidGl0bGUtY29sb3IpO1xufVxuLmNvbnRlbnQtd3JhcHBlciAudGFibGUtd3JhcHBlciB7XG4gIC0tdGFibGUtaGVhZGVyLWNvbG9yOiByZ2IodmFyKC0tcGFsZXR0ZS1wcmltYXJ5LWRhcmstcmdiKSk7XG4gIC0tdGFibGUtdGV4dC1jb2xvcjogcmdiKHZhcigtLXBhbGV0dGUtZ3JleS03LXJnYikpO1xuICAtLXRhYmxlLXJvdy1ob3Zlci1iYWNrZ3JvdW5kOiByZ2IodmFyKC0tcGFsZXR0ZS13aGl0ZS1yZ2IpKTtcbiAgLS1wYWdlLWJhY2tncm91bmQ6IHJnYih2YXIoLS1wYWxldHRlLWdyZXktMC1yZ2IpKTtcbiAgLS1wYWdlLXNwYWNpbmc6IDEwcHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cbi5jb250ZW50LXdyYXBwZXIgLnRhYmxlLXdyYXBwZXIgdGFibGUge1xuICB3aWR0aDogMTAwJTtcbiAgYmFja2dyb3VuZDogbm9uZTtcbn1cbi5jb250ZW50LXdyYXBwZXIgLnRhYmxlLXdyYXBwZXIgdGFibGUudGFibGUtc20gdGQubWF0LWNlbGwge1xuICBwYWRkaW5nOiB2YXIoLS1wYWdlLXNwYWNpbmcpO1xufVxuLmNvbnRlbnQtd3JhcHBlciAudGFibGUtd3JhcHBlciB0YWJsZS50YWJsZS1zbSB0aC5tYXQtaGVhZGVyLWNlbGwge1xuICBwYWRkaW5nOiB2YXIoLS1wYWdlLXNwYWNpbmcpO1xufVxuLmNvbnRlbnQtd3JhcHBlciAudGFibGUtd3JhcHBlciB0YWJsZSB0aCB7XG4gIGNvbG9yOiB2YXIoLS10YWJsZS1oZWFkZXItY29sb3IpO1xuICBmb250LXNpemU6IDE1cHg7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG59XG4uY29udGVudC13cmFwcGVyIC50YWJsZS13cmFwcGVyIHRhYmxlIHRoLm1hdC1oZWFkZXItY2VsbCB7XG4gIGJvcmRlci1ib3R0b20tc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IGNhbGModmFyKC0tcGFnZS1zcGFjaW5nKSAqIDIpO1xufVxuLmNvbnRlbnQtd3JhcHBlciAudGFibGUtd3JhcHBlciB0YWJsZSB0ZCB7XG4gIGNvbG9yOiB2YXIoLS10YWJsZS10ZXh0LWNvbG9yKTtcbn1cbi5jb250ZW50LXdyYXBwZXIgLnRhYmxlLXdyYXBwZXIgdGFibGUgdGQubWF0LWNlbGwge1xuICBib3JkZXItYm90dG9tLXN0eWxlOiBub25lO1xuICBwYWRkaW5nOiB2YXIoLS1wYWdlLXNwYWNpbmcpIGNhbGModmFyKC0tcGFnZS1zcGFjaW5nKSAqIDIpO1xufVxuLmNvbnRlbnQtd3JhcHBlciAudGFibGUtd3JhcHBlciB0YWJsZSB0ci5tYXQtcm93IHtcbiAgaGVpZ2h0OiBhdXRvO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMXM7XG59XG4uY29udGVudC13cmFwcGVyIC50YWJsZS13cmFwcGVyIHRhYmxlIHRyLm1hdC1yb3cgdGQ6Zmlyc3QtY2hpbGQge1xuICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiA2cHg7XG4gIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDZweDtcbn1cbi5jb250ZW50LXdyYXBwZXIgLnRhYmxlLXdyYXBwZXIgdGFibGUgdHIubWF0LXJvdyB0ZDpsYXN0LWNoaWxkIHtcbiAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDZweDtcbiAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDZweDtcbn1cbi5jb250ZW50LXdyYXBwZXIgLnRhYmxlLXdyYXBwZXIgdGFibGUgdHIubWF0LXJvdzpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXRhYmxlLXJvdy1ob3Zlci1iYWNrZ3JvdW5kKTtcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAxcztcbn1cbi5jb250ZW50LXdyYXBwZXIgLnRhYmxlLXdyYXBwZXIgOjpuZy1kZWVwIFttYXQtdGFibGVdIC5tYXQtc29ydC1oZWFkZXItYXJyb3cge1xuICBjb2xvcjogdmFyKC0tdGFibGUtaGVhZGVyLWNvbG9yKTtcbn1cbi5jb250ZW50LXdyYXBwZXIgLnRhYmxlLXdyYXBwZXIgdGgubWF0LWhlYWRlci1jZWxsIHtcbiAgYm9yZGVyOiBub25lO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG4uY29udGVudC13cmFwcGVyIC50YWJsZS13cmFwcGVyIC51c2VyLWltYWdlLXdyYXBwZXIge1xuICB3aWR0aDogY2FsYyh2YXIoLS1wYWdlLXNwYWNpbmcpICogNCk7XG4gIG1hcmdpbjogMHB4IGF1dG87XG59XG4uY29udGVudC13cmFwcGVyIC50YWJsZS13cmFwcGVyIC51c2VyLWltYWdlIHtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xufVxuLmNvbnRlbnQtd3JhcHBlciAudGFibGUtd3JhcHBlciAubWF0LWNlbGwge1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xufVxuLmNvbnRlbnQtd3JhcHBlciAudGFibGUtd3JhcHBlciAubWF0LWNlbGxbY2VsbC1uYW1lPXN0YXR1c11bY2VsbC12YWx1ZT1BQ1RJVkVdIHtcbiAgY29sb3I6IHZhcigtLXN0YXR1cy1hY3RpdmUtY29sb3IpO1xuICBsZXR0ZXItc3BhY2luZzogMXB4O1xufVxuLmNvbnRlbnQtd3JhcHBlciAudGFibGUtd3JhcHBlciAubWF0LWNlbGxbY2VsbC1uYW1lPXN0YXR1c11bY2VsbC12YWx1ZT1JTkFDVElWRV0ge1xuICBjb2xvcjogdmFyKC0tc3RhdHVzLWluYWN0aXZlLWNvbG9yKTtcbiAgbGV0dGVyLXNwYWNpbmc6IDFweDtcbn1cbi5jb250ZW50LXdyYXBwZXIgLnRhYmxlLXdyYXBwZXIgLm1hdC1jZWxsW2NlbGwtbmFtZT1zdWJzY3JpcHRpb25dIC5zdWJzY3JpcHRpb24tcGxhbiB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuLmNvbnRlbnQtd3JhcHBlciAudGFibGUtd3JhcHBlciAubWF0LWNlbGxbY2VsbC1uYW1lPXN1YnNjcmlwdGlvbl0gLnN1YnNjcmlwdGlvbi1wbGFuLnN1YnNjcmlwdGlvbi1wbGFuLWZyZWUge1xuICBjb2xvcjogdmFyKC0tc3Vic2NyaXB0aW9uLWZyZWUtcGxhbi1jb2xvcik7XG59XG4uY29udGVudC13cmFwcGVyIC50YWJsZS13cmFwcGVyIC5tYXQtY2VsbFtjZWxsLW5hbWU9c3Vic2NyaXB0aW9uXSAuc3Vic2NyaXB0aW9uLXBsYW4uc3Vic2NyaXB0aW9uLXBsYW4tYmFzaWMge1xuICBjb2xvcjogdmFyKC0tc3Vic2NyaXB0aW9uLWJhc2ljLXBsYW4tY29sb3IpO1xufVxuLmNvbnRlbnQtd3JhcHBlciAudGFibGUtd3JhcHBlciAubWF0LWNlbGxbY2VsbC1uYW1lPXN1YnNjcmlwdGlvbl0gLnN1YnNjcmlwdGlvbi1wbGFuLnN1YnNjcmlwdGlvbi1wbGFuLXBybyB7XG4gIGNvbG9yOiB2YXIoLS1zdWJzY3JpcHRpb24tcHJvLXBsYW4tY29sb3IpO1xufVxuLmNvbnRlbnQtd3JhcHBlciAudGFibGUtd3JhcHBlciAubWF0LWNlbGxbY2VsbC1uYW1lPXN1YnNjcmlwdGlvbl0gLnN1YnNjcmlwdGlvbi1wbGFuLnN1YnNjcmlwdGlvbi1wbGFuLWtpbmcge1xuICBjb2xvcjogdmFyKC0tc3Vic2NyaXB0aW9uLWtpbmctcGxhbi1jb2xvcik7XG59XG4uY29udGVudC13cmFwcGVyIC50YWJsZS13cmFwcGVyIC5hY3Rpb25zLWljb24ge1xuICBjb2xvcjogdmFyKC0tdGFibGUtdGV4dC1jb2xvcik7XG59XG4uY29udGVudC13cmFwcGVyIC50YWJsZS13cmFwcGVyIC5hY3Rpb25zLXBvcG92ZXItbGlzdCB7XG4gIC0tcGFnZS1zcGFjaW5nOiAxMHB4O1xuICAtLXRleHQtY29sb3I6IHJnYih2YXIoLS1wYWxldHRlLWdyZXktNy1yZ2IpKTtcbiAgbWFyZ2luLWJvdHRvbTogMHB4O1xuICBwYWRkaW5nOiBjYWxjKHZhcigtLXBhZ2Utc3BhY2luZykgLyAyKSB2YXIoLS1wYWdlLXNwYWNpbmcpO1xuICBjb2xvcjogdmFyKC0tdGV4dC1jb2xvcik7XG59XG4uY29udGVudC13cmFwcGVyIC50YWJsZS13cmFwcGVyIC5hY3Rpb25zLXBvcG92ZXItbGlzdCBsaSB7XG4gIGxpbmUtaGVpZ2h0OiBjYWxjKHZhcigtLXBhZ2Utc3BhY2luZykgKiAzKTtcbn1cbi5jb250ZW50LXdyYXBwZXIgLnRhYmxlLXdyYXBwZXIgLmFjdGlvbnMtcG9wb3Zlci1saXN0IGxpIGEge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGNvbG9yOiB2YXIoLS10ZXh0LWNvbG9yKTtcbn1cblxuOjpuZy1kZWVwIC5yb3VuZGVkLXByb2dyZXNzLWJhciAucHJvZ3Jlc3Mge1xuICBtYXgtd2lkdGg6IDgwJTtcbiAgbWFyZ2luOiBhdXRvO1xuICBib3JkZXItcmFkaXVzOiBjYWxjKHZhcigtLXBhZ2Utc3BhY2luZykgKiAyKTtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tcHJvZ3Jlc3MtYmFyLWJhY2tncm91bmQpO1xufVxuOjpuZy1kZWVwIC5yb3VuZGVkLXByb2dyZXNzLWJhciAucHJvZ3Jlc3MgLnByb2dyZXNzLWJhciB7XG4gIGJvcmRlci1yYWRpdXM6IGNhbGModmFyKC0tcGFnZS1zcGFjaW5nKSAqIDIpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1wcm9ncmVzcy1iYXItY29sb3IpO1xufVxuOjpuZy1kZWVwIC5hY3Rpb25zLXBvcG92ZXIge1xuICAtLWFjdGlvbnMtcG9wb3Zlci1ib3JkZXI6IHJnYih2YXIoLS1wYWxldHRlLWdyZXktMi1yZ2IpKTtcbiAgYm94LXNoYWRvdzogMHB4IDEwcHggMjBweCByZ2JhKHZhcigtLXBhbGV0dGUtZ3JleS0zLXJnYiksIDAuMTUpLCAgMHB4IDNweCA2cHggcmdiYSh2YXIoLS1wYWxldHRlLWdyZXktMy1yZ2IpLCAwLjEpO1xuICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1hY3Rpb25zLXBvcG92ZXItYm9yZGVyKTtcbn1cbjo6bmctZGVlcCAuYWN0aW9ucy1wb3BvdmVyIC5hcnJvdzo6YmVmb3JlIHtcbiAgYm9yZGVyLWJvdHRvbS1jb2xvcjogdmFyKC0tYWN0aW9ucy1wb3BvdmVyLWJvcmRlcik7XG59IiwiQGltcG9ydCAncGFsZXR0ZXMvc2hhcmVkJztcblxuQG1peGluIHRhYmxlLWJhc2ljLXN0eWxlcygpIHtcbiAgLS10YWJsZS1oZWFkZXItY29sb3I6ICN7cGFsZXR0ZS1jb2xvcigncHJpbWFyeS1kYXJrJyl9O1xuICAtLXRhYmxlLXRleHQtY29sb3I6ICN7cGFsZXR0ZS1jb2xvcignZ3JleS03Jyl9O1xuICAtLXRhYmxlLXJvdy1ob3Zlci1iYWNrZ3JvdW5kOiAje3BhbGV0dGUtY29sb3IoJ3doaXRlJyl9O1xuXG4gIC0tcGFnZS1iYWNrZ3JvdW5kOiAje3BhbGV0dGUtY29sb3IoJ2dyZXktMCcpfTtcbiAgLS1wYWdlLXNwYWNpbmc6IDEwcHg7XG5cbiAgdGFibGUge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGJhY2tncm91bmQ6IG5vbmU7XG5cbiAgICAmLnRhYmxlLXNtIHtcbiAgICAgIHRkIHtcbiAgICAgICAgJi5tYXQtY2VsbCB7XG4gICAgICAgICAgcGFkZGluZzogdmFyKC0tcGFnZS1zcGFjaW5nKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgdGgge1xuICAgICAgICAmLm1hdC1oZWFkZXItY2VsbCB7XG4gICAgICAgICAgcGFkZGluZzogdmFyKC0tcGFnZS1zcGFjaW5nKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIHRoIHtcbiAgICAgIGNvbG9yOiB2YXIoLS10YWJsZS1oZWFkZXItY29sb3IpO1xuICAgICAgZm9udC1zaXplOiAxNXB4O1xuICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcblxuICAgICAgJi5tYXQtaGVhZGVyLWNlbGwge1xuICAgICAgICBib3JkZXItYm90dG9tLXN0eWxlOiBub25lO1xuICAgICAgICBwYWRkaW5nOiBjYWxjKHZhcigtLXBhZ2Utc3BhY2luZykgKiAyKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICB0ZCB7XG4gICAgICBjb2xvcjogdmFyKC0tdGFibGUtdGV4dC1jb2xvcik7XG5cbiAgICAgICYubWF0LWNlbGwge1xuICAgICAgICBib3JkZXItYm90dG9tLXN0eWxlOiBub25lO1xuICAgICAgICBwYWRkaW5nOiB2YXIoLS1wYWdlLXNwYWNpbmcpIGNhbGModmFyKC0tcGFnZS1zcGFjaW5nKSAqIDIpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHRyLm1hdC1yb3cge1xuICAgICAgaGVpZ2h0OiBhdXRvO1xuICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAxcztcblxuICAgICAgdGQ6Zmlyc3QtY2hpbGQge1xuICAgICAgICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiA2cHg7XG4gICAgICAgIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDZweDtcbiAgICAgIH1cbiAgICAgIHRkOmxhc3QtY2hpbGQge1xuICAgICAgICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogNnB4O1xuICAgICAgICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogNnB4O1xuICAgICAgfVxuXG4gICAgICAmOmhvdmVyIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tdGFibGUtcm93LWhvdmVyLWJhY2tncm91bmQpO1xuICAgICAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDFzO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIDo6bmctZGVlcCBbbWF0LXRhYmxlXSB7XG4gICAgLm1hdC1zb3J0LWhlYWRlci1hcnJvdyB7XG4gICAgICBjb2xvcjogdmFyKC0tdGFibGUtaGVhZGVyLWNvbG9yKTtcbiAgICB9XG4gIH1cbn1cblxuQG1peGluIHRhYmxlLXBhZ2luYXRvci1zdHlsZXMoKSB7XG4gIC0tcGFnaW5hdG9yLWJhY2tncm91bmQ6ICN7cGFsZXR0ZS1jb2xvcignZ3JleS0wJyl9O1xuICAtLXBhZ2luYXRvci10ZXh0LWNvbG9yOiAje3BhbGV0dGUtY29sb3IoJ2dyZXktNScpfTtcbiAgLS1wYWdpbmF0b3ItY29udHJvbHMtY29sb3I6ICN7cGFsZXR0ZS1jb2xvcigncHJpbWFyeS1kYXJrJyl9O1xuICAtLXBhZ2luYXRvci1kaXNhYmxlZC1jb250cm9scy1jb2xvcjogI3twYWxldHRlLWNvbG9yKCdwcmltYXJ5LWRhcmsnLCAwLjEpfTtcblxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1wYWdpbmF0b3ItYmFja2dyb3VuZCk7XG5cbiAgLy8gT3ZlcnJpZGUgTWF0ZXJpYWwgc3R5bGVzXG4gIC5tYXQtcGFnaW5hdG9yLWNvbnRhaW5lciB7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIH1cblxuICAubWF0LXBhZ2luYXRvci1wYWdlLXNpemUge1xuICAgIC5tYXQtcGFnaW5hdG9yLXBhZ2Utc2l6ZS1sYWJlbCB7XG4gICAgICBjb2xvcjogdmFyKC0tcGFnaW5hdG9yLXRleHQtY29sb3IpO1xuICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgIH1cblxuICAgIC5tYXQtcGFnaW5hdG9yLXBhZ2Utc2l6ZS1zZWxlY3Qge1xuICAgICAgLm1hdC1zZWxlY3QtdmFsdWUge1xuICAgICAgICBjb2xvcjogdmFyKC0tcGFnaW5hdG9yLWNvbnRyb2xzLWNvbG9yKTtcbiAgICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgfVxuXG4gICAgICAubWF0LXNlbGVjdC1hcnJvdyB7XG4gICAgICAgIGNvbG9yOiB2YXIoLS1wYWdpbmF0b3ItY29udHJvbHMtY29sb3IpO1xuICAgICAgfVxuXG4gICAgICAubWF0LWZvcm0tZmllbGQtdW5kZXJsaW5lIHtcbiAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgIH1cbiAgICB9XG4gIH0gLy8gLm1hdC1wYWdpbmF0b3ItcGFnZS1zaXplXG5cbiAgLm1hdC1wYWdpbmF0b3ItcmFuZ2UtYWN0aW9ucyB7XG4gICAgLm1hdC1wYWdpbmF0b3ItcmFuZ2UtbGFiZWwge1xuICAgICAgY29sb3I6IHZhcigtLXBhZ2luYXRvci10ZXh0LWNvbG9yKTtcbiAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICB9XG5cbiAgICAubWF0LXBhZ2luYXRvci1uYXZpZ2F0aW9uLXByZXZpb3VzLFxuICAgIC5tYXQtcGFnaW5hdG9yLW5hdmlnYXRpb24tbmV4dCB7XG4gICAgICAmOm5vdChbZGlzYWJsZWRdKSB7XG4gICAgICAgIGNvbG9yOiB2YXIoLS1wYWdpbmF0b3ItY29udHJvbHMtY29sb3IpO1xuICAgICAgfVxuICAgICAgJltkaXNhYmxlZF0ge1xuICAgICAgICBjb2xvcjogdmFyKC0tcGFnaW5hdG9yLWRpc2FibGVkLWNvbnRyb2xzLWNvbG9yKTtcbiAgICAgIH1cbiAgICB9XG4gIH0gLy8gLm1hdC1wYWdpbmF0b3ItcmFuZ2UtYWN0aW9uc1xufVxuIiwiQGltcG9ydCAncGFsZXR0ZXMvc2hhcmVkJztcblxuQG1peGluIHBvcG92ZXItbGlzdC1zdHlsZXMoKSB7XG4gIC0tcGFnZS1zcGFjaW5nOiAxMHB4O1xuICAtLXRleHQtY29sb3I6ICN7cGFsZXR0ZS1jb2xvcignZ3JleS03Jyl9O1xuXG4gIG1hcmdpbi1ib3R0b206IDBweDtcbiAgcGFkZGluZzogY2FsYyh2YXIoLS1wYWdlLXNwYWNpbmcpIC8gMikgdmFyKC0tcGFnZS1zcGFjaW5nKTtcbiAgY29sb3I6IHZhcigtLXRleHQtY29sb3IpO1xuXG4gIGxpIHtcbiAgICBsaW5lLWhlaWdodDogY2FsYyh2YXIoLS1wYWdlLXNwYWNpbmcpICogMyk7XG4gICAgYSB7XG4gICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICBjb2xvcjogdmFyKC0tdGV4dC1jb2xvcik7XG4gICAgfVxuICB9XG59XG5cbkBtaXhpbiBwb3BvdmVyLWJveC1zdHlsZXMoKSB7XG4gIC0tYWN0aW9ucy1wb3BvdmVyLWJvcmRlcjogI3twYWxldHRlLWNvbG9yKCdncmV5LTInKX07XG4gIEBpbmNsdWRlIGVsZXZhdGlvbih6MywgJ2dyZXktMycpO1xuICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1hY3Rpb25zLXBvcG92ZXItYm9yZGVyKTtcblxuICAuYXJyb3cge1xuICAgICY6OmJlZm9yZSB7XG4gICAgICBib3JkZXItYm90dG9tLWNvbG9yOiB2YXIoLS1hY3Rpb25zLXBvcG92ZXItYm9yZGVyKTtcbiAgICB9XG4gIH1cbn1cbiIsIkBpbXBvcnQgJ3V0aWxzJztcbkBpbXBvcnQgJy4uL3BhbGV0dGVzL3NoYXJlZCc7XG5cbiRlbGV2YXRpb25zLXNwZWNzOiAoXG4gIHoxOiAoXG4gICAgKHNoYWRvdzogMHB4IDFweCAzcHgsIG9wYWNpdHk6IDAuMTIpLFxuICAgIChzaGFkb3c6IDBweCAxcHggMnB4LCBvcGFjaXR5OiAwLjI0KVxuICApLFxuICB6MjogKFxuICAgIChzaGFkb3c6IDBweCAzcHggNnB4LCBvcGFjaXR5OiAwLjE1KSxcbiAgICAoc2hhZG93OiAwcHggMnB4IDRweCwgb3BhY2l0eTogMC4xMilcbiAgKSxcbiAgejM6IChcbiAgICAoc2hhZG93OiAwcHggMTBweCAyMHB4LCBvcGFjaXR5OiAwLjE1KSxcbiAgICAoc2hhZG93OiAwcHggM3B4IDZweCwgb3BhY2l0eTogMC4xMClcbiAgKSxcbiAgejQ6IChcbiAgICAoc2hhZG93OiAwcHggMTVweCAyNXB4LCBvcGFjaXR5OiAwLjE1KSxcbiAgICAoc2hhZG93OiAwcHggNXB4IDEwcHgsIG9wYWNpdHk6IDAuMDUpXG4gICksXG4gIHo1OiAoXG4gICAgKHNoYWRvdzogMHB4IDIwcHggNDBweCwgb3BhY2l0eTogMC4yMClcbiAgKVxuKTtcblxuLy8gQG1peGluIGVsZXZhdGlvbigkejogejEsICRjb2xvcjogI0NDQykge1xuQG1peGluIGVsZXZhdGlvbigkejogejEsICRjb2xvcjogJ2dyZXktMicpIHtcbiAgJHNoYWRvd3MtcmVmZXJlbmNlOiAkZWxldmF0aW9ucy1zcGVjcztcblxuICAvLyBDaGVjayBpZiB3ZSBoYXZlIGEgc3BlYyBmb3IgdGhlIGRlc2lyZWQgc2hhZG93XG4gIEBpZiBtYXAtaGFzLWtleSgkc2hhZG93cy1yZWZlcmVuY2UsICR6KSB7XG4gICAgLy8gQWNjdW11bGF0ZSBtdWx0aXBsZSBzaGFkb3cgdmFsdWVzIGluIHRoaXMgbGlzdFxuICAgICR6LXNoYWRvd3MtdmFsdWVzOiAoKTtcbiAgICAvLyBHZXQgc2hhZG93cyBtYXBcbiAgICAkei1zaGFkb3dzOiBtYXAtZ2V0KCRzaGFkb3dzLXJlZmVyZW5jZSwgJHopO1xuXG4gICAgLy8gQGVycm9yICR6LXNoYWRvd3M7XG5cbiAgICAvLyBNdWx0aXBsZSBzaGFkb3dzIGNvbWJpbmVkXG4gICAgQGlmICh0eXBlX29mKCR6LXNoYWRvd3MpID09ICdsaXN0Jykge1xuICAgICAgQGVhY2ggJHotc2hhZG93IGluICR6LXNoYWRvd3Mge1xuICAgICAgICBAaWYgKHR5cGVfb2YoJHotc2hhZG93KSA9PSAnbWFwJykge1xuICAgICAgICAgICRzaGFkb3c6IG1hcC1nZXQoJHotc2hhZG93LCBzaGFkb3cpO1xuICAgICAgICAgICRvcGFjaXR5OiBtYXAtZ2V0KCR6LXNoYWRvdywgb3BhY2l0eSk7XG5cbiAgICAgICAgICAvLyBAZXJyb3IgJHotc2hhZG93O1xuICAgICAgICAgIC8vIEBlcnJvciAkc2hhZG93O1xuICAgICAgICAgIC8vIEBlcnJvciAkb3BhY2l0eTtcblxuICAgICAgICAgIC8vICRzaGFkb3ctdmFsdWU6ICRzaGFkb3cgKyAnICcgKyByZ2JhKCRjb2xvciwgJG9wYWNpdHkpO1xuICAgICAgICAgICRzaGFkb3ctdmFsdWU6ICRzaGFkb3cgKyAnICcgKyBwYWxldHRlLWNvbG9yKCRjb2xvciwgJG9wYWNpdHkpO1xuXG4gICAgICAgICAgLy8gQGVycm9yICRzaGFkb3ctdmFsdWU7XG5cbiAgICAgICAgICAkei1zaGFkb3dzLXZhbHVlczogYXBwZW5kKCR6LXNoYWRvd3MtdmFsdWVzLCAkc2hhZG93LXZhbHVlKTtcblxuICAgICAgICAgIC8vIEBlcnJvciAkei1zaGFkb3dzLXZhbHVlcztcbiAgICAgICAgfSBAZWxzZSB7XG4gICAgICAgICAgQGVycm9yICdJbnZhbGlkIHNoYWRvdyBkZWZpbml0aW9uIGZvciBhcmd1bWVudCAkei1zaGFkb3c6IGAjeyR6LXNoYWRvd31gJztcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0gQGVsc2UgaWYgKHR5cGVfb2YoJHotc2hhZG93cykgPT0gJ21hcCcpIHtcbiAgICAgIC8vIFNpbmdsZSBzaGFkb3dcbiAgICAgICRzaGFkb3c6IG1hcC1nZXQoJHotc2hhZG93cywgc2hhZG93KTtcbiAgICAgICRvcGFjaXR5OiBtYXAtZ2V0KCR6LXNoYWRvd3MsIG9wYWNpdHkpO1xuXG4gICAgICAvLyBAZXJyb3IgJHotc2hhZG93O1xuICAgICAgLy8gQGVycm9yICRzaGFkb3c7XG4gICAgICAvLyBAZXJyb3IgJG9wYWNpdHk7XG5cbiAgICAgIC8vICRzaGFkb3ctdmFsdWU6ICRzaGFkb3cgKyAnICcgKyByZ2JhKCRjb2xvciwgJG9wYWNpdHkpO1xuICAgICAgJHNoYWRvdy12YWx1ZTogJHNoYWRvdyArICcgJyArIHBhbGV0dGUtY29sb3IoJGNvbG9yLCAkb3BhY2l0eSk7XG5cbiAgICAgIC8vIEBlcnJvciAkc2hhZG93LXZhbHVlO1xuXG4gICAgICAkei1zaGFkb3dzLXZhbHVlczogYXBwZW5kKCR6LXNoYWRvd3MtdmFsdWVzLCAkc2hhZG93LXZhbHVlKTtcblxuICAgICAgLy8gQGVycm9yICR6LXNoYWRvd3MtdmFsdWVzO1xuICAgIH0gQGVsc2Uge1xuICAgICAgQGVycm9yICdJbnZhbGlkIHNoYWRvdyB2YWx1ZXMgZm9yIGFyZ3VtZW50ICR6LXNoYWRvd3M6IGAjeyR6LXNoYWRvd3N9YC4gSXRcXCdzIG5laXRoZXIgYSBtYXAgb3IgYSBsaXN0JztcbiAgICB9XG5cbiAgICAvLyBAZXJyb3IgI3t0by1zdHJpbmcoJHotc2hhZG93cy12YWx1ZXMsICcsICcpfTtcblxuICAgIGJveC1zaGFkb3c6ICN7dG8tc3RyaW5nKCR6LXNoYWRvd3MtdmFsdWVzLCAnLCAnKX07XG4gIH0gQGVsc2Uge1xuICAgIEBlcnJvciAnTm8gcmVmZXJlbmNlIGZvdW5kIGZvciBhcmd1bWVudCAkejogYCN7JHp9YCBpbiBzaGFkb3dzIHNwZWNzLic7XG4gIH1cbn1cbiJdfQ== */");
            /***/ 
        }),
        /***/ "./src/app/tables/extended-tables/extended-tables.component.ts": 
        /*!*********************************************************************!*\
          !*** ./src/app/tables/extended-tables/extended-tables.component.ts ***!
          \*********************************************************************/
        /*! exports provided: ExtendedTablesComponent */
        /***/ (function (module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ExtendedTablesComponent", function () { return ExtendedTablesComponent; });
            /* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
            /* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
            /* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
            var ExtendedTablesComponent = /** @class */ (function () {
                function ExtendedTablesComponent(route) {
                    this.route = route;
                    this.displayedColumns = ['picture', 'name', 'status', 'progress', 'renewal_date', 'subscription', 'actions'];
                    // tslint:disable-next-line:no-string-literal
                    this.dataSource = route.snapshot.data['tableData'];
                }
                return ExtendedTablesComponent;
            }());
            ExtendedTablesComponent.ctorParameters = function () { return [
                { type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["ActivatedRoute"] }
            ]; };
            ExtendedTablesComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
                Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
                    selector: 'app-extended-tables',
                    template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./extended-tables.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/tables/extended-tables/extended-tables.component.html")).default,
                    styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./extended-tables.component.scss */ "./src/app/tables/extended-tables/extended-tables.component.scss")).default]
                })
            ], ExtendedTablesComponent);
            /***/ 
        }),
        /***/ "./src/app/tables/external-filters-table/external-filters-table.component.scss": 
        /*!*************************************************************************************!*\
          !*** ./src/app/tables/external-filters-table/external-filters-table.component.scss ***!
          \*************************************************************************************/
        /*! exports provided: default */
        /***/ (function (module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony default export */ __webpack_exports__["default"] = ("/*\n  Shared\n*/\n/*\n  CSS 4 Mode\n*/\n/*\n  Sass Mode\n*/\n/*\n  Shared\n*/\n/*\n  CSS 4 Mode\n*/\n/*\n  Sass Mode\n*/\n/*\n  Shared\n*/\n/*\n  CSS 4 Mode\n*/\n/*\n  Sass Mode\n*/\n/*\n  Shared\n*/\n/*\n  CSS 4 Mode\n*/\n/*\n  Sass Mode\n*/\n/*\n  Shared\n*/\n/*\n  CSS 4 Mode\n*/\n/*\n  Sass Mode\n*/\n:host {\n  --page-title-color: rgb(var(--palette-primary-rgb));\n  --page-subtitle-color: rgb(var(--palette-grey-8-rgb));\n  --page-padding: 60px 40px;\n  --page-spacing: 10px;\n  --status-delivered-color: rgb(var(--palette-success-rgb));\n  --status-delivered-background: rgba(var(--palette-success-rgb), 0.2);\n  --status-pending-color: rgb(var(--palette-error-rgb));\n  --status-pending-background: rgba(var(--palette-error-rgb), 0.2);\n  --table-text-color: rgb(var(--palette-grey-7-rgb));\n  --table-text-light-color: rgb(var(--palette-grey-4-rgb));\n}\n.content-wrapper {\n  padding: var(--page-padding);\n}\n.content-wrapper .page-title-wrapper {\n  margin-bottom: calc(var(--page-spacing) * 6);\n}\n.content-wrapper .page-title-wrapper .page-title {\n  color: var(--page-title-color);\n  font-size: 30px;\n}\n.content-wrapper .page-title-wrapper .page-subtitle {\n  color: var(--page-subtitle-color);\n}\n.content-wrapper .filters-form .form-group {\n  margin-bottom: calc(var(--page-spacing) * 2);\n  --default-spacing: 10px;\n  --form-label-color: rgb(var(--palette-grey-7-rgb));\n  --form-input-background: rgb(var(--palette-white-rgb));\n  --form-input-border-color: rgba(var(--palette-grey-6-rgb), 0.42);\n  --form-input-color: rgb(var(--palette-grey-9-rgb));\n  --form-input-placeholder-color: rgb(var(--palette-grey-5-rgb));\n  --form-help-color: rgb(var(--palette-grey-7-rgb));\n  --form-input-addons-background: rgba(var(--palette-secondary-rgb), 0.15);\n  --form-input-addons-color: rgb(var(--palette-secondary-rgb));\n  --form-input-success-color: rgb(var(--palette-success-rgb));\n  --form-input-success-background: rgba(var(--palette-success-rgb), 0.15);\n  --form-input-error-color: rgb(var(--palette-error-rgb));\n  --form-input-error-background: rgba(var(--palette-error-rgb), 0.15);\n  --form-disabled-input-background: rgb(var(--palette-grey-2-rgb));\n  --form-disabled-input-color: rgb(var(--palette-grey-9-rgb));\n}\n.content-wrapper .filters-form .form-group label {\n  color: var(--form-label-color);\n  font-size: 16px;\n}\n.content-wrapper .filters-form .form-group .form-control {\n  background-color: var(--form-input-background);\n  border: 1px solid var(--form-input-border-color);\n  color: var(--form-input-color);\n}\n.content-wrapper .filters-form .form-group .form-control::-webkit-input-placeholder {\n  font-size: 16px;\n  color: var(--form-input-placeholder-color);\n}\n.content-wrapper .filters-form .form-group .form-control::-moz-placeholder {\n  font-size: 16px;\n  color: var(--form-input-placeholder-color);\n}\n.content-wrapper .filters-form .form-group .form-control::-ms-input-placeholder {\n  font-size: 16px;\n  color: var(--form-input-placeholder-color);\n}\n.content-wrapper .filters-form .form-group .form-control::placeholder {\n  font-size: 16px;\n  color: var(--form-input-placeholder-color);\n}\n.content-wrapper .filters-form .form-group .form-control.is-valid {\n  border: 1px solid var(--form-input-success-color);\n}\n.content-wrapper .filters-form .form-group .form-control.is-invalid {\n  border: 1px solid var(--form-input-error-color);\n}\n.content-wrapper .filters-form .form-group .form-control.disabled {\n  opacity: 0.8;\n  color: var(--form-disabled-input-color);\n  background-color: var(--form-disabled-input-background);\n}\n.content-wrapper .filters-form .form-group .form-text {\n  margin-top: calc(var(--default-spacing) / 2);\n  font-size: 14px;\n}\n.content-wrapper .filters-form .form-group .form-text.help-text {\n  color: var(--form-help-color);\n}\n.content-wrapper .filters-form .form-group .custom-valid-feedback {\n  background-color: var(--form-input-success-background);\n  color: var(--form-input-success-color);\n  padding: calc(var(--default-spacing) / 2) var(--default-spacing);\n  border-radius: 6px;\n}\n.content-wrapper .filters-form .form-group .custom-invalid-feedback {\n  background-color: var(--form-input-error-background);\n  color: var(--form-input-error-color);\n  padding: calc(var(--default-spacing) / 2) var(--default-spacing);\n  border-radius: 6px;\n}\n.content-wrapper .filters-form .form-group .input-group .input-group-prepend .input-group-text, .content-wrapper .filters-form .form-group .input-group .input-group-append .input-group-text {\n  background-color: var(--form-input-addons-background);\n  color: var(--form-input-addons-color);\n  border: 1px solid var(--form-input-border-color);\n}\n.content-wrapper .filters-form .datepicker-toggle-btn {\n  background-color: var(--button-background-color, rgb(var(--palette-white-rgb)));\n  border-color: var(--button-border-color, rgb(var(--palette-primary-rgb)));\n  border-radius: 6px;\n  border-style: solid;\n  border-width: 1px;\n  color: var(--button-color, rgb(var(--palette-primary-rgb)));\n  font-size: 16px;\n  font-weight: 400;\n  letter-spacing: normal;\n  padding: 6px 12px;\n  transition: border-color 0.5s, color 0.5s, background-color 0.5s;\n  border-top-left-radius: 0px;\n  border-bottom-left-radius: 0px;\n}\n.content-wrapper .filters-form .datepicker-toggle-btn:hover:not([disabled]) {\n  background-color: var(--button-color, rgb(var(--palette-primary-rgb)));\n  border-color: var(--button-border-color, rgb(var(--palette-primary-rgb)));\n  color: var(--button-background-color, rgb(var(--palette-white-rgb)));\n}\n.content-wrapper .filters-form .datepicker-toggle-btn:active:not([disabled]), .content-wrapper .filters-form .datepicker-toggle-btn.active:not([disabled]), .content-wrapper .filters-form .datepicker-toggle-btn:focus:not([disabled]), .content-wrapper .filters-form .datepicker-toggle-btn.focus:not([disabled]) {\n  background-color: var(--button-color, rgb(var(--palette-primary-rgb)));\n  border-color: var(--button-border-color, rgb(var(--palette-primary-rgb)));\n  color: var(--button-background-color, rgb(var(--palette-white-rgb)));\n}\n.content-wrapper .filters-form .datepicker-toggle-btn[disabled] {\n  cursor: not-allowed;\n  opacity: 0.5;\n}\n.content-wrapper .filters-form .categories {\n  --default-spacing: 10px;\n  --form-chips-background: rgba(var(--palette-secondary-rgb), 0.15);\n  --form-chips-color: rgb(var(--palette-secondary-rgb));\n}\n.content-wrapper .filters-form .categories mat-chip-list.mat-chip-list .custom-chips {\n  background-color: var(--form-chips-background);\n  color: var(--form-chips-color);\n}\n.content-wrapper .filters-form .categories mat-chip-list.mat-chip-list .custom-chips .remove-chip {\n  color: var(--form-chips-color);\n  height: auto;\n  opacity: 1;\n  width: auto;\n}\n.content-wrapper .filters-form .categories mat-chip-list.mat-chip-list .custom-chips.rounded-chips {\n  border-radius: calc(var(--default-spacing) * 1.5);\n  padding: calc(var(--default-spacing) / 2) var(--default-spacing);\n}\n.content-wrapper .filters-form .categories mat-chip-list.mat-chip-list .custom-chips.rectangle-chips {\n  border-radius: 6px;\n  padding: calc(var(--default-spacing) / 2) var(--default-spacing);\n}\n.content-wrapper .filters-form .categories .custom-autocomplete-input {\n  margin: 0px;\n  width: 100%;\n  margin-bottom: var(--page-spacing);\n  padding: calc(var(--page-spacing) / 2) var(--page-spacing);\n}\n.content-wrapper .buttons-row {\n  margin-bottom: calc(var(--page-spacing) * 3);\n  flex-wrap: nowrap;\n}\n.content-wrapper .buttons-row .filters-button {\n  background-color: var(--button-background-color, rgb(var(--palette-white-rgb)));\n  border-color: var(--button-border-color, rgb(var(--palette-primary-rgb)));\n  border-radius: 6px;\n  border-style: solid;\n  border-width: 1px;\n  color: var(--button-color, rgb(var(--palette-primary-rgb)));\n  font-size: 16px;\n  font-weight: 400;\n  letter-spacing: normal;\n  padding: 6px 12px;\n  transition: border-color 0.5s, color 0.5s, background-color 0.5s;\n  flex: 1 1 auto;\n}\n.content-wrapper .buttons-row .filters-button:hover:not([disabled]) {\n  background-color: var(--button-color, rgb(var(--palette-primary-rgb)));\n  border-color: var(--button-border-color, rgb(var(--palette-primary-rgb)));\n  color: var(--button-background-color, rgb(var(--palette-white-rgb)));\n}\n.content-wrapper .buttons-row .filters-button:active:not([disabled]), .content-wrapper .buttons-row .filters-button.active:not([disabled]), .content-wrapper .buttons-row .filters-button:focus:not([disabled]), .content-wrapper .buttons-row .filters-button.focus:not([disabled]) {\n  background-color: var(--button-color, rgb(var(--palette-primary-rgb)));\n  border-color: var(--button-border-color, rgb(var(--palette-primary-rgb)));\n  color: var(--button-background-color, rgb(var(--palette-white-rgb)));\n}\n.content-wrapper .buttons-row .filters-button[disabled] {\n  cursor: not-allowed;\n  opacity: 0.5;\n}\n.content-wrapper .buttons-row .filters-button:first-child {\n  margin-right: calc(var(--page-spacing) / 2);\n}\n.content-wrapper .table-wrapper {\n  --table-header-color: rgb(var(--palette-primary-dark-rgb));\n  --table-text-color: rgb(var(--palette-grey-7-rgb));\n  --table-row-hover-background: rgb(var(--palette-white-rgb));\n  --page-background: rgb(var(--palette-grey-0-rgb));\n  --page-spacing: 10px;\n}\n.content-wrapper .table-wrapper table {\n  width: 100%;\n  background: none;\n}\n.content-wrapper .table-wrapper table.table-sm td.mat-cell {\n  padding: var(--page-spacing);\n}\n.content-wrapper .table-wrapper table.table-sm th.mat-header-cell {\n  padding: var(--page-spacing);\n}\n.content-wrapper .table-wrapper table th {\n  color: var(--table-header-color);\n  font-size: 15px;\n  font-weight: 600;\n}\n.content-wrapper .table-wrapper table th.mat-header-cell {\n  border-bottom-style: none;\n  padding: calc(var(--page-spacing) * 2);\n}\n.content-wrapper .table-wrapper table td {\n  color: var(--table-text-color);\n}\n.content-wrapper .table-wrapper table td.mat-cell {\n  border-bottom-style: none;\n  padding: var(--page-spacing) calc(var(--page-spacing) * 2);\n}\n.content-wrapper .table-wrapper table tr.mat-row {\n  height: auto;\n  cursor: pointer;\n  transition: background-color 1s;\n}\n.content-wrapper .table-wrapper table tr.mat-row td:first-child {\n  border-top-left-radius: 6px;\n  border-bottom-left-radius: 6px;\n}\n.content-wrapper .table-wrapper table tr.mat-row td:last-child {\n  border-top-right-radius: 6px;\n  border-bottom-right-radius: 6px;\n}\n.content-wrapper .table-wrapper table tr.mat-row:hover {\n  background-color: var(--table-row-hover-background);\n  transition: background-color 1s;\n}\n.content-wrapper .table-wrapper ::ng-deep [mat-table] .mat-sort-header-arrow {\n  color: var(--table-header-color);\n}\n.content-wrapper .table-wrapper .recent-orders-table .mat-cell {\n  vertical-align: middle;\n}\n.content-wrapper .table-wrapper .recent-orders-table .mat-cell[cell-name=status] .order-status {\n  padding: 2px 6px;\n  border-radius: 6px;\n}\n.content-wrapper .table-wrapper .recent-orders-table .mat-cell[cell-name=status][cell-value=Delivered] {\n  color: var(--status-delivered-color);\n}\n.content-wrapper .table-wrapper .recent-orders-table .mat-cell[cell-name=status][cell-value=Delivered] .order-status {\n  background-color: var(--status-delivered-background);\n}\n.content-wrapper .table-wrapper .recent-orders-table .mat-cell[cell-name=status][cell-value=Pending] {\n  color: var(--status-pending-color);\n}\n.content-wrapper .table-wrapper .recent-orders-table .mat-cell[cell-name=status][cell-value=Pending] .order-status {\n  background-color: var(--status-pending-background);\n}\n.content-wrapper .table-wrapper .recent-orders-table .product-row {\n  display: flex;\n}\n.content-wrapper .table-wrapper .recent-orders-table .product-row .product-image {\n  width: 50px;\n  margin-right: calc(var(--page-spacing) * 3);\n}\n.content-wrapper .table-wrapper .recent-orders-table .product-row .product-name {\n  color: var(--table-text-color);\n}\n.content-wrapper .table-wrapper .recent-orders-table .product-row .product-details {\n  color: var(--table-text-light-color);\n  margin: auto 0px;\n}\n.content-wrapper .table-wrapper .table-paginator {\n  margin-top: calc(var(--page-spacing) * 2);\n}\n.content-wrapper .table-wrapper .table-paginator ::ng-deep {\n  --paginator-background: rgb(var(--palette-grey-0-rgb));\n  --paginator-text-color: rgb(var(--palette-grey-5-rgb));\n  --paginator-controls-color: rgb(var(--palette-primary-dark-rgb));\n  --paginator-disabled-controls-color: rgba(var(--palette-primary-dark-rgb), 0.1);\n  background-color: var(--paginator-background);\n}\n.content-wrapper .table-wrapper .table-paginator ::ng-deep .mat-paginator-container {\n  justify-content: center;\n}\n.content-wrapper .table-wrapper .table-paginator ::ng-deep .mat-paginator-page-size .mat-paginator-page-size-label {\n  color: var(--paginator-text-color);\n  font-size: 14px;\n}\n.content-wrapper .table-wrapper .table-paginator ::ng-deep .mat-paginator-page-size .mat-paginator-page-size-select .mat-select-value {\n  color: var(--paginator-controls-color);\n  font-size: 14px;\n}\n.content-wrapper .table-wrapper .table-paginator ::ng-deep .mat-paginator-page-size .mat-paginator-page-size-select .mat-select-arrow {\n  color: var(--paginator-controls-color);\n}\n.content-wrapper .table-wrapper .table-paginator ::ng-deep .mat-paginator-page-size .mat-paginator-page-size-select .mat-form-field-underline {\n  display: none;\n}\n.content-wrapper .table-wrapper .table-paginator ::ng-deep .mat-paginator-range-actions .mat-paginator-range-label {\n  color: var(--paginator-text-color);\n  font-size: 14px;\n}\n.content-wrapper .table-wrapper .table-paginator ::ng-deep .mat-paginator-range-actions .mat-paginator-navigation-previous:not([disabled]),\n.content-wrapper .table-wrapper .table-paginator ::ng-deep .mat-paginator-range-actions .mat-paginator-navigation-next:not([disabled]) {\n  color: var(--paginator-controls-color);\n}\n.content-wrapper .table-wrapper .table-paginator ::ng-deep .mat-paginator-range-actions .mat-paginator-navigation-previous[disabled],\n.content-wrapper .table-wrapper .table-paginator ::ng-deep .mat-paginator-range-actions .mat-paginator-navigation-next[disabled] {\n  color: var(--paginator-disabled-controls-color);\n}\n/*# sourceMappingURL=data:application/json;base64, */");
            /***/ 
        }),
        /***/ "./src/app/tables/external-filters-table/external-filters-table.component.ts": 
        /*!***********************************************************************************!*\
          !*** ./src/app/tables/external-filters-table/external-filters-table.component.ts ***!
          \***********************************************************************************/
        /*! exports provided: ExternalFiltersTableComponent */
        /***/ (function (module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ExternalFiltersTableComponent", function () { return ExternalFiltersTableComponent; });
            /* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
            /* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
            /* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm2015/material.js");
            /* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
            /* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
            /* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm2015/common.js");
            /* harmony import */ var _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/cdk/keycodes */ "./node_modules/@angular/cdk/esm2015/keycodes.js");
            var ExternalFiltersTableComponent = /** @class */ (function () {
                function ExternalFiltersTableComponent(route, datePipe) {
                    var _this = this;
                    this.route = route;
                    this.datePipe = datePipe;
                    this.filtersVisible = true;
                    this.toggleFiltersLabel = 'Hide filters';
                    this.recentOrdersTableDisplayedColumns = ['id', 'product', 'category', 'location', 'customer', 'price', 'date', 'status'];
                    // Data from the resolver
                    this.originalData = [];
                    this.separatorKeysCodes = [_angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_6__["ENTER"], _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_6__["COMMA"]];
                    this.categories = [];
                    // tslint:disable-next-line:no-string-literal
                    this.originalData = route.snapshot.data['tableData'];
                    this.recentOrdersTableDataSource = new _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatTableDataSource"](this.originalData);
                    this.filtersForm = new _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormGroup"]({
                        search: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormControl"](''),
                        categories: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormControl"]([[]]),
                        date: new _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormControl"]('')
                    });
                    this.filtersForm.valueChanges.subscribe(function (form) { return _this.applyFilters(form); });
                }
                ExternalFiltersTableComponent.prototype.ngOnInit = function () {
                    this.recentOrdersTableDataSource.paginator = this.paginator;
                    // define a custom sort for the date field
                    this.recentOrdersTableDataSource.sortingDataAccessor = function (item, property) {
                        switch (property) {
                            case 'date': return new Date(item.date);
                            default: return item[property];
                        }
                    };
                    this.recentOrdersTableDataSource.sort = this.sort;
                };
                ExternalFiltersTableComponent.prototype.search = function (filterValue) {
                    this.recentOrdersTableDataSource.filter = filterValue.trim().toLowerCase();
                    if (this.recentOrdersTableDataSource.paginator) {
                        this.recentOrdersTableDataSource.paginator.firstPage();
                    }
                };
                // Run the filters for the table
                ExternalFiltersTableComponent.prototype.applyFilters = function (form) {
                    var _this = this;
                    var date = form.date ? new Date(form.date.year, (form.date.month - 1), form.date.day) : '';
                    // Note: JavaScript counts months from 0 to 11.
                    var results = [];
                    this.originalData.forEach(function (row) {
                        var filterDate = _this.datePipe.transform(date, 'yyyy-MM-dd');
                        if ((_this.categoryContains(row.category, _this.categories)) &&
                            ((form.date === '') || (new Date(filterDate) > new Date(row.date)))) {
                            results.push(row);
                        }
                    });
                    this.recentOrdersTableDataSource.data = results;
                };
                // Show or hide the available filters
                ExternalFiltersTableComponent.prototype.toggleFilters = function () {
                    this.filtersVisible = !this.filtersVisible;
                    this.toggleFiltersLabel = this.filtersVisible ? 'Hide filters' : 'Show filters';
                };
                // Reset all the filters values
                ExternalFiltersTableComponent.prototype.clearFilters = function () {
                    this.filtersForm.reset({
                        search: '',
                        categories: [],
                        date: ''
                    });
                    this.categories = [];
                    this.resetDatePicker();
                    this.search('');
                    this.applyFilters(this.filtersForm.value);
                };
                ExternalFiltersTableComponent.prototype.resetDatePicker = function () {
                    this.filtersForm.controls.date.reset('');
                };
                // Check if a string contains another
                ExternalFiltersTableComponent.prototype.stringContains = function (string1, string2) {
                    return (string1.toLowerCase().indexOf(string2.toLowerCase()) > -1);
                };
                // // Check if a category contains a string
                ExternalFiltersTableComponent.prototype.categoryContains = function (rowCategory, categories) {
                    var e_1, _a;
                    try {
                        for (var categories_1 = __values(categories), categories_1_1 = categories_1.next(); !categories_1_1.done; categories_1_1 = categories_1.next()) {
                            var category = categories_1_1.value;
                            if (this.stringContains(rowCategory, category)) {
                                return true;
                            }
                        }
                    }
                    catch (e_1_1) { e_1 = { error: e_1_1 }; }
                    finally {
                        try {
                            if (categories_1_1 && !categories_1_1.done && (_a = categories_1.return)) _a.call(categories_1);
                        }
                        finally { if (e_1) throw e_1.error; }
                    }
                    return (categories.length === 0);
                };
                // Category tags
                ExternalFiltersTableComponent.prototype.addCategory = function (event) {
                    var input = event.input;
                    var value = event.value;
                    // Add our Category
                    if ((value || '').trim()) {
                        this.categories.push(value.trim());
                        this.applyFilters(this.filtersForm.value);
                    }
                    // Reset the input value
                    if (input) {
                        input.value = '';
                    }
                };
                ExternalFiltersTableComponent.prototype.removeCategory = function (interest) {
                    var index = this.categories.indexOf(interest);
                    if (index >= 0) {
                        this.categories.splice(index, 1);
                        this.applyFilters(this.filtersForm.value);
                    }
                };
                return ExternalFiltersTableComponent;
            }());
            ExternalFiltersTableComponent.ctorParameters = function () { return [
                { type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"] },
                { type: _angular_common__WEBPACK_IMPORTED_MODULE_5__["DatePipe"] }
            ]; };
            tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
                Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_material__WEBPACK_IMPORTED_MODULE_2__["MatSort"], { static: true })
            ], ExternalFiltersTableComponent.prototype, "sort", void 0);
            tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
                Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_material__WEBPACK_IMPORTED_MODULE_2__["MatPaginator"], { static: true })
            ], ExternalFiltersTableComponent.prototype, "paginator", void 0);
            ExternalFiltersTableComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
                Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
                    selector: 'app-external-filters-table',
                    template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./external-filters-table.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/tables/external-filters-table/external-filters-table.component.html")).default,
                    providers: [_angular_common__WEBPACK_IMPORTED_MODULE_5__["DatePipe"]],
                    styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./external-filters-table.component.scss */ "./src/app/tables/external-filters-table/external-filters-table.component.scss")).default]
                })
            ], ExternalFiltersTableComponent);
            /***/ 
        }),
        /***/ "./src/app/tables/regular-tables/regular-tables.component.scss": 
        /*!*********************************************************************!*\
          !*** ./src/app/tables/regular-tables/regular-tables.component.scss ***!
          \*********************************************************************/
        /*! exports provided: default */
        /***/ (function (module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony default export */ __webpack_exports__["default"] = ("/*\n  Shared\n*/\n/*\n  CSS 4 Mode\n*/\n/*\n  Sass Mode\n*/\n/*\n  Shared\n*/\n/*\n  CSS 4 Mode\n*/\n/*\n  Sass Mode\n*/\n/*\n  Shared\n*/\n/*\n  CSS 4 Mode\n*/\n/*\n  Sass Mode\n*/\n/*\n  Shared\n*/\n/*\n  CSS 4 Mode\n*/\n/*\n  Sass Mode\n*/\n/*\n  Shared\n*/\n/*\n  CSS 4 Mode\n*/\n/*\n  Sass Mode\n*/\n:host {\n  --page-title-color: rgb(var(--palette-primary-rgb));\n  --page-subtitle-color: rgb(var(--palette-grey-8-rgb));\n  --page-padding: 60px 40px;\n  --page-spacing: 10px;\n}\n.content-wrapper {\n  padding: var(--page-padding);\n}\n.content-wrapper .page-title-wrapper {\n  margin-bottom: calc(var(--page-spacing) * 6);\n}\n.content-wrapper .page-title-wrapper .page-title {\n  color: var(--page-title-color);\n  font-size: 30px;\n}\n.content-wrapper .page-title-wrapper .page-subtitle {\n  color: var(--page-subtitle-color);\n}\n.content-wrapper .table-wrapper {\n  --table-header-color: rgb(var(--palette-primary-dark-rgb));\n  --table-text-color: rgb(var(--palette-grey-7-rgb));\n  --table-row-hover-background: rgb(var(--palette-white-rgb));\n  --page-background: rgb(var(--palette-grey-0-rgb));\n  --page-spacing: 10px;\n}\n.content-wrapper .table-wrapper table {\n  width: 100%;\n  background: none;\n}\n.content-wrapper .table-wrapper table.table-sm td.mat-cell {\n  padding: var(--page-spacing);\n}\n.content-wrapper .table-wrapper table.table-sm th.mat-header-cell {\n  padding: var(--page-spacing);\n}\n.content-wrapper .table-wrapper table th {\n  color: var(--table-header-color);\n  font-size: 15px;\n  font-weight: 600;\n}\n.content-wrapper .table-wrapper table th.mat-header-cell {\n  border-bottom-style: none;\n  padding: calc(var(--page-spacing) * 2);\n}\n.content-wrapper .table-wrapper table td {\n  color: var(--table-text-color);\n}\n.content-wrapper .table-wrapper table td.mat-cell {\n  border-bottom-style: none;\n  padding: var(--page-spacing) calc(var(--page-spacing) * 2);\n}\n.content-wrapper .table-wrapper table tr.mat-row {\n  height: auto;\n  cursor: pointer;\n  transition: background-color 1s;\n}\n.content-wrapper .table-wrapper table tr.mat-row td:first-child {\n  border-top-left-radius: 6px;\n  border-bottom-left-radius: 6px;\n}\n.content-wrapper .table-wrapper table tr.mat-row td:last-child {\n  border-top-right-radius: 6px;\n  border-bottom-right-radius: 6px;\n}\n.content-wrapper .table-wrapper table tr.mat-row:hover {\n  background-color: var(--table-row-hover-background);\n  transition: background-color 1s;\n}\n.content-wrapper .table-wrapper ::ng-deep [mat-table] .mat-sort-header-arrow {\n  color: var(--table-header-color);\n}\n.content-wrapper .table-wrapper th.mat-header-cell {\n  border: none;\n}\n/*# sourceMappingURL=data:application/json;base64, */");
            /***/ 
        }),
        /***/ "./src/app/tables/regular-tables/regular-tables.component.ts": 
        /*!*******************************************************************!*\
          !*** ./src/app/tables/regular-tables/regular-tables.component.ts ***!
          \*******************************************************************/
        /*! exports provided: RegularTablesComponent */
        /***/ (function (module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RegularTablesComponent", function () { return RegularTablesComponent; });
            /* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
            /* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
            /* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
            var RegularTablesComponent = /** @class */ (function () {
                function RegularTablesComponent(route) {
                    this.route = route;
                    this.displayedColumns = ['id', 'name', 'country', 'city', 'birthday', 'age', 'salary'];
                    // tslint:disable-next-line:no-string-literal
                    this.dataSource = route.snapshot.data['tableData'];
                }
                return RegularTablesComponent;
            }());
            RegularTablesComponent.ctorParameters = function () { return [
                { type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["ActivatedRoute"] }
            ]; };
            RegularTablesComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
                Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
                    selector: 'app-regular-tables',
                    template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./regular-tables.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/tables/regular-tables/regular-tables.component.html")).default,
                    styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./regular-tables.component.scss */ "./src/app/tables/regular-tables/regular-tables.component.scss")).default]
                })
            ], RegularTablesComponent);
            /***/ 
        }),
        /***/ "./src/app/tables/smart-tables/smart-tables.component.scss": 
        /*!*****************************************************************!*\
          !*** ./src/app/tables/smart-tables/smart-tables.component.scss ***!
          \*****************************************************************/
        /*! exports provided: default */
        /***/ (function (module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony default export */ __webpack_exports__["default"] = ("/*\n  Shared\n*/\n/*\n  CSS 4 Mode\n*/\n/*\n  Sass Mode\n*/\n/*\n  Shared\n*/\n/*\n  CSS 4 Mode\n*/\n/*\n  Sass Mode\n*/\n/*\n  Shared\n*/\n/*\n  CSS 4 Mode\n*/\n/*\n  Sass Mode\n*/\n/*\n  Shared\n*/\n/*\n  CSS 4 Mode\n*/\n/*\n  Sass Mode\n*/\n/*\n  Shared\n*/\n/*\n  CSS 4 Mode\n*/\n/*\n  Sass Mode\n*/\n:host {\n  --page-title-color: rgb(var(--palette-primary-rgb));\n  --page-subtitle-color: rgb(var(--palette-grey-8-rgb));\n  --page-padding: 60px 40px;\n  --page-spacing: 10px;\n  --status-completed-color: rgb(var(--palette-success-rgb));\n  --status-in-progress-color: rgb(var(--palette-warning-rgb));\n  --status-canceled-color: rgb(var(--palette-error-rgb));\n  --form-input-background: rgb(var(--palette-grey-0-rgb));\n  --form-input-color: rgb(var(--palette-grey-9-rgb));\n  --form-input-placeholder-color: rgb(var(--palette-grey-5-rgb));\n}\n.content-wrapper {\n  padding: var(--page-padding);\n}\n.content-wrapper .page-title-wrapper {\n  margin-bottom: calc(var(--page-spacing) * 6);\n}\n.content-wrapper .page-title-wrapper .page-title {\n  color: var(--page-title-color);\n  font-size: 30px;\n}\n.content-wrapper .page-title-wrapper .page-subtitle {\n  color: var(--page-subtitle-color);\n}\n.content-wrapper .filter-wrapper {\n  padding: 0px calc(var(--page-spacing) * 2) calc(var(--page-spacing) * 3);\n}\n.content-wrapper .filter-wrapper .form-control {\n  color: var(--form-input-color);\n}\n.content-wrapper .filter-wrapper .form-control::-webkit-input-placeholder {\n  font-size: 16px;\n  color: var(--form-input-placeholder-color);\n}\n.content-wrapper .filter-wrapper .form-control::-moz-placeholder {\n  font-size: 16px;\n  color: var(--form-input-placeholder-color);\n}\n.content-wrapper .filter-wrapper .form-control::-ms-input-placeholder {\n  font-size: 16px;\n  color: var(--form-input-placeholder-color);\n}\n.content-wrapper .filter-wrapper .form-control::placeholder {\n  font-size: 16px;\n  color: var(--form-input-placeholder-color);\n}\n.content-wrapper .table-wrapper {\n  --table-header-color: rgb(var(--palette-primary-dark-rgb));\n  --table-text-color: rgb(var(--palette-grey-7-rgb));\n  --table-row-hover-background: rgb(var(--palette-white-rgb));\n  --page-background: rgb(var(--palette-grey-0-rgb));\n  --page-spacing: 10px;\n}\n.content-wrapper .table-wrapper table {\n  width: 100%;\n  background: none;\n}\n.content-wrapper .table-wrapper table.table-sm td.mat-cell {\n  padding: var(--page-spacing);\n}\n.content-wrapper .table-wrapper table.table-sm th.mat-header-cell {\n  padding: var(--page-spacing);\n}\n.content-wrapper .table-wrapper table th {\n  color: var(--table-header-color);\n  font-size: 15px;\n  font-weight: 600;\n}\n.content-wrapper .table-wrapper table th.mat-header-cell {\n  border-bottom-style: none;\n  padding: calc(var(--page-spacing) * 2);\n}\n.content-wrapper .table-wrapper table td {\n  color: var(--table-text-color);\n}\n.content-wrapper .table-wrapper table td.mat-cell {\n  border-bottom-style: none;\n  padding: var(--page-spacing) calc(var(--page-spacing) * 2);\n}\n.content-wrapper .table-wrapper table tr.mat-row {\n  height: auto;\n  cursor: pointer;\n  transition: background-color 1s;\n}\n.content-wrapper .table-wrapper table tr.mat-row td:first-child {\n  border-top-left-radius: 6px;\n  border-bottom-left-radius: 6px;\n}\n.content-wrapper .table-wrapper table tr.mat-row td:last-child {\n  border-top-right-radius: 6px;\n  border-bottom-right-radius: 6px;\n}\n.content-wrapper .table-wrapper table tr.mat-row:hover {\n  background-color: var(--table-row-hover-background);\n  transition: background-color 1s;\n}\n.content-wrapper .table-wrapper ::ng-deep [mat-table] .mat-sort-header-arrow {\n  color: var(--table-header-color);\n}\n.content-wrapper .table-wrapper th.mat-header-cell {\n  border: none;\n}\n.content-wrapper .table-wrapper .user-image-wrapper {\n  width: calc(var(--page-spacing) * 4);\n  margin: 0px var(--page-spacing);\n}\n.content-wrapper .table-wrapper .user-image {\n  border-radius: 50%;\n}\n.content-wrapper .table-wrapper td.mat-cell {\n  vertical-align: middle;\n}\n.content-wrapper .table-wrapper td.mat-cell[cell-name=status][cell-value=Completed] {\n  color: var(--status-completed-color);\n}\n.content-wrapper .table-wrapper td.mat-cell[cell-name=status][cell-value=\"In Progress\"] {\n  color: var(--status-in-progress-color);\n}\n.content-wrapper .table-wrapper td.mat-cell[cell-name=status][cell-value=Canceled] {\n  color: var(--status-canceled-color);\n}\n.content-wrapper .table-wrapper .table-paginator {\n  margin-top: calc(var(--page-spacing) * 2);\n}\n.content-wrapper .table-wrapper .table-paginator ::ng-deep {\n  --paginator-background: rgb(var(--palette-grey-0-rgb));\n  --paginator-text-color: rgb(var(--palette-grey-5-rgb));\n  --paginator-controls-color: rgb(var(--palette-primary-dark-rgb));\n  --paginator-disabled-controls-color: rgba(var(--palette-primary-dark-rgb), 0.1);\n  background-color: var(--paginator-background);\n}\n.content-wrapper .table-wrapper .table-paginator ::ng-deep .mat-paginator-container {\n  justify-content: center;\n}\n.content-wrapper .table-wrapper .table-paginator ::ng-deep .mat-paginator-page-size .mat-paginator-page-size-label {\n  color: var(--paginator-text-color);\n  font-size: 14px;\n}\n.content-wrapper .table-wrapper .table-paginator ::ng-deep .mat-paginator-page-size .mat-paginator-page-size-select .mat-select-value {\n  color: var(--paginator-controls-color);\n  font-size: 14px;\n}\n.content-wrapper .table-wrapper .table-paginator ::ng-deep .mat-paginator-page-size .mat-paginator-page-size-select .mat-select-arrow {\n  color: var(--paginator-controls-color);\n}\n.content-wrapper .table-wrapper .table-paginator ::ng-deep .mat-paginator-page-size .mat-paginator-page-size-select .mat-form-field-underline {\n  display: none;\n}\n.content-wrapper .table-wrapper .table-paginator ::ng-deep .mat-paginator-range-actions .mat-paginator-range-label {\n  color: var(--paginator-text-color);\n  font-size: 14px;\n}\n.content-wrapper .table-wrapper .table-paginator ::ng-deep .mat-paginator-range-actions .mat-paginator-navigation-previous:not([disabled]),\n.content-wrapper .table-wrapper .table-paginator ::ng-deep .mat-paginator-range-actions .mat-paginator-navigation-next:not([disabled]) {\n  color: var(--paginator-controls-color);\n}\n.content-wrapper .table-wrapper .table-paginator ::ng-deep .mat-paginator-range-actions .mat-paginator-navigation-previous[disabled],\n.content-wrapper .table-wrapper .table-paginator ::ng-deep .mat-paginator-range-actions .mat-paginator-navigation-next[disabled] {\n  color: var(--paginator-disabled-controls-color);\n}\n::ng-deep mat-checkbox .mat-checkbox-layout {\n  margin: auto;\n}\n/*# sourceMappingURL=data:application/json;base64, */");
            /***/ 
        }),
        /***/ "./src/app/tables/smart-tables/smart-tables.component.ts": 
        /*!***************************************************************!*\
          !*** ./src/app/tables/smart-tables/smart-tables.component.ts ***!
          \***************************************************************/
        /*! exports provided: SmartTablesComponent */
        /***/ (function (module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SmartTablesComponent", function () { return SmartTablesComponent; });
            /* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
            /* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
            /* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm2015/material.js");
            /* harmony import */ var _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/cdk/collections */ "./node_modules/@angular/cdk/esm2015/collections.js");
            /* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
            var SmartTablesComponent = /** @class */ (function () {
                function SmartTablesComponent(route) {
                    this.route = route;
                    this.displayedColumns = ['select', 'picture', 'name', 'country', 'interests', 'subscribed', 'age', 'status'];
                    this.selection = new _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_3__["SelectionModel"](true, []);
                    // Data from the resolver
                    this.originalData = [];
                    // tslint:disable-next-line:no-string-literal
                    this.originalData = route.snapshot.data['tableData'];
                    this.dataSource = new _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatTableDataSource"](this.originalData);
                }
                SmartTablesComponent.prototype.ngOnInit = function () {
                    this.dataSource.paginator = this.paginator;
                    // define a custom sort for the date field
                    this.dataSource.sortingDataAccessor = function (item, property) {
                        switch (property) {
                            case 'subscribed': return new Date(item.subscribed);
                            default: return item[property];
                        }
                    };
                    this.dataSource.sort = this.sort;
                };
                SmartTablesComponent.prototype.applyFilter = function (filterValue) {
                    this.dataSource.filter = filterValue.trim().toLowerCase();
                    if (this.dataSource.paginator) {
                        this.dataSource.paginator.firstPage();
                    }
                };
                /** Whether the number of selected elements matches the total number of rows. */
                SmartTablesComponent.prototype.isAllSelected = function () {
                    var numSelected = this.selection.selected.length;
                    var numRows = this.dataSource.data.length;
                    return numSelected === numRows;
                };
                /** Selects all rows if they are not all selected; otherwise clear selection. */
                SmartTablesComponent.prototype.masterToggle = function () {
                    var _this = this;
                    this.isAllSelected() ?
                        this.selection.clear() :
                        this.dataSource.data.forEach(function (row) { return _this.selection.select(row); });
                };
                return SmartTablesComponent;
            }());
            SmartTablesComponent.ctorParameters = function () { return [
                { type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"] }
            ]; };
            tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
                Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_material__WEBPACK_IMPORTED_MODULE_2__["MatPaginator"], { static: true })
            ], SmartTablesComponent.prototype, "paginator", void 0);
            tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
                Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_material__WEBPACK_IMPORTED_MODULE_2__["MatSort"], { static: true })
            ], SmartTablesComponent.prototype, "sort", void 0);
            tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
                Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('table', { static: true })
            ], SmartTablesComponent.prototype, "table", void 0);
            SmartTablesComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
                Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
                    selector: 'app-smart-tables',
                    template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./smart-tables.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/tables/smart-tables/smart-tables.component.html")).default,
                    styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./smart-tables.component.scss */ "./src/app/tables/smart-tables/smart-tables.component.scss")).default]
                })
            ], SmartTablesComponent);
            /***/ 
        }),
        /***/ "./src/app/tables/table-data.service.ts": 
        /*!**********************************************!*\
          !*** ./src/app/tables/table-data.service.ts ***!
          \**********************************************/
        /*! exports provided: TableDataService */
        /***/ (function (module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TableDataService", function () { return TableDataService; });
            /* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
            /* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
            /* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm2015/http.js");
            var TableDataService = /** @class */ (function () {
                function TableDataService(http) {
                    this.http = http;
                }
                TableDataService.prototype.getRegularTableData = function () {
                    return this.http.get('/assets/data/regular_table.json');
                };
                TableDataService.prototype.getExtendedTableData = function () {
                    return this.http.get('/assets/data/extended_table.json');
                };
                TableDataService.prototype.getSmartTableData = function () {
                    return this.http.get('/assets/data/smart_table.json');
                };
                TableDataService.prototype.getRecentOrdersTableData = function () {
                    return this.http.get('/assets/data/ecommerce-dashboard/recent-orders-table.json');
                };
                return TableDataService;
            }());
            TableDataService.ctorParameters = function () { return [
                { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"] }
            ]; };
            TableDataService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
                Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
            ], TableDataService);
            /***/ 
        }),
        /***/ "./src/app/tables/tables.module.ts": 
        /*!*****************************************!*\
          !*** ./src/app/tables/tables.module.ts ***!
          \*****************************************/
        /*! exports provided: tablesRoutes, TablesModule */
        /***/ (function (module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tablesRoutes", function () { return tablesRoutes; });
            /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TablesModule", function () { return TablesModule; });
            /* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
            /* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
            /* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm2015/common.js");
            /* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
            /* harmony import */ var _shared_shared_module__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../shared/shared.module */ "./src/app/shared/shared.module.ts");
            /* harmony import */ var _angular_cdk_drag_drop__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/cdk/drag-drop */ "./node_modules/@angular/cdk/esm2015/drag-drop.js");
            /* harmony import */ var _regular_tables_regular_tables_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./regular-tables/regular-tables.component */ "./src/app/tables/regular-tables/regular-tables.component.ts");
            /* harmony import */ var _tables_resolver__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./tables.resolver */ "./src/app/tables/tables.resolver.ts");
            /* harmony import */ var _table_data_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./table-data.service */ "./src/app/tables/table-data.service.ts");
            /* harmony import */ var _extended_tables_extended_tables_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./extended-tables/extended-tables.component */ "./src/app/tables/extended-tables/extended-tables.component.ts");
            /* harmony import */ var _smart_tables_smart_tables_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./smart-tables/smart-tables.component */ "./src/app/tables/smart-tables/smart-tables.component.ts");
            /* harmony import */ var _external_filters_table_external_filters_table_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./external-filters-table/external-filters-table.component */ "./src/app/tables/external-filters-table/external-filters-table.component.ts");
            var tablesRoutes = [
                {
                    path: '',
                    redirectTo: 'regular-tables'
                },
                {
                    path: 'regular-tables',
                    component: _regular_tables_regular_tables_component__WEBPACK_IMPORTED_MODULE_6__["RegularTablesComponent"],
                    resolve: {
                        tableData: _tables_resolver__WEBPACK_IMPORTED_MODULE_7__["RegularTablesResolver"]
                    }
                },
                {
                    path: 'extended-tables',
                    component: _extended_tables_extended_tables_component__WEBPACK_IMPORTED_MODULE_9__["ExtendedTablesComponent"],
                    resolve: {
                        tableData: _tables_resolver__WEBPACK_IMPORTED_MODULE_7__["ExtendedTablesResolver"]
                    }
                },
                {
                    path: 'smart-tables',
                    component: _smart_tables_smart_tables_component__WEBPACK_IMPORTED_MODULE_10__["SmartTablesComponent"],
                    resolve: {
                        tableData: _tables_resolver__WEBPACK_IMPORTED_MODULE_7__["SmartTablesResolver"]
                    }
                },
                {
                    path: 'external-filters-tables',
                    component: _external_filters_table_external_filters_table_component__WEBPACK_IMPORTED_MODULE_11__["ExternalFiltersTableComponent"],
                    resolve: {
                        tableData: _tables_resolver__WEBPACK_IMPORTED_MODULE_7__["ExternalFiltersTableResolver"]
                    }
                }
            ];
            var TablesModule = /** @class */ (function () {
                function TablesModule() {
                }
                return TablesModule;
            }());
            TablesModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
                Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
                    declarations: [
                        _regular_tables_regular_tables_component__WEBPACK_IMPORTED_MODULE_6__["RegularTablesComponent"],
                        _extended_tables_extended_tables_component__WEBPACK_IMPORTED_MODULE_9__["ExtendedTablesComponent"],
                        _smart_tables_smart_tables_component__WEBPACK_IMPORTED_MODULE_10__["SmartTablesComponent"],
                        _external_filters_table_external_filters_table_component__WEBPACK_IMPORTED_MODULE_11__["ExternalFiltersTableComponent"]
                    ],
                    imports: [
                        _angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"],
                        _shared_shared_module__WEBPACK_IMPORTED_MODULE_4__["SharedModule"],
                        _angular_cdk_drag_drop__WEBPACK_IMPORTED_MODULE_5__["DragDropModule"],
                        _angular_router__WEBPACK_IMPORTED_MODULE_3__["RouterModule"].forChild(tablesRoutes)
                    ],
                    providers: [
                        _table_data_service__WEBPACK_IMPORTED_MODULE_8__["TableDataService"],
                        _tables_resolver__WEBPACK_IMPORTED_MODULE_7__["RegularTablesResolver"],
                        _tables_resolver__WEBPACK_IMPORTED_MODULE_7__["ExtendedTablesResolver"],
                        _tables_resolver__WEBPACK_IMPORTED_MODULE_7__["SmartTablesResolver"],
                        _tables_resolver__WEBPACK_IMPORTED_MODULE_7__["ExternalFiltersTableResolver"]
                    ]
                })
            ], TablesModule);
            /***/ 
        }),
        /***/ "./src/app/tables/tables.resolver.ts": 
        /*!*******************************************!*\
          !*** ./src/app/tables/tables.resolver.ts ***!
          \*******************************************/
        /*! exports provided: RegularTablesResolver, ExtendedTablesResolver, SmartTablesResolver, ExternalFiltersTableResolver */
        /***/ (function (module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RegularTablesResolver", function () { return RegularTablesResolver; });
            /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ExtendedTablesResolver", function () { return ExtendedTablesResolver; });
            /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SmartTablesResolver", function () { return SmartTablesResolver; });
            /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ExternalFiltersTableResolver", function () { return ExternalFiltersTableResolver; });
            /* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
            /* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
            /* harmony import */ var _table_data_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./table-data.service */ "./src/app/tables/table-data.service.ts");
            var RegularTablesResolver = /** @class */ (function () {
                function RegularTablesResolver(tableDataService) {
                    this.tableDataService = tableDataService;
                }
                RegularTablesResolver.prototype.resolve = function () {
                    var _this = this;
                    return new Promise(function (resolve, reject) {
                        _this.tableDataService.getRegularTableData()
                            .subscribe(function (tableData) {
                            return resolve(tableData);
                        });
                    });
                };
                return RegularTablesResolver;
            }());
            RegularTablesResolver.ctorParameters = function () { return [
                { type: _table_data_service__WEBPACK_IMPORTED_MODULE_2__["TableDataService"] }
            ]; };
            RegularTablesResolver = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
                Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
            ], RegularTablesResolver);
            var ExtendedTablesResolver = /** @class */ (function () {
                function ExtendedTablesResolver(tableDataService) {
                    this.tableDataService = tableDataService;
                }
                ExtendedTablesResolver.prototype.resolve = function () {
                    var _this = this;
                    return new Promise(function (resolve, reject) {
                        _this.tableDataService.getExtendedTableData()
                            .subscribe(function (tableData) {
                            return resolve(tableData);
                        });
                    });
                };
                return ExtendedTablesResolver;
            }());
            ExtendedTablesResolver.ctorParameters = function () { return [
                { type: _table_data_service__WEBPACK_IMPORTED_MODULE_2__["TableDataService"] }
            ]; };
            ExtendedTablesResolver = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
                Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
            ], ExtendedTablesResolver);
            var SmartTablesResolver = /** @class */ (function () {
                function SmartTablesResolver(tableDataService) {
                    this.tableDataService = tableDataService;
                }
                SmartTablesResolver.prototype.resolve = function () {
                    var _this = this;
                    return new Promise(function (resolve, reject) {
                        _this.tableDataService.getSmartTableData()
                            .subscribe(function (tableData) {
                            return resolve(tableData);
                        });
                    });
                };
                return SmartTablesResolver;
            }());
            SmartTablesResolver.ctorParameters = function () { return [
                { type: _table_data_service__WEBPACK_IMPORTED_MODULE_2__["TableDataService"] }
            ]; };
            SmartTablesResolver = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
                Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
            ], SmartTablesResolver);
            var ExternalFiltersTableResolver = /** @class */ (function () {
                function ExternalFiltersTableResolver(tableDataService) {
                    this.tableDataService = tableDataService;
                }
                ExternalFiltersTableResolver.prototype.resolve = function () {
                    var _this = this;
                    return new Promise(function (resolve, reject) {
                        _this.tableDataService.getRecentOrdersTableData()
                            .subscribe(function (recentOrdersData) {
                            return resolve(recentOrdersData);
                        });
                    });
                };
                return ExternalFiltersTableResolver;
            }());
            ExternalFiltersTableResolver.ctorParameters = function () { return [
                { type: _table_data_service__WEBPACK_IMPORTED_MODULE_2__["TableDataService"] }
            ]; };
            ExternalFiltersTableResolver = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
                Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
            ], ExternalFiltersTableResolver);
            /***/ 
        })
    }]);
//# sourceMappingURL=tables-tables-module-es2015.js.map
//# sourceMappingURL=tables-tables-module-es5.js.map
//# sourceMappingURL=tables-tables-module-es5.js.map